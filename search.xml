<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>STM32HAL库+ESP8266+cJSON+微信小程序_连接华为云物联网平台</title>
      <link href="/post/128fa5d4.html"/>
      <url>/post/128fa5d4.html</url>
      
        <content type="html"><![CDATA[<h1>STM32HAL库+ESP8266+cJSON+微信小程序_连接华为云物联网平台</h1><blockquote><p>实验使用资源：正点原子F407</p><p>USART1：PA9P、A10（串口打印调试）</p><p>USART3：PB10、PB11（WiFi模块）</p><p>DHT11：PG9（采集数据、上报）</p><p>LED0、1：PF9、PF10（根据收到的命令，控制亮灭）</p><p>显示屏（可有可无）</p></blockquote><h2 id="0-前置内容准备">0 前置内容准备</h2><p>以下内容请参考之前写过的博客</p><ul><li>HAL库创建工程【<a href="https://blog.csdn.net/qq_61228493/article/details/129995099">STM32CubeMX安装_stm32cubemx下载-CSDN博客</a>】</li><li>ESP8266固件烧录【<a href="https://blog.csdn.net/qq_61228493/article/details/131135545#t7">ESP8266烧录AT指令</a>】</li></ul><h2 id="1-华为云物联网平台创建产品">1 华为云物联网平台创建产品</h2><h3 id="1-1新建产品">1.1新建产品</h3><ol><li>在华为云设备接入IoTDA平台，点击左上角的【创建产品】，参考下图填写产品信息。</li></ol><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220618.png" alt="image-20240711132001834" style="zoom: 80%;" /><ol start="2"><li>创建完成后进入创建的产品，进行产品模型设置。首先先创建一个服务，服务ID自己根据实际写。</li><li>点击【新增属性】，根据实际需求，添加需要交互的数据及其类型和访问方式。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220463.png" alt="image-20240711132024325"></p><ol start="4"><li>点击【添加命令】，进行指令的设置，【下发参数】就是下发指令控制设备，【响应参数】就是读取设备上传信息。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220465.png" alt="image-20240711132035496"></p><h3 id="1-2-新建设备">1.2 新建设备</h3><p>在【所有设备】界面，点击的【注册设备】添加设备</p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220466.png" alt="image-20240711132056840" style="zoom: 80%;" /><h3 id="1-3-获取MQTT三元素">1.3 获取MQTT三元素</h3><p>在新创建的设备中，点击查看MQTT连接参数，即可获取三元素</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220467.png" alt="image-20240711132117212"></p><h3 id="1-4-获取订阅Topic">1.4 获取订阅Topic</h3><p>在之前创建的产品中，Topic管理里面包含我们需要订阅的Topic</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220468.png" alt="image-20240711132126727"></p><h2 id="2-usart模块">2 usart模块</h2><ol><li>将【stm32f1xx_it.c】里面的<code>void USART1_IRQHandler(void)</code> 和<code>void USART3_IRQHandler(void)</code>函数注释掉</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220469.png" alt="image-20240711132620880"></p><ol start="2"><li>将下面的代码粘贴到【usart.c】中的最下面的<code>/* USER CODE BEGIN 1 */</code>和<code>/* USER CODE END 1 */</code>之间</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       ATK-MW8266D UART printf</span></span><br><span class="line"><span class="comment"> * @param       fmt: 待打印的数据</span></span><br><span class="line"><span class="comment"> * @retval      无</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_printf</span><span class="params">(<span class="type">char</span> *fmt, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    va_list ap;</span><br><span class="line">    <span class="type">uint16_t</span> len;</span><br><span class="line">    </span><br><span class="line">    va_start(ap, fmt);</span><br><span class="line">    <span class="built_in">vsprintf</span>((<span class="type">char</span> *)g_uart_tx_buf, fmt, ap);</span><br><span class="line">    va_end(ap);</span><br><span class="line">    </span><br><span class="line">    len = <span class="built_in">strlen</span>((<span class="type">const</span> <span class="type">char</span> *)g_uart_tx_buf);</span><br><span class="line">    HAL_UART_Transmit(&amp;huart3, g_uart_tx_buf, len, HAL_MAX_DELAY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       ATK-MW8266D UART重新开始接收数据</span></span><br><span class="line"><span class="comment"> * @param       无</span></span><br><span class="line"><span class="comment"> * @retval      无</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_rx_restart</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    g_uart_rx_frame.sta.len     = <span class="number">0</span>;</span><br><span class="line">    g_uart_rx_frame.sta.finsh   = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       获取ATK-MW8266D UART接收到的一帧数据</span></span><br><span class="line"><span class="comment"> * @param       无</span></span><br><span class="line"><span class="comment"> * @retval      NULL: 未接收到一帧数据</span></span><br><span class="line"><span class="comment"> *              其他: 接收到的一帧数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint8_t</span> *<span class="title function_">atk_mw8266d_uart_rx_get_frame</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (g_uart_rx_frame.sta.finsh == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        g_uart_rx_frame.buf[g_uart_rx_frame.sta.len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> g_uart_rx_frame.buf;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       获取ATK-MW8266D UART接收到的一帧数据的长度</span></span><br><span class="line"><span class="comment"> * @param       无</span></span><br><span class="line"><span class="comment"> * @retval      0   : 未接收到一帧数据</span></span><br><span class="line"><span class="comment"> *              其他: 接收到的一帧数据的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">atk_mw8266d_uart_rx_get_frame_len</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (g_uart_rx_frame.sta.finsh == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> g_uart_rx_frame.sta.len;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYS_SUPPORT_OS                                                   <span class="comment">/* 使用OS */</span></span></span><br><span class="line">    OSIntEnter();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    HAL_UART_IRQHandler(&amp;huart1);                               <span class="comment">/* 调用HAL库中断处理公用函数 */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (HAL_UART_Receive_IT(&amp;huart1, (<span class="type">uint8_t</span> *)g_rx_buffer, RXBUFFERSIZE) != HAL_OK)     <span class="comment">/* 重新开启中断并接收数据 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* 如果出错会卡死在这里 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYS_SUPPORT_OS                                                   <span class="comment">/* 使用OS */</span></span></span><br><span class="line">    OSIntExit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART3_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART3_IRQn 0 */</span></span><br><span class="line">  HAL_UART_IRQHandler(&amp;huart3);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART3_IRQn 1 */</span></span><br><span class="line">    <span class="type">uint8_t</span> tmp;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_ORE) != RESET)        <span class="comment">/* UART接收过载错误中断 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        __HAL_UART_CLEAR_OREFLAG(&amp;huart3);                           <span class="comment">/* 清除接收过载错误中断标志 */</span></span><br><span class="line">        (<span class="type">void</span>)huart3.Instance-&gt;SR;                                   <span class="comment">/* 先读SR寄存器，再读DR寄存器 */</span></span><br><span class="line">        (<span class="type">void</span>)huart3.Instance-&gt;DR;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_RXNE) != RESET)       <span class="comment">/* UART接收中断 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Receive(&amp;huart3, &amp;tmp, <span class="number">1</span>, HAL_MAX_DELAY);           <span class="comment">/* UART接收数据 */</span></span><br><span class="line">        <span class="keyword">if</span> (g_uart_rx_frame.sta.len &lt; (<span class="number">256</span> - <span class="number">1</span>))   <span class="comment">/* 判断UART接收缓冲是否溢出</span></span><br><span class="line"><span class="comment">                                                                             * 留出一位给结束符&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">                                                                             */</span></span><br><span class="line">        &#123;</span><br><span class="line">            g_uart_rx_frame.buf[g_uart_rx_frame.sta.len] = tmp;             <span class="comment">/* 将接收到的数据写入缓冲 */</span></span><br><span class="line">            g_uart_rx_frame.sta.len++;                                      <span class="comment">/* 更新接收到的数据长度 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                                                <span class="comment">/* UART接收缓冲溢出 */</span></span><br><span class="line">        &#123;</span><br><span class="line">            g_uart_rx_frame.sta.len = <span class="number">0</span>;                                    <span class="comment">/* 覆盖之前收到的数据 */</span></span><br><span class="line">            g_uart_rx_frame.buf[g_uart_rx_frame.sta.len] = tmp;             <span class="comment">/* 将接收到的数据写入缓冲 */</span></span><br><span class="line">            g_uart_rx_frame.sta.len++;                                      <span class="comment">/* 更新接收到的数据长度 */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_IDLE) != RESET)       <span class="comment">/* UART总线空闲中断 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        g_uart_rx_frame.sta.finsh = <span class="number">1</span>;                                      <span class="comment">/* 标记帧接收完成 */</span></span><br><span class="line">        </span><br><span class="line">        __HAL_UART_CLEAR_IDLEFLAG(&amp;huart3);                          <span class="comment">/* 清除UART总线空闲中断 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END USART3_IRQn 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在【usart.c】上面的的<code>/* USER CODE BEGIN 0 */</code>和<code>/* USER CODE END 0 */</code>之间加入下面的代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> import(__use_no_semihosting)             </span></span><br><span class="line"><span class="comment">//标准库需要的支持函数                 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">FILE</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="type">int</span> handle; </span><br><span class="line"></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line"><span class="type">void</span> _sys_exit(<span class="type">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重定义fputc函数 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="keyword">while</span>((USART1-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">    USART1-&gt;DR = (<span class="type">uint8_t</span>) ch;      </span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> g_rx_buffer[RXBUFFERSIZE];  <span class="comment">/* HAL库使用的串口接收缓冲 */</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在【usart.c】中的<code>void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)</code>函数中调整中断优先级，WiFi的usart3的高于串口的，同时添加usar使能</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220470.png" alt="image-20240711133047696"></p><ol start="5"><li>在【usart.h】中的<code>/* USER CODE BEGIN Private defines */</code>和<code>/* USER CODE END Private defines */</code>之间加入下面的代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">uint8_t</span> buf[<span class="number">256</span>];              <span class="comment">/* 帧接收缓冲 */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">uint16_t</span> len    : <span class="number">15</span>;                               <span class="comment">/* 帧接收长度，sta[14:0] */</span></span><br><span class="line">        <span class="type">uint16_t</span> finsh  : <span class="number">1</span>;                                <span class="comment">/* 帧接收完成标志，sta[15] */</span></span><br><span class="line">    &#125; sta;                                                  <span class="comment">/* 帧状态信息 */</span></span><br><span class="line">&#125; g_uart_rx_frame = &#123;<span class="number">0</span>&#125;;                                    <span class="comment">/* ATK-MW8266D UART接收帧缓冲信息结构体 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> g_uart_tx_buf[<span class="number">1024</span>]; <span class="comment">/* ATK-MW8266D UART发送缓冲 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RXBUFFERSIZE   1                        <span class="comment">/* 缓存大小 */</span></span></span><br></pre></td></tr></table></figure><ol start="6"><li>在【usart.h】中的<code>/* USER CODE BEGIN Prototypes */</code>和<code>/* USER CODE END Prototypes */</code>之间加入下面的代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_printf</span><span class="params">(<span class="type">char</span> *fmt, ...)</span>;       <span class="comment">/* ATK-MW8266D UART printf */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_rx_restart</span><span class="params">(<span class="type">void</span>)</span>;             <span class="comment">/* ATK-MW8266D UART重新开始接收数据 */</span></span><br><span class="line"><span class="type">uint8_t</span> *<span class="title function_">atk_mw8266d_uart_rx_get_frame</span><span class="params">(<span class="type">void</span>)</span>;       <span class="comment">/* 获取ATK-MW8266D UART接收到的一帧数据 */</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">atk_mw8266d_uart_rx_get_frame_len</span><span class="params">(<span class="type">void</span>)</span>;   <span class="comment">/* 获取ATK-MW8266D UART接收到的一帧数据的长度 */</span></span><br></pre></td></tr></table></figure><h2 id="3-WiFi模块">3 WiFi模块</h2><p>将提前编写好的<code>esp8266.c/.h</code>文件分别加入Src和Inc文件夹，然后再在keil里将<code>esp8266.c</code>文件加入工程。</p><h2 id="4-CJSON模块移植">4 CJSON模块移植</h2><p>移植过程查看之前写的另一篇博客【<a href="https://blog.csdn.net/qq_61228493/article/details/138252055#t8">CJSON模块</a>】</p><h2 id="5-WIFI连接华为云">5 WIFI连接华为云</h2><ol><li>创建wifi_HW.c/.h文件。</li><li>在wifi_HW.h中宏定义连接华为云相关参数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Wi-Fi用户名和密码</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIFI_User  <span class="string">&quot;***&quot;</span>  <span class="comment">// Wi-Fi网络名称</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIFI_Pass    <span class="string">&quot;***&quot;</span>  <span class="comment">// Wi-Fi网络密码</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ESP8266设备在华为云IoT平台的认证信息</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESP8266_UserName  <span class="string">&quot;***&quot;</span>  <span class="comment">// 用户名，通常为设备ID</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESP8266_PassWord <span class="string">&quot;***&quot;</span>  <span class="comment">// 密码或密钥</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESP8266_ClientID <span class="string">&quot;***&quot;</span>  <span class="comment">// MQTT客户端ID</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESP8266_Domain_Name <span class="string">&quot;***&quot;</span>  <span class="comment">// 华为云IoT平台的域名</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESP8266_Port  1883  <span class="comment">// MQTT服务端口</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ESP8266_Reconnect 1  <span class="comment">// 是否允许设备在断开连接后尝试重新连接</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 华为云MQTT服务相关设置</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ServiceID <span class="string">&quot;***&quot;</span>  <span class="comment">// 服务ID</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_DeviceID         <span class="string">&quot;***&quot;</span>  <span class="comment">// 设备ID</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_commands             <span class="string">&quot;$oc/devices/***/sys/commands/#&quot;</span>  <span class="comment">// 命令订阅主题</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_commands_response    <span class="string">&quot;$oc/devices/***/sys/commands/response/request_id=&quot;</span>  <span class="comment">// 命令响应主题</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_report               <span class="string">&quot;$oc/devices/***/sys/properties/report&quot;</span>  <span class="comment">// 属性上报主题</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>编写wifi_HW.c文件，调用esp8266.c中编写的函数连接华为云，然后将该函数名加入wifi_HW.h中。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">wifi_init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="type">uint8_t</span> ret = <span class="number">0</span>;</span><br><span class="line">ret  = ESP8266_Reset();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret = ESP8266_ATE(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret = ESP8066_Mode(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret = ESP8266_WiFi(WIFI_User, WIFI_Pass);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret = ESP8266_MQTTUSERCFG(ESP8266_UserName, ESP8266_PassWord);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;5: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret = ESP8266_MQTTCLIENTID(ESP8266_ClientID);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;6: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret =  ESP8266_MQTTCONN(ESP8266_Domain_Name,ESP8266_Port,ESP8266_Reconnect);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;7: %d\r\n&quot;</span>,ret);</span><br><span class="line">ret =  ESP8266_MQTTSUB(HUAWEI_MQTT_commands);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;8: %d\r\n&quot;</span>,ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-数据交互">6 数据交互</h2><h3 id="6-1-设备属性上报">6.1 设备属性上报</h3><p>参考华为云官方给出的MQTT属性上报样例，在wifi_HW.c中编写<code>report_Json</code>函数，使用cJSON模块封装传感器数据，然后将其发送到云平台。</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220471.png" alt="image-20240711133903836"></p><p>可以看出该消息的JSON格式：</p><p>(1)   在根对象中，有一个名为services的键，其值是一个数组。</p><p>(2)   在services数组中，有一个服务对象，它包含两个键：service_id和properties</p><p>(3)   在properties对象中，存放的键值对就是在产品中创建的属性。</p><p>根据这种格式，在<code>report_Json</code>函数中封装JSON消息</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">report_Json</span><span class="params">(<span class="type">uint8_t</span> temperature, <span class="type">uint8_t</span> humidity,<span class="type">uint8_t</span> adcx)</span>&#123;</span><br><span class="line">    <span class="type">uint8_t</span> cmd[<span class="number">1024</span>]; <span class="comment">// 用于存储构建的AT命令</span></span><br><span class="line">    <span class="type">char</span> *str = <span class="literal">NULL</span>; <span class="comment">// 指向JSON字符串的指针</span></span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>; <span class="comment">// 循环迭代变量</span></span><br><span class="line">    <span class="type">uint8_t</span> params_buf[<span class="number">1024</span>]; <span class="comment">// 用于存储处理过的JSON字符串</span></span><br><span class="line">    <span class="type">uint16_t</span> move_num = <span class="number">0</span>; <span class="comment">// 用于记录字符串处理过程中的移动次数</span></span><br><span class="line">    </span><br><span class="line">    cJSON *json = cJSON_CreateObject(); <span class="comment">// 创建一个空的JSON对象</span></span><br><span class="line">    cJSON *properties_cjson = cJSON_CreateObject(); <span class="comment">// 创建一个空的子JSON对象，用于存储属性</span></span><br><span class="line">    cJSON *service = cJSON_CreateObject(); <span class="comment">// 创建一个空的子JSON对象，用于存储服务信息</span></span><br><span class="line">    cJSON *services_array = cJSON_CreateArray(); <span class="comment">// 创建一个空的JSON数组，用于存储服务数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 向属性对象中添加温度、湿度和光照强度数据</span></span><br><span class="line">    cJSON_AddNumberToObject(properties_cjson, <span class="string">&quot;temperature&quot;</span>, temperature);</span><br><span class="line">    cJSON_AddNumberToObject(properties_cjson, <span class="string">&quot;humidity&quot;</span>, humidity);</span><br><span class="line">cJSON_AddNumberToObject(properties_cjson, <span class="string">&quot;light&quot;</span>, adcx);</span><br><span class="line">    <span class="comment">// 向服务对象中添加服务ID和属性</span></span><br><span class="line">cJSON_AddStringToObject(service, <span class="string">&quot;service_id&quot;</span>, <span class="string">&quot;yun&quot;</span>);</span><br><span class="line">    cJSON_AddItemToObject(service, <span class="string">&quot;properties&quot;</span>, properties_cjson);</span><br><span class="line">cJSON_AddItemToObject(json, <span class="string">&quot;services&quot;</span>, services_array);</span><br><span class="line"> <span class="comment">// 将服务数组添加到JSON对象中</span></span><br><span class="line">cJSON_AddItemToArray(services_array, service);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将JSON对象转换为无格式的字符串</span></span><br><span class="line">    str = cJSON_PrintUnformatted(json);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印JSON格式的字符串</span></span><br><span class="line">    <span class="comment">//printf(&quot;json格式 = %s\r\n&quot;, str);</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 为MQTT发布添加转义字符</span></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; *str != <span class="string">&#x27;\0&#x27;</span>; i++)&#123;</span><br><span class="line">        params_buf[i] = *str;</span><br><span class="line">        <span class="comment">// 如果下一个字符是引号或逗号，添加转义字符</span></span><br><span class="line">        <span class="keyword">if</span>(*(str + <span class="number">1</span>) == <span class="string">&#x27;&quot;&#x27;</span> || *(str + <span class="number">1</span>) == <span class="string">&#x27;,&#x27;</span>)&#123;</span><br><span class="line">            params_buf[++i] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        str++;</span><br><span class="line">        move_num++;</span><br><span class="line">    &#125;</span><br><span class="line">    str = str - move_num; <span class="comment">// 回退指针到JSON字符串的开始</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印处理过的JSON字符串</span></span><br><span class="line">    <span class="comment">//printf(&quot;params_buf = %s\r\n&quot;, params_buf);</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构建AT命令</span></span><br><span class="line">    <span class="built_in">sprintf</span>((<span class="type">char</span> *)cmd,<span class="string">&quot;AT+MQTTPUB=0,\&quot;&quot;</span>HUAWEI_MQTT_report<span class="string">&quot;\&quot;,\&quot;%s\&quot;,0,0\r\n&quot;</span>,params_buf);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打印即将发送的AT命令</span></span><br><span class="line">    <span class="comment">//printf(&quot;开始发送数据:%s&quot;, cmd);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送AT命令并通过ESP8266模块</span></span><br><span class="line">    ESP8266_Sent_AT(cmd, <span class="string">&quot;OK&quot;</span>, <span class="number">500</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 清理JSON对象占用的内存</span></span><br><span class="line">    cJSON_Delete(json);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果分配了额外的字符串空间，释放它</span></span><br><span class="line">    <span class="keyword">if</span>(str != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">free</span>(str);</span><br><span class="line">        str = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//printf(&quot;释放str空间成功\r\n&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-云端命令下发">6.2 云端命令下发</h3><p>参考华为云官方给出的MQTT下行请求样例，在wifi_HW.c中编写rcv_json函数，解析云平台下发的JSON消息字符串，如果成功接收后，需要给云平台返回接收成功的消息命令。</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220472.png" alt="image-20240711134008564"></p><p>从给出的样例中可以看出，下发的指令在paras键所对应的JSON值中，只需分析其中的键的名字，然后读取相匹配的键的值，即可获取下发的命令。</p><p>参考下图响应参数的格式，可知响应参数只需发送订阅的topic和下发命令中的request_id的值即可，后面的JSON消息体均可省略。</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220473.png" alt="image-20240711134038430"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">rcv_json</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="type">uint8_t</span> *ret = <span class="literal">NULL</span>; <span class="comment">// 用于存储接收到的数据帧</span></span><br><span class="line">    cJSON *cjson = <span class="literal">NULL</span>; <span class="comment">// 用于存储解析后的JSON对象</span></span><br><span class="line">    <span class="type">char</span> topic_buff[<span class="number">1024</span>]; <span class="comment">// 用于存储MQTT主题</span></span><br><span class="line">    <span class="type">int</span> num; <span class="comment">// 用于存储接收数据的数量</span></span><br><span class="line">    <span class="type">char</span> recv_buffer[<span class="number">1024</span>]; <span class="comment">// 用于存储接收到的JSON数据</span></span><br><span class="line"><span class="type">char</span> request_id[<span class="number">37</span>];</span><br><span class="line"><span class="type">char</span> device_id[<span class="number">256</span>];</span><br><span class="line"><span class="type">uint8_t</span> cmd[<span class="number">1024</span>]; <span class="comment">// 用于存储构建的AT命令</span></span><br><span class="line">    </span><br><span class="line">    ret = atk_mw8266d_uart_rx_get_frame(); <span class="comment">// 获取UART接收到的数据帧</span></span><br><span class="line">    atk_mw8266d_uart_rx_restart(); <span class="comment">// 重启UART接收</span></span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> *ptr_recv = <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)ret,<span class="string">&quot;+MQTTSUBRECV&quot;</span>); <span class="comment">// 检查是否包含MQTT订阅数据标志</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(ptr_recv!=<span class="literal">NULL</span>)&#123; <span class="comment">// 如果是MQTT订阅数据</span></span><br><span class="line">        <span class="built_in">memset</span>(device_id,<span class="number">0</span>,<span class="keyword">sizeof</span>(device_id)); </span><br><span class="line"><span class="built_in">memset</span>(request_id,<span class="number">0</span>,<span class="keyword">sizeof</span>(request_id)); </span><br><span class="line">        </span><br><span class="line"><span class="built_in">sscanf</span>((<span class="type">char</span> *)ret, <span class="string">&quot;+MQTTSUBRECV:0,\&quot;$oc/devices/%255[^/]/sys/commands/request_id=%36s\&quot;,%d,%255s&quot;</span>, device_id, request_id, &amp;num, recv_buffer);</span><br><span class="line"></span><br><span class="line"><span class="comment">//printf(&quot;判断DeviceID:  %s\r\n&quot;,device_id);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// printf(&quot;接收数据成功，开始解析  %s\r\n&quot;,recv_buffer);</span></span><br><span class="line"><span class="comment">//判断DeviceID</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(device_id,HUAWEI_MQTT_DeviceID)) &#123;</span><br><span class="line">            <span class="comment">// printf(&quot;接收数据成功，开始解析  %s\r\n&quot;,recv_buffer);</span></span><br><span class="line">            cjson = cJSON_Parse(recv_buffer); <span class="comment">// 解析JSON数据</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cjson==<span class="literal">NULL</span>) <span class="comment">// 如果JSON解析失败</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;cjson 解析错误\r\n&quot;</span>); <span class="comment">// 打印错误信息</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cJSON *json_data = cJSON_GetObjectItem(cjson,<span class="string">&quot;paras&quot;</span>); <span class="comment">// 获取JSON对象中的paras项</span></span><br><span class="line">            <span class="keyword">if</span>(json_data==<span class="literal">NULL</span>)&#123; </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;cjson  没有数据\r\n&quot;</span>); <span class="comment">// 打印错误信息</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// printf(&quot;cjson 内存大小为 = %d\r\n&quot;,sizeof(cjson)); // 打印JSON对象的内存大小</span></span><br><span class="line">                <span class="comment">// 解析数据</span></span><br><span class="line">                <span class="keyword">if</span>(cJSON_GetObjectItem(json_data,<span class="string">&quot;led_flag&quot;</span>)!=<span class="literal">NULL</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    LED_Switch = cJSON_GetObjectItem(json_data,<span class="string">&quot;led_flag&quot;</span>)-&gt;valueint; </span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;csjon解析成功 LED_Switch = %d\r\n&quot;</span>,LED_Switch); </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(cJSON_GetObjectItem(json_data,<span class="string">&quot;temp_flag&quot;</span>)!=<span class="literal">NULL</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    temp_LED_Switch = cJSON_GetObjectItem(json_data,<span class="string">&quot;temp_flag&quot;</span>)-&gt;valueint; </span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;csjon解析成功 temp_LED_Switch = %d\r\n&quot;</span>,temp_LED_Switch);</span><br><span class="line">                &#125;</span><br><span class="line"><span class="type">char</span> full_topic[<span class="number">256</span>];    </span><br><span class="line"><span class="built_in">snprintf</span>(full_topic, <span class="keyword">sizeof</span>(full_topic), <span class="string">&quot;%s%s&quot;</span>, HUAWEI_MQTT_commands_response, request_id);</span><br><span class="line"><span class="built_in">sprintf</span>((<span class="type">char</span> *)cmd, <span class="string">&quot;AT+MQTTPUB=0,\&quot;%s\&quot;,\&quot;\&quot;,0,0\r\n&quot;</span>, full_topic);</span><br><span class="line">ESP8266_Sent_AT(cmd, <span class="string">&quot;OK&quot;</span>, <span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            cJSON_Delete(cjson); <span class="comment">// 删除JSON对象，释放内存</span></span><br><span class="line">            <span class="comment">//cJSON_Delete(json_data);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-微信小程序连接华为云">7 微信小程序连接华为云</h2><h3 id="7-1-开发方式">7.1 开发方式</h3><ol><li>使用微信开发工具创建微信小程序项目</li><li>微信小程序调用应用侧API，获取云平台数据</li><li>将获得的数据进行显示</li></ol><h3 id="7-2-微信小程序创建">7.2 微信小程序创建</h3><p>【略…】</p><h3 id="7-3-创建IAM账户（云平台）">7.3 创建IAM账户（云平台）</h3><ol><li>统一身份认证（Identity and Access Management，简称IAM）是华为云提供权限管理的基础服务，可以安全地控制云服务和资源的访问权限。应用侧需要通过IAM服务鉴权，获取token。因此在开发之前需要先创建IAM用户。</li><li>在【统一身份认证服务】页面，点击【创建用户】，参考下图创建账号，里面填写的自定义密码需要记住，然后将其加入【admin】用户组。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220474.png" alt="image-20240711163436427"></p><ol start="3"><li>创建成功后，退出登录华为云，使用IAM账号登录华为云，验证是否成功。</li></ol><h3 id="7-3-获取Token（小程序）">7.3 获取Token（小程序）</h3><ol><li>参考华为云提供的请求示例，发送获取Token的http请求消息</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220475.png" alt="image-20240711163600226"></p><ol start="2"><li>华为云认证通过后向应用服务器返回鉴权令牌<code>X-Subject-Token</code>，接口返回的响应消息头中<code>X-Subject-Token</code>就是需要获取的用户Token。根据上述示例，在微信开发工具中，使用<code>wx.request</code>发送请求，然后分析响应消息头，获取Token。</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">gettoken</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> that=<span class="variable language_">this</span>;   </span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;https://iam.cn-north-4.myhuaweicloud.com/v3/auth/tokens&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>:<span class="string">&#x27;&#123;&quot;auth&quot;: &#123; &quot;identity&quot;: &#123;&quot;methods&quot;: [&quot;password&quot;],&quot;password&quot;: &#123;&quot;user&quot;: &#123;&quot;name&quot;: &quot;***&quot;,&quot;password&quot;: &quot;***&quot;,&quot;domain&quot;: &#123;&quot;name&quot;: &quot;***&quot;&#125;&#125;&#125;&#125;,&quot;scope&quot;: &#123;&quot;project&quot;: &#123;&quot;name&quot;: &quot;cn-north-4&quot;&#125;&#125;&#125;&#125;&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="comment">// OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT</span></span><br><span class="line">        <span class="attr">header</span>: &#123;<span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span> &#125;, <span class="comment">// 请求的 header </span></span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>)&#123;<span class="comment">// success</span></span><br><span class="line">            <span class="keyword">var</span> token=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            token=<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res.<span class="property">header</span>[<span class="string">&#x27;X-Subject-Token&#x27;</span>]);<span class="comment">//解析消息头的token</span></span><br><span class="line">            token=token.<span class="title function_">replaceAll</span>(<span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;token&#x27;</span>,token);</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>获取Token后，再调用其他接口时，需要在请求消息头中添加<code>X-Auth-Token</code>，其值为获取到的Token。例如Token值为“ABCDEFJ…”，则调用接口时将“X-Auth-Token: ABCDEFJ…”加到请求消息头即可，如下所示。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220476.png" alt="image-20240711163733218"></p><h3 id="7-4-获取设备影子（小程序）">7.4 获取设备影子（小程序）</h3><ol><li>参考请求示例，发送请求获取设备影子数据。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220477.png" alt="image-20240711163937333"></p><ol start="2"><li>查看返回的HTTP响应消息，查看所需要的数据所在位置，如下图所示，可以发现我们需要的数据在data里面的shadow[0]中的reported下的properties里面。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220478.png" alt="image-20240711163914226"></p><ol start="3"><li>根据分析的结果，在微信开发工具中编写代码，获取数据。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getinfo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">var</span> token = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;token&#x27;</span>);<span class="comment">//读缓存中保存的token</span></span><br><span class="line">      wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;https://653a151f50.st1.iotda-app.cn-north-4.myhuaweicloud.com:443/v5/iot/661f377e2ccc1a583881a678/devices/661f377e2ccc1a583881a678_yun_dht11/shadow&#x27;</span>,</span><br><span class="line">        <span class="attr">data</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>, <span class="comment">// OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT</span></span><br><span class="line">        <span class="attr">header</span>: &#123;<span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,<span class="string">&#x27;X-Auth-Token&#x27;</span>:token &#125;,</span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">      that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">humi</span>:res.<span class="property">data</span>.<span class="property">shadow</span>[<span class="number">0</span>].<span class="property">reported</span>.<span class="property">properties</span>.<span class="property">humidity</span>,</span><br><span class="line">        <span class="attr">temp</span>:res.<span class="property">data</span>.<span class="property">shadow</span>[<span class="number">0</span>].<span class="property">reported</span>.<span class="property">properties</span>.<span class="property">temperature</span>,</span><br><span class="line">        <span class="attr">light</span>:res.<span class="property">data</span>.<span class="property">shadow</span>[<span class="number">0</span>].<span class="property">reported</span>.<span class="property">properties</span>.<span class="property">light</span></span><br><span class="line">      &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-5-下发设备命令（小程序）">7.5 下发设备命令（小程序）</h3><p>参考请求示例，在微信开发工具中编写代码下发命令。</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220479.png" alt="image-20240711164055147"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(that.<span class="property">data</span>.<span class="property">lset</span> &gt; that.<span class="property">data</span>.<span class="property">light</span>)&#123;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;https://653a151f50.st1.iotda-app.cn-north-4.myhuaweicloud.com:443/v5/iot/661f377e2ccc1a583881a678/devices/661f377e2ccc1a583881a678_yun_dht11/commands&#x27;</span>,</span><br><span class="line">      <span class="attr">data</span>:<span class="string">&#x27;&#123;&quot;service_id&quot;: &quot;yun&quot;,&quot;command_name&quot;: &quot;led&quot;,&quot;paras&quot;: &#123;&quot;led_flag&quot;: true&#125;&#125;&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="comment">// OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT</span></span><br><span class="line">      <span class="attr">header</span>: &#123;<span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,<span class="string">&#x27;X-Auth-Token&#x27;</span>:token &#125;, <span class="comment">//请求的header </span></span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">res</span>)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下发命令成功&quot;</span>);<span class="comment">//打印完整消息</span></span><br><span class="line">      &#125;, </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-小程序界面设计">8 小程序界面设计</h2><h3 id="8-1-主页数据显示">8.1 主页数据显示</h3><p>在wxml中设置布局，在wxss中设置样式，如下图所示。</p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220480.png" alt="image-20240711164231993" style="zoom:50%;" /><h3 id="8-2-Echarts数据可视化">8.2 Echarts数据可视化</h3><p><a href="https://echarts.apache.org/zh/index.html">ECharts</a>一个使用JavaScript实现的开源可视化库。ECharts提供了常规的折线图、柱状图、散点图、饼图、K线图，用于统计的盒形图，用于地理数据可视化的地图、热力图、线图，用于关系数据可视化的关系图、treemap、旭日图，多维数据可视化的平行坐标，还有用于BI的漏斗图，仪表盘，并且支持图与图之间的混搭。</p><p>微信小程序使用Echarts进行可视化的步骤如下所示。</p><ol><li>将Echarts下载到本地，并放入的微信小程序工程文件夹中，如下图所示。</li></ol><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220481.png" alt="image-20240711164417307" style="zoom:50%;" /><ol start="2"><li>在lineset.json中引入ec-canvas组件，如下图所示。</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202407151220482.png" alt="image-20240711164440044"></p><ol start="3"><li><p>参考官网给出的折线图堆叠示例，编写该图像的显示函数function line_set(chart,time_data,hum_data,tem_data,ligh_data)。</p></li><li><p>初始化图表，同时调用line_set函数显示。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">init_chart</span>: <span class="keyword">function</span> (<span class="params">time_data,hum_data,tem_data,ligh_data</span>) &#123;        </span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">oneComponent</span>.<span class="title function_">init</span>(<span class="function">(<span class="params">canvas, width, height, dpr</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> chart = echarts.<span class="title function_">init</span>(canvas, <span class="literal">null</span>, &#123;</span><br><span class="line">            <span class="attr">width</span>: width,</span><br><span class="line">            <span class="attr">height</span>: height,</span><br><span class="line">            <span class="attr">devicePixelRatio</span>: dpr </span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="title function_">line_set</span>(chart,time_data,hum_data,tem_data,ligh_data)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chart</span> = chart;</span><br><span class="line">        <span class="keyword">return</span> chart;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>将获得的影子设备的数据存入数组中，然后将其传入init_chart(date,humi,temp,ligh)中，进行数据实时可视化显示。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">temp = that.<span class="property">data</span>.<span class="property">Temperature</span>;</span><br><span class="line">humi = that.<span class="property">data</span>.<span class="property">Humidity</span>;</span><br><span class="line">ligh = that.<span class="property">data</span>.<span class="property">Light</span>;</span><br><span class="line">date = that.<span class="property">data</span>.<span class="property">Time</span>;</span><br><span class="line">temp.<span class="title function_">push</span>(res.<span class="property">data</span>.<span class="property">shadow</span>[<span class="number">0</span>].<span class="property">reported</span>.<span class="property">properties</span>.<span class="property">temperature</span>);</span><br><span class="line">humi.<span class="title function_">push</span>(res.<span class="property">data</span>.<span class="property">shadow</span>[<span class="number">0</span>].<span class="property">reported</span>.<span class="property">properties</span>.<span class="property">humidity</span>);</span><br><span class="line">ligh.<span class="title function_">push</span>(res.<span class="property">data</span>.<span class="property">shadow</span>[<span class="number">0</span>].<span class="property">reported</span>.<span class="property">properties</span>.<span class="property">light</span>);</span><br><span class="line">date.<span class="title function_">push</span>(formattedTime);</span><br><span class="line"><span class="keyword">if</span> (temp.<span class="property">length</span> &gt; <span class="number">7</span>) &#123;</span><br><span class="line">  temp.<span class="title function_">shift</span>(); <span class="comment">// 移除数组的第一个元素</span></span><br><span class="line">  humi.<span class="title function_">shift</span>();</span><br><span class="line">  ligh.<span class="title function_">shift</span>();</span><br><span class="line">  date.<span class="title function_">shift</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>32工程源码（CSDN）：<a href="https://download.csdn.net/download/qq_61228493/89533073">【免费】STM32HAL库+ESP8266+cJSON+微信小程序-连接华为云物联网平台.zip资源-CSDN文库</a></p><p>微信小程序源码（CSDN）：<a href="https://download.csdn.net/download/qq_61228493/89535774">【免费】STM32HAL库+ESP8266+cJSON+微信小程序-连接华为云物联网平台(微信小程序侧)资源-CSDN文库</a></p><p>32工程+微信小程序源码（GitHub）：<a href="https://github.com/lucasZyh/CSDN_Share/tree/master/STM32HAL%E5%BA%93%2BESP8266%2BcJSON%2B%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F_%E8%BF%9E%E6%8E%A5%E5%8D%8E%E4%B8%BA%E4%BA%91%E7%89%A9%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0">STM32HAL库+ESP8266+cJSON+微信小程序_连接华为云物联网平台</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32HAL库++ESP8266+cJSON连接阿里云物联网平台</title>
      <link href="/post/339657b4.html"/>
      <url>/post/339657b4.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>实验使用资源：正点原子F1</p><p>USART1：PA9P、A10（串口打印调试）</p><p>USART3：PB10、PB11（WiFi模块）</p><p>DHT11：PG11（采集数据、上报）</p><p>LED0、1：PB5、PE5（介绍命令，控制亮灭）</p><p>显示屏（可有可无）</p></blockquote><h1>HAL库创建工程</h1><p>参考之前的博客：<a href="https://blog.csdn.net/qq_61228493/article/details/129995099">STM32CubeMX安装_stm32cubemx下载-CSDN博客</a></p><h1>ESP8266固件烧录</h1><p>参考之前的博客：<a href="https://blog.csdn.net/qq_61228493/article/details/131135454">ESP8266连接阿里云_esp8266+阿里云-CSDN博客</a></p><h1>阿里云创建物模型</h1><p>参考之前的博客：<a href="https://blog.csdn.net/qq_61228493/article/details/131135454">ESP8266连接阿里云_esp8266+阿里云-CSDN博客</a></p><h1>模块移植</h1><blockquote><p>这里主要说usart模块和WiFi相关模块，其他模块的驱动很简单，不再描述</p></blockquote><h2 id="usart模块">usart模块</h2><ol><li>将【stm32f1xx_it.c】里面的<code>void USART1_IRQHandler(void)</code> 和<code>void USART3_IRQHandler(void)</code>函数注释掉</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614730.png" alt="image-20240420205127021"></p><ol start="2"><li>将下面的代码粘贴到【usart.c】中的最下面的<code>/* USER CODE BEGIN 1 */</code>和<code>/* USER CODE END 1 */</code>之间</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       ATK-MW8266D UART printf</span></span><br><span class="line"><span class="comment"> * @param       fmt: 待打印的数据</span></span><br><span class="line"><span class="comment"> * @retval      无</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_printf</span><span class="params">(<span class="type">char</span> *fmt, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    va_list ap;</span><br><span class="line">    <span class="type">uint16_t</span> len;</span><br><span class="line">    </span><br><span class="line">    va_start(ap, fmt);</span><br><span class="line">    <span class="built_in">vsprintf</span>((<span class="type">char</span> *)g_uart_tx_buf, fmt, ap);</span><br><span class="line">    va_end(ap);</span><br><span class="line">    </span><br><span class="line">    len = <span class="built_in">strlen</span>((<span class="type">const</span> <span class="type">char</span> *)g_uart_tx_buf);</span><br><span class="line">    HAL_UART_Transmit(&amp;huart3, g_uart_tx_buf, len, HAL_MAX_DELAY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       ATK-MW8266D UART重新开始接收数据</span></span><br><span class="line"><span class="comment"> * @param       无</span></span><br><span class="line"><span class="comment"> * @retval      无</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_rx_restart</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    g_uart_rx_frame.sta.len     = <span class="number">0</span>;</span><br><span class="line">    g_uart_rx_frame.sta.finsh   = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       获取ATK-MW8266D UART接收到的一帧数据</span></span><br><span class="line"><span class="comment"> * @param       无</span></span><br><span class="line"><span class="comment"> * @retval      NULL: 未接收到一帧数据</span></span><br><span class="line"><span class="comment"> *              其他: 接收到的一帧数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint8_t</span> *<span class="title function_">atk_mw8266d_uart_rx_get_frame</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (g_uart_rx_frame.sta.finsh == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        g_uart_rx_frame.buf[g_uart_rx_frame.sta.len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> g_uart_rx_frame.buf;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief       获取ATK-MW8266D UART接收到的一帧数据的长度</span></span><br><span class="line"><span class="comment"> * @param       无</span></span><br><span class="line"><span class="comment"> * @retval      0   : 未接收到一帧数据</span></span><br><span class="line"><span class="comment"> *              其他: 接收到的一帧数据的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">atk_mw8266d_uart_rx_get_frame_len</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (g_uart_rx_frame.sta.finsh == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> g_uart_rx_frame.sta.len;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYS_SUPPORT_OS                                                   <span class="comment">/* 使用OS */</span></span></span><br><span class="line">    OSIntEnter();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    HAL_UART_IRQHandler(&amp;huart1);                               <span class="comment">/* 调用HAL库中断处理公用函数 */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (HAL_UART_Receive_IT(&amp;huart1, (<span class="type">uint8_t</span> *)g_rx_buffer, RXBUFFERSIZE) != HAL_OK)     <span class="comment">/* 重新开启中断并接收数据 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* 如果出错会卡死在这里 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> SYS_SUPPORT_OS                                                   <span class="comment">/* 使用OS */</span></span></span><br><span class="line">    OSIntExit();</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART3_IRQn 0 */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* USER CODE END USART3_IRQn 0 */</span></span><br><span class="line">  HAL_UART_IRQHandler(&amp;huart3);</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN USART3_IRQn 1 */</span></span><br><span class="line">    <span class="type">uint8_t</span> tmp;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_ORE) != RESET)        <span class="comment">/* UART接收过载错误中断 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        __HAL_UART_CLEAR_OREFLAG(&amp;huart3);                           <span class="comment">/* 清除接收过载错误中断标志 */</span></span><br><span class="line">        (<span class="type">void</span>)huart3.Instance-&gt;SR;                                   <span class="comment">/* 先读SR寄存器，再读DR寄存器 */</span></span><br><span class="line">        (<span class="type">void</span>)huart3.Instance-&gt;DR;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_RXNE) != RESET)       <span class="comment">/* UART接收中断 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        HAL_UART_Receive(&amp;huart3, &amp;tmp, <span class="number">1</span>, HAL_MAX_DELAY);           <span class="comment">/* UART接收数据 */</span></span><br><span class="line">        <span class="keyword">if</span> (g_uart_rx_frame.sta.len &lt; (<span class="number">256</span> - <span class="number">1</span>))   <span class="comment">/* 判断UART接收缓冲是否溢出</span></span><br><span class="line"><span class="comment">                                                                             * 留出一位给结束符&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">                                                                             */</span></span><br><span class="line">        &#123;</span><br><span class="line">            g_uart_rx_frame.buf[g_uart_rx_frame.sta.len] = tmp;             <span class="comment">/* 将接收到的数据写入缓冲 */</span></span><br><span class="line">            g_uart_rx_frame.sta.len++;                                      <span class="comment">/* 更新接收到的数据长度 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>                                                                <span class="comment">/* UART接收缓冲溢出 */</span></span><br><span class="line">        &#123;</span><br><span class="line">            g_uart_rx_frame.sta.len = <span class="number">0</span>;                                    <span class="comment">/* 覆盖之前收到的数据 */</span></span><br><span class="line">            g_uart_rx_frame.buf[g_uart_rx_frame.sta.len] = tmp;             <span class="comment">/* 将接收到的数据写入缓冲 */</span></span><br><span class="line">            g_uart_rx_frame.sta.len++;                                      <span class="comment">/* 更新接收到的数据长度 */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (__HAL_UART_GET_FLAG(&amp;huart3, UART_FLAG_IDLE) != RESET)       <span class="comment">/* UART总线空闲中断 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        g_uart_rx_frame.sta.finsh = <span class="number">1</span>;                                      <span class="comment">/* 标记帧接收完成 */</span></span><br><span class="line">        </span><br><span class="line">        __HAL_UART_CLEAR_IDLEFLAG(&amp;huart3);                          <span class="comment">/* 清除UART总线空闲中断 */</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">/* USER CODE END USART3_IRQn 1 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在【usart.c】上面的的<code>/* USER CODE BEGIN 0 */</code>和<code>/* USER CODE END 0 */</code>之间加入下面的代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> import(__use_no_semihosting)             </span></span><br><span class="line"><span class="comment">//标准库需要的支持函数                 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> __<span class="title">FILE</span> </span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="type">int</span> handle; </span><br><span class="line"></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line"><span class="type">void</span> _sys_exit(<span class="type">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//重定义fputc函数 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="keyword">while</span>((USART1-&gt;SR&amp;<span class="number">0X40</span>)==<span class="number">0</span>);<span class="comment">//循环发送,直到发送完毕   </span></span><br><span class="line">    USART1-&gt;DR = (<span class="type">uint8_t</span>) ch;      </span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> g_rx_buffer[RXBUFFERSIZE];  <span class="comment">/* HAL库使用的串口接收缓冲 */</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在【usart.c】中的<code>void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)</code>函数中调整中断优先级，WiFi的usart3的高于串口的，同时添加usar使能</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614645.png" alt="image-20240427141633566"></p><ol start="5"><li>在【usart.h】中的<code>/* USER CODE BEGIN Private defines */</code>和<code>/* USER CODE END Private defines */</code>之间加入下面的代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">static</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">uint8_t</span> buf[<span class="number">256</span>];              <span class="comment">/* 帧接收缓冲 */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">uint16_t</span> len    : <span class="number">15</span>;                               <span class="comment">/* 帧接收长度，sta[14:0] */</span></span><br><span class="line">        <span class="type">uint16_t</span> finsh  : <span class="number">1</span>;                                <span class="comment">/* 帧接收完成标志，sta[15] */</span></span><br><span class="line">    &#125; sta;                                                  <span class="comment">/* 帧状态信息 */</span></span><br><span class="line">&#125; g_uart_rx_frame = &#123;<span class="number">0</span>&#125;;                                    <span class="comment">/* ATK-MW8266D UART接收帧缓冲信息结构体 */</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> g_uart_tx_buf[<span class="number">1024</span>]; <span class="comment">/* ATK-MW8266D UART发送缓冲 */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> RXBUFFERSIZE   1                        <span class="comment">/* 缓存大小 */</span></span></span><br></pre></td></tr></table></figure><ol start="6"><li>在【usart.h】中的<code>/* USER CODE BEGIN Prototypes */</code>和<code>/* USER CODE END Prototypes */</code>之间加入下面的代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_printf</span><span class="params">(<span class="type">char</span> *fmt, ...)</span>;       <span class="comment">/* ATK-MW8266D UART printf */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">atk_mw8266d_uart_rx_restart</span><span class="params">(<span class="type">void</span>)</span>;             <span class="comment">/* ATK-MW8266D UART重新开始接收数据 */</span></span><br><span class="line"><span class="type">uint8_t</span> *<span class="title function_">atk_mw8266d_uart_rx_get_frame</span><span class="params">(<span class="type">void</span>)</span>;       <span class="comment">/* 获取ATK-MW8266D UART接收到的一帧数据 */</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">atk_mw8266d_uart_rx_get_frame_len</span><span class="params">(<span class="type">void</span>)</span>;   <span class="comment">/* 获取ATK-MW8266D UART接收到的一帧数据的长度 */</span></span><br></pre></td></tr></table></figure><h2 id="WiFi模块">WiFi模块</h2><ol><li><p>将编写好的<code>esp8266.c/.h</code>及<code>wifi.c/.h</code>文件分别加入Src和Inc文件夹，然后再在keil里将<code>wifi.c</code>文件加入工程</p></li><li><p>在<code>wifi.h</code>中，修改WiFi信息和阿里云物联网平台相关参数</p></li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614646.png" alt="image-20240420205951834"></p><blockquote><p><strong>这里需要注意ESP8266_ClientID里面的的<code>,</code>需要进行转义</strong></p></blockquote><h2 id="增大初始栈大小">增大初始栈大小</h2><p>在启动文件startup_stm32f103xe.s中，将Heap Size的大小调大，不然使用cJSON后，可能烧完程序开发板都没反应</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614647.png" alt="image-20240420212837195"></p><h1>连接阿里云</h1><ol><li><p>在<code>main.c</code>中引用<code>wifi.h</code></p></li><li><p>调用<code>wifi_init();</code></p></li><li><p>打开串口助手，观察打印的数据，同时查看阿里云平台设备是否在线</p></li><li><p>连上云平台后，需要将采集的数据进行上报，同时接收下发的指令（在后面介绍使用cJSON实现）</p></li></ol><blockquote><p>连不上云平台的原因：</p><ul><li>参数没写对，特别是ESP8266_ClientID这个参数</li><li>网络不好，特别是在实验室同时很多人开热点，严重干扰连接</li></ul></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614649.png" alt="image-20240420210354862"></p><h1>cJSON模块</h1><h2 id="JSON格式">JSON格式</h2><p>JSON是一种轻量级的数据交换格式，可读性强、编写简单。键值对组合编写规则，键名使用双引号包裹，冒号：分隔符后面紧跟着数值，有两种常用的数据类型是对象和数组。</p><p>对象：使用花括号{}包裹起来的内容，数据结构{“key1”:“value1”,“key2”:“value2”…}，key为对象的属性，value为对象的值。</p><p>数值：使用中括号[]包裹起来的内容，数据结构{“key”:[“value1”,“value2”,“value3”…]}。</p><h2 id="下载">下载</h2><p>下载地址：<a href="https://sourceforge.net/projects/cjson/">cJSON download | SourceForge.net</a></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614650.png" alt="image-20240327204136190"></p><h2 id="移植">移植</h2><ol><li>将压缩包解压，打开cJSON文件夹，只保留<code>cJSON.c</code>和<code>cJSON.h</code>，其他文件全部删除</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614651.png" alt="image-20240327204416625"></p><ol start="2"><li>将修改后的cJSON文件夹加入项目所在目录</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614652.png" alt="image-20240327204554446"></p><ol start="3"><li>将该文件夹添加进工程，点击【魔法棒】-【C/C++】-【IncludePaths】中将路径加入</li></ol><blockquote><p>如果想省略3和4，可以直接将<code>cJSON.c</code>和<code>cJSON.h</code>分别放入Src和Inc文件夹，然后直接将<code>cJSON.c</code>加入工程即可</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614653.png" alt="image-20240327205034531"></p><ol start="4"><li>将<code>cJSON.c</code>添加进工程，点击【方块】-【Project Items】，在groups中创建一个<code>cJSON</code>文件夹，然后再在里面放入<code>cJSON.c</code></li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614654.png" alt="image-20240327205135628"></p><h2 id="关键函数">关键函数</h2><ul><li><p>cJSON *cJSON_CreateObject(void)</p><ul><li>创建JSON结构对象</li></ul></li><li><p>cJSON *cJSON_CreateNumber(double num)</p><ul><li>创建一个整型的数据类型</li></ul></li><li><p>cJSON *cJSON_CreateString(const char *string)</p><ul><li>创建一个字符串数据类型</li></ul></li><li><p>cJSON *cJSON_CreateArray(void)</p><ul><li>创建一个数组数据类型函数：</li></ul></li><li><p>cJSON *cJSON_CreateIntArray(const int *numbers, int count)</p><ul><li>将多个整型数据类型增加到数组中</li></ul></li><li><p>cJSON *cJSON_Parse(const char *value)</p><ul><li>从JSON文件数据缓冲区解析JSON的对象结构，使用完成后要必须要释放对象结构</li></ul></li><li><p>void cJSON_Delete(cJSON *c)</p><ul><li>释放申请的JSON结构缓存空间</li></ul></li><li><p>void cJSON_AddItemToObject(cJSON *json, cJSON *, cJSON_CreateArray())</p><ul><li>向对象中增加对象</li></ul></li><li><p>cJSON *cJSON_GetObjectItem(cJSON *object, const char *string)</p><ul><li>根据键名在JSON中查找子节点</li></ul></li></ul><h1>上报消息</h1><blockquote><p>当在物联网平台为产品定义物模型后，设备需要按照Alink JSON格式上报属性或事件</p><p>Alink协议是针对物联网开发领域设计的一种数据交换规范，数据格式是JSON，用于设备端和物联网平台的双向通信，更便捷地实现和规范了设备端和物联网平台之间的业务数据交互</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614655.png" alt="image-20240420210941951"></p><ol><li>先看一下官方给的数据上报的格式</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614656.png" alt="image-20240420211359746"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614657.png" alt="image-20240420211505857"></p><ol start="2"><li>我们必须要传的就是method、id、version、params这四个组成的JSON字符串，其中params传输的内容也是个小的JSON字符串</li><li>根据这个我们使用cJSON进行JSON格式的封装</li></ol><ul><li>创建两个JSON对象，外部和内部</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cJSON *json = cJSON_CreateObject(); <span class="comment">// 创建一个空的JSON对象</span></span><br><span class="line">cJSON *params_cjson = cJSON_CreateObject(); <span class="comment">// 创建一个空的子JSON对象</span></span><br></pre></td></tr></table></figure><ul><li>封装params键对应的值，也就是内部的JSON【这个里面的键名和阿里云上定义的要保持一致】</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cJSON_AddNumberToObject(params_cjson, <span class="string">&quot;Humidity&quot;</span>, humidity);</span><br><span class="line">cJSON_AddNumberToObject(params_cjson, <span class="string">&quot;temperature&quot;</span>, temperature);</span><br><span class="line">cJSON_AddNumberToObject(params_cjson, <span class="string">&quot;LEDSwitch&quot;</span>, LED_Switch);</span><br></pre></td></tr></table></figure><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614658.png" alt="image-20240420212215979"></p><ul><li>封装外部大的JSON【消息ID号。取值范围0~4294967295，且每个消息ID在当前设备中具有唯一性】</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cJSON_AddItemToObject(json, <span class="string">&quot;method&quot;</span>, cJSON_CreateString(<span class="string">&quot;thing.service.property.post&quot;</span>));</span><br><span class="line">cJSON_AddItemToObject(json, <span class="string">&quot;id&quot;</span>, cJSON_CreateString(<span class="string">&quot;99119635&quot;</span>));</span><br><span class="line">cJSON_AddItemToObject(json, <span class="string">&quot;params&quot;</span>, params_cjson);</span><br><span class="line">cJSON_AddItemToObject(json, <span class="string">&quot;version&quot;</span>, cJSON_CreateString(<span class="string">&quot;1.0.0&quot;</span>));</span><br></pre></td></tr></table></figure><ol start="4"><li>JSON格式封装好后，对里面的内容进行处理，主要是对<code>,</code>进行转义</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将JSON对象转换为无格式的字符串</span></span><br><span class="line">str = cJSON_PrintUnformatted(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 为MQTT发布添加转义字符</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; *str != <span class="string">&#x27;\0&#x27;</span>; i++)&#123;</span><br><span class="line">    params_buf[i] = *str;</span><br><span class="line">    <span class="comment">// 如果下一个字符是引号或逗号，添加转义字符</span></span><br><span class="line">    <span class="keyword">if</span>(*(str + <span class="number">1</span>) == <span class="string">&#x27;&quot;&#x27;</span> || *(str + <span class="number">1</span>) == <span class="string">&#x27;,&#x27;</span>)&#123;</span><br><span class="line">        params_buf[++i] = <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    str++;</span><br><span class="line">    move_num++;</span><br><span class="line">&#125;</span><br><span class="line">str = str - move_num; <span class="comment">// 回退指针到JSON字符串的开始</span></span><br></pre></td></tr></table></figure><ol start="5"><li>上报消息，同时清除内存</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 构建AT命令</span></span><br><span class="line"><span class="built_in">sprintf</span>((<span class="type">char</span> *)cmd,<span class="string">&quot;AT+MQTTPUB=0,\&quot;&quot;</span>ESP8266_Post<span class="string">&quot;\&quot;,\&quot;%s\&quot;,0,0\r\n&quot;</span>,params_buf);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送AT命令并通过ESP8266模块</span></span><br><span class="line">ESP8266_Sent_AT(cmd, <span class="string">&quot;OK&quot;</span>, <span class="number">500</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清理JSON对象占用的内存</span></span><br><span class="line">cJSON_Delete(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果分配了额外的字符串空间，释放它</span></span><br><span class="line"><span class="keyword">if</span>(str != <span class="literal">NULL</span>)&#123;</span><br><span class="line">    <span class="built_in">free</span>(str);</span><br><span class="line">    str = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;释放str空间成功\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>一定要及时释放空间，cJSON不断使用malloc超级占内存</p></blockquote><h1>接收命令</h1><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614659.png" alt="image-20240420215109439"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614660.png" alt="image-20240420215153714"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404271614661.png" alt="image-20240420215201384"></p><ol><li><p>这里需要介绍云端下发的指令，接收后成功发送成功的响应格式，失败发送失败的响应格式【这里只响应成功的】</p></li><li><p>解析下发的JSON字符串，找到params中，需要的数据</p></li><li><p>在介绍成功，获取到数据后，向云平台发送接受成功响应消息</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">rcv_json</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="type">uint8_t</span> cmd[<span class="number">1024</span>]; <span class="comment">// 用于存储构建的AT命令</span></span><br><span class="line">    <span class="type">uint8_t</span> *ret = <span class="literal">NULL</span>; <span class="comment">// 用于存储接收到的数据帧</span></span><br><span class="line">    cJSON *cjson = <span class="literal">NULL</span>; <span class="comment">// 用于存储解析后的JSON对象</span></span><br><span class="line">cJSON *re_json = <span class="literal">NULL</span>;</span><br><span class="line"><span class="type">char</span> *str = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">char</span> topic_buff[<span class="number">1024</span>]; <span class="comment">// 用于存储MQTT主题</span></span><br><span class="line">    <span class="type">int</span> num; <span class="comment">// 用于存储接收数据的数量</span></span><br><span class="line">    <span class="type">char</span> recv_buffer[<span class="number">1024</span>]; <span class="comment">// 用于存储接收到的JSON数据</span></span><br><span class="line"><span class="type">uint8_t</span> params_buf[<span class="number">1024</span>]; <span class="comment">// 用于存储处理过的JSON字符串</span></span><br><span class="line">    <span class="type">uint16_t</span> move_num = <span class="number">0</span>; <span class="comment">// 用于记录字符串处理过程中的移动次数</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>; <span class="comment">// 循环迭代变量</span></span><br><span class="line">    </span><br><span class="line">    ret = atk_mw8266d_uart_rx_get_frame(); <span class="comment">// 获取UART接收到的数据帧</span></span><br><span class="line">    atk_mw8266d_uart_rx_restart(); <span class="comment">// 重启UART接收</span></span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> *ptr_recv = <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)ret,<span class="string">&quot;+MQTTSUBRECV&quot;</span>); <span class="comment">// 检查是否包含MQTT订阅数据标志</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(ptr_recv!=<span class="literal">NULL</span>)&#123; <span class="comment">// 如果是MQTT订阅数据</span></span><br><span class="line">        <span class="built_in">memset</span>(topic_buff,<span class="number">0</span>,<span class="keyword">sizeof</span>(topic_buff)); <span class="comment">// 清空主题缓冲区</span></span><br><span class="line">        </span><br><span class="line">        <span class="built_in">sscanf</span>((<span class="type">char</span> *)ret,<span class="string">&quot;+MQTTSUBRECV:0,%[^,],%d,%s&quot;</span>,topic_buff,&amp;num,recv_buffer); <span class="comment">// 解析数据，提取主题、数据数量和JSON数据</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strstr</span>(topic_buff,ESP8266_SET)) &#123; <span class="comment">// 如果主题包含特定标记</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;接收数据成功，开始解析  %s\r\n&quot;</span>,recv_buffer); <span class="comment">// 打印接收到的数据</span></span><br><span class="line">            cjson = cJSON_Parse(recv_buffer); <span class="comment">// 解析JSON数据</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cjson==<span class="literal">NULL</span>) <span class="comment">// 如果JSON解析失败</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;cjson 解析错误\r\n&quot;</span>); <span class="comment">// 打印错误信息</span></span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cJSON *json_data = cJSON_GetObjectItem(cjson,<span class="string">&quot;params&quot;</span>); <span class="comment">// 获取JSON对象中的params项</span></span><br><span class="line">            <span class="keyword">if</span>(json_data==<span class="literal">NULL</span>)&#123; <span class="comment">// 如果params项不存在</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;cjson  没有数据\r\n&quot;</span>); <span class="comment">// 打印错误信息</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;cjson 内存大小为 = %d\r\n&quot;</span>,<span class="keyword">sizeof</span>(cjson)); <span class="comment">// 打印JSON对象的内存大小</span></span><br><span class="line">                <span class="comment">// 解析数据</span></span><br><span class="line">                <span class="keyword">if</span>(cJSON_GetObjectItem(json_data,<span class="string">&quot;LEDSwitch&quot;</span>)!=<span class="literal">NULL</span>) <span class="comment">// 如果存在LEDSwitch键</span></span><br><span class="line">                &#123;</span><br><span class="line">                    LED_Switch = cJSON_GetObjectItem(json_data,<span class="string">&quot;LEDSwitch&quot;</span>)-&gt;valueint; <span class="comment">// 提取LEDSwitch的值</span></span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;csjon解析成功 LED_Switch = %d\r\n&quot;</span>,LED_Switch); <span class="comment">// 打印LEDSwitch的值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收响应</span></span><br><span class="line"><span class="comment">//------</span></span><br><span class="line"><span class="built_in">sprintf</span>((<span class="type">char</span> *)cmd,<span class="string">&quot;AT+MQTTPUB=0,\&quot;&quot;</span>ESP8266_Post_re<span class="string">&quot;\&quot;,\&quot;&#123;\\\&quot;code\\\&quot;: 200, \\\&quot;data\\\&quot;: &#123;&#125;, \\\&quot;id\\\&quot;: \\\&quot;%s\\\&quot;, \\\&quot;message\\\&quot;: \\\&quot;success\\\&quot;, \\\&quot;version\\\&quot;: \\\&quot;1.0.0\\\&quot;&#125;\&quot;,0,0\r\n&quot;</span>,cJSON_GetObjectItem(cjson,<span class="string">&quot;id&quot;</span>)-&gt;valuestring);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;开始发送数据:%s\r\n&quot;</span>, cmd);</span><br><span class="line">ESP8266_Sent_AT(cmd, <span class="string">&quot;OK&quot;</span>, <span class="number">500</span>);</span><br><span class="line">                    <span class="comment">//------</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            cJSON_Delete(cjson); <span class="comment">// 删除JSON对象，释放内存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接收响应</span></span><br><span class="line">            cJSON_Delete(re_json);</span><br><span class="line"><span class="keyword">if</span>(str != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">free</span>(str);</span><br><span class="line">str = <span class="literal">NULL</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;释放str空间成功\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>源码地址：</p><p>CSDN：<a href="https://download.csdn.net/download/qq_61228493/89232038">【免费】STM32HAL库++ESP8266+cJSON连接阿里云物联网平台资源-CSDN文库</a></p><p>GitHub：<a href="https://github.com/lucasZyh/CSDN_Share/tree/master/STM32HAL%E5%BA%93%2B%2BESP8266%2BcJSON%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E7%89%A9%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0">CSDN_Share/STM32HAL库++ESP8266+cJSON连接阿里云物联网平台 at master · lucasZyh/CSDN_Share (github.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RFID复习内容整理</title>
      <link href="/post/25c9b060.html"/>
      <url>/post/25c9b060.html</url>
      
        <content type="html"><![CDATA[<h1>第一章</h1><h2 id="日常生活中的RFID技术">日常生活中的RFID技术</h2><ul><li>身份证（高频）<ul><li>typeB</li><li>13.56MHz</li></ul></li><li>一卡通（高频）<ul><li>ISO/IEC 14443 typeA</li></ul></li><li>图书馆</li><li>门禁</li><li>停车场</li><li>门票</li><li>ETC<ul><li>微波段、超高频</li></ul></li><li>服装快销品牌</li></ul><h2 id="物联网定义">物联网定义</h2><ul><li>最初的定义<ul><li><strong>将各种信息传感设备</strong>，如射频识别(RFID)装置、红外感应器、全球定位系统、激光扫描器等种种装置,<strong>与互联网结合起来而形成的一个巨大网络</strong>。其目的是让所有的物品都与网络连接在一起，方便识别和管理。</li></ul></li><li>欧盟定义<ul><li><strong>将现有的互联的计算机网络扩展到互联的物品网络</strong></li></ul></li></ul><h2 id="RFID的定义">RFID的定义</h2><ul><li><p>RFID是一种能够让物品“<strong>开口说话</strong>”的技术，是物联网<strong>感知层</strong>的一个关键技术</p></li><li><p>RFID是一种<strong>自动识别技术</strong>，它利用<strong>无线射频信号</strong>实现<strong>无接触</strong>信息传递并通过所传递的信息实现物体识别</p></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113756.png" alt="image-20231206164335851"></p><h2 id="自动识别技术">自动识别技术</h2><ul><li>常见自动识别技术（看PPT了解一下）<ul><li>条形码</li><li>磁卡</li><li>IC卡</li><li>RFID</li><li>…</li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113757.png" alt="image-20231206164335851"></p><ul><li><p>RFID特点</p><ul><li>防碰撞</li><li>移动识别</li><li>适应多种环境</li><li>足够大内存</li><li>可半永久性（无源标签）</li><li>可靠性高</li><li>非接触性</li><li>可穿透物体</li></ul></li><li><p>RFID劣势</p><ul><li>成本问题<ul><li>成本影响了RFID的拓展速度，改善制造流程与提高市场规模是RFID降价的关键。</li></ul></li><li>信号干扰问题<ul><li>RFID主要是基于无线电波传送原理，当遇到金属或是液体时，信号传导会产生干扰与衰减，影响数据读取的可靠性与准确度</li></ul></li><li>频段管制问题<ul><li>尤其是在超高频和微波频段，各国开放的频率不一，使得RFID在跨国应用时产生许多问题</li></ul></li><li>国际标准制定</li><li>隐私权问题</li></ul></li></ul><h2 id="RFID的分类">RFID的分类</h2><blockquote><p>大家重点关注于这两种按能量的分类和频率的分类。尤其是频率的分类，它的<strong>特点</strong>的话，我们都是要掌握的</p></blockquote><h3 id="按频率分类⭐">按频率分类⭐</h3><ul><li><strong>低频（LF）</strong><ul><li>工作频段<ul><li>使用的频段在30～300KHz之间，以<strong>125KHz、135KHz</strong>最为常见。</li><li>低频RFID标签读取距离一般<strong>短于10cm</strong>，低频RFID标签一般在出厂时就初始化好了不可更改的编码。</li></ul></li><li>优点<ul><li><strong>信号穿透性好</strong>，抗金属和液体干扰能力强，不易受干扰。</li><li>价格很低，成本低廉。工作频率不受无线电频率管制约束。</li></ul></li><li>缺点<ul><li><strong>标签存贮</strong>数据量较少**，<strong>读取距离短</strong>、无法同时辨识多个标签。**</li><li><strong>一般为只读性，<strong>安全性不高</strong>，很容易复制完全相同的ID号。</strong></li></ul></li><li>应用范围：<ul><li>动物追踪与识别、门禁管理、动物芯片、汽车防盗器和其他封闭式追踪系统中。</li></ul></li></ul></li><li><strong>高频(HF)</strong><ul><li>工作频段<ul><li>工作频率为3MHz～30MHz，常见高频工作频率有6.75MHz、<strong>13.56MHz</strong>和27.125MHz。</li><li>其读取距离大多在1m以内。</li></ul></li><li>优点<ul><li>与低频相比，高频RFID标签的存储的数据量增大，感应距离较长、读取速度较快</li><li>而且<strong>可以同时间辨识多个标签</strong>。</li></ul></li><li>缺点<ul><li>除金属材料外，可<strong>穿透大多数的材料</strong>，但读取距离会降低</li><li>抗噪音干扰性较差，易受干扰。</li></ul></li><li>应用范围：<ul><li>证、卡、票领域（二代身份证、公共交通卡、门票等），供应链的物品追踪、门禁管理、图书馆、医药产业、智能货架等</li></ul></li></ul></li><li><strong>超高频(UHF)</strong><ul><li>工作频段：433MHz，860MHz~960MHz，一般以915MHz为主</li></ul></li><li><strong>微波</strong><ul><li>工作频段<ul><li>2.45GHz、5.8GHz</li></ul></li><li>优点<ul><li>传输速度最快，通信速率250kbps~1Mbps。</li></ul></li><li>缺点<ul><li>抗金属液体能力最差。</li></ul></li><li>应用范围<ul><li>路桥收费等。</li></ul></li></ul></li></ul><h3 id="按能量供应分类">按能量供应分类</h3><table><thead><tr><th style="text-align:center"><strong>分类</strong></th><th style="text-align:center"><strong>是否有电池</strong></th><th style="text-align:center"><strong>能量供应</strong></th><th style="text-align:center"><strong>特点</strong>  ✨</th><th style="text-align:center"><strong>主要应用</strong></th><th style="text-align:center"><strong>主要频率</strong></th></tr></thead><tbody><tr><td style="text-align:center">无源(被动式)</td><td style="text-align:center">无</td><td style="text-align:center">读写器</td><td style="text-align:center">价格低，体积小，读取距离近，无寿命限制</td><td style="text-align:center">物流、车票、门禁</td><td style="text-align:center">125kHz、13.56MHz、915MHz</td></tr><tr><td style="text-align:center">有源(主动式)</td><td style="text-align:center">有</td><td style="text-align:center">电池</td><td style="text-align:center">价格高，读取距离远，使用寿命有限</td><td style="text-align:center">车辆管理、航运管理、矿井管理</td><td style="text-align:center">2.45GHz、5.8GHz</td></tr><tr><td style="text-align:center"><strong>半有源(半被动式)</strong></td><td style="text-align:center">有</td><td style="text-align:center">电池+读写器</td><td style="text-align:center">读取距离近，价格适中，使用寿命有限</td><td style="text-align:center">医药、食品</td><td style="text-align:center">都有可能</td></tr></tbody></table><h2 id="RFID系统组成">RFID系统组成</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113758.png" alt="image-20231206170656889"></p><ul><li>在读写器里面，我们会注意到它有相应的射频的模块，通过这个射频模块，通过天线，发射出去一定的能量。</li><li>电子标签通过天线，接收到我阅读器传过来的一些能量，以及接收到阅读器发送给他的数据。通过这个射频模块，获取到了一定的能量获取的能</li><li>获取到能量，获取到数据之后，通过一定的控制模块。比如说我要完成我的编码、调制、解调等等，包括防碰撞的一些部分，都属于这个控制的模块。对于有一些电子标签的话，它还有一定的存储器</li></ul><p><audio src="20231206_171829.mp3"></audio></p><h3 id="电子标签">电子标签</h3><ul><li><p>结构</p><ul><li><strong>电子标签由芯片和天线组成</strong><ul><li>天线用于收集读写器发射到空间的电磁波，并把标签本身的数据信号以电磁波的形式发射出去。</li><li>芯片具有一定的存储容量，可以存储被识别物体的相关信息。电子标签芯片对接收的信号进行解调、解码等各种处理，并对标签需要返回的信号进行编码、调制等处理。</li></ul></li></ul></li><li><p>技术参数</p><ul><li>标签激活的能量要求</li><li>标签信息的容量</li><li>标签的封装尺寸</li><li>标签信息的读写速度：可达毫秒级</li><li>标签信息的<strong>传输速率</strong>📝</li><li>标签的<strong>读写距离</strong>📝</li><li>标签的可靠性</li><li>标签的<strong>工作频率📝</strong></li><li>标签的<strong>价格</strong>📝</li></ul></li></ul><h3 id="读写器">读写器</h3><ul><li>功能</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113759.png" alt="image-20231206174156668"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113760.png" alt="image-20231206174233643"></p><ul><li><p><strong>结构</strong></p><ul><li><p><strong>射频模块</strong>（包含发送器和接收器）</p><ul><li>产生发射功率以启动应答器并提供能量</li><li>对发射信号进行调制，用于将数据传送给应答器</li><li>接收并解调来自应答器的射频信号</li></ul></li><li><p><strong>控制模块</strong>也称为读写模块</p><ul><li>与应用系统软件进行通信，并执行从应用系统软件发来的动作指令</li><li>控制与应答器的通信过程</li><li>信号的编码与解码；防冲突算法的执行</li><li>对物理读写器与应答器之间传送的数据进行加密和解密</li><li>进行物理读写器与应答器之间的身份认证</li></ul></li><li><p><strong>天线</strong></p><ul><li>读写器天线的作用是发射电磁能量以激活电子标签，并向电子标签发出指令，同时也要接收来自电子标签的信息。</li></ul></li></ul></li><li><p><strong>技术参数</strong></p><ul><li><p><strong>工作频率</strong>：与电子标签的工作频率保持一致，可支持多协议</p></li><li><p><strong>作用距离</strong></p></li><li><p><strong>数据传输速率</strong></p></li><li><p><strong>安全性</strong></p></li><li><p><strong>多电子标签同时识读性</strong></p></li><li><p>输出功率：满足应用的需要，符合国家和地区对无线发射功率的许可</p></li><li><p>输出接口：接口形式多样，根据需要具有RS232、RS485、USB、Wifi、GSM等多种接口</p></li><li><p>读写器形式：固定式、手持式、工业读写器等</p></li></ul></li></ul><h3 id="天线">天线</h3><blockquote><p><strong>天线作用⭐</strong></p></blockquote><ul><li><p><strong>承担接收能量和发射能量的作用</strong></p><ul><li>无源射频标签芯片要启动电路工作，需要通过天线在读写器天线产生的电磁场中获得足够的能量</li></ul></li><li><p><strong>决定了射频标签与读写器之间的通信信道和通信方式</strong></p><ul><li>它在射频标签与读写器实现数据通信过程中起到了关键的作用。</li></ul></li></ul><blockquote><p>广义的RFID系统：阅读器、电子标签、上层的应用系统</p></blockquote><h3 id="系统高层">系统高层</h3><ul><li>系统高层可以将许多读写器获取的数据信息有效地<strong>整合</strong>起来，完成<strong>查询、管理与数据交换</strong>等功能</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113761.svg" alt="111"></p><h1>第二章</h1><blockquote><p>两个问题：电子标签的能量是怎么获取的、数据是怎么传输的</p><p>考试：射频前端电路设计（单一或结合），单一的话要知道其设计要求</p></blockquote><h2 id="能量获取">能量获取</h2><ul><li>电子标签天线电路设计</li><li>阅读器的天线电路</li><li>二者耦合的过程</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113762.png" alt="image-20231206181110091"></p><blockquote><p>⭐⭐⭐采用的电路，电路的设计要求，实现什么功能，谐振频率，会计算谐振频率（看第二章PPT）</p></blockquote><h3 id="阅读器">阅读器</h3><ul><li><p>阅读器射频前端的<strong>设计要求</strong>：</p><ul><li>天线线圈的电流最大，用于产生最大的磁通量</li><li>功率匹配，以最大限度地利用磁通量的可用能量，即最大程度地输出读写器的能量</li><li>足够的带宽，保证载波信号的传输，使读写器信号无失真输出</li></ul></li><li><p>射频前端天线电路的<strong>结构</strong></p><ul><li><p>RFID阅读器的射频前端常采用串联谐振电路。</p></li><li><p>串联谐振回路具有电路简单、成本低，激励可采用低内阻的恒压源，谐振时可获得最大的回路电流等特点，被广泛采用</p></li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113763.png" alt=""></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113764.png" alt=""></p><ul><li><strong>等效阻抗</strong></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113765.png" alt=""></p><h3 id="电子标签-2">电子标签</h3><ul><li>电子标签天线的<strong>设计要求</strong><ul><li>电子标签天线上的感应电压最大，使电子标签线圈输出最大的电压。</li><li>功率匹配，电子标签最大程度的耦合来自读写器的能量。</li><li>足够的带宽，使电子标签接收的信号无失真</li></ul></li><li>射频前端天线电路的<strong>结构</strong><ul><li>RFID电子标签的射频前端常采用并联谐振电路。</li><li>电感L由天线组成，电容C与电感L并联，构成并联谐振电路。实际应用中，电感L和电容C有损耗，并联谐振电路相当于电感L、电容C和电阻R三个元件并联而成。</li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113766.png" alt=""></p><ul><li>导纳</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113767.png" alt=""></p><h3 id="电感耦合">电感耦合</h3><blockquote><p>会画图，会描述📝</p></blockquote><ul><li>当电子标签进入阅读器产生的交变磁场时，电子标签的电感线圈上就会产生感应电压，当距离足够近，电子标签天线电路所截获的能量可以供应答器芯片正常工作时，阅读器和电子标签才能进入信息交互阶段</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113768.png" alt="image-20231207130840937"></p><ul><li>⭐⭐⭐<strong>应答器直流电源电压的产生</strong> （分析题）<ul><li>整流器<ul><li>电子标签可采用全波整流电路，线圈耦合得到的交变电压通过整流后得到直流电压。</li></ul></li><li>C~P~<ul><li>电容Cp滤除高频成分，同时作为储能元件</li></ul></li><li>稳压电路<ul><li>由于电子标签和读写器的距离不断变化，使得电子标签获得交变电压也不断变化，导致整流后的直流电压不是很稳定，因此需要稳压电路。稳压电路的输出给电子标签的芯片提供所需直流电压</li></ul></li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113769.png" alt="image-20231207131111614"></p><h2 id="数据获取">数据获取</h2><ul><li><strong>负载调制技术</strong><ul><li>开关控制负载调制电阻R~mod~的接入与否，开关S的通断由二进制数据编码信号控制</li><li><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113770.png" alt=""></li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113771.png" alt=""></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113772.png" alt="image-20231206182048035"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113773.png" alt="image-20231212134002812"></p><h1>第三章</h1><blockquote><p>编码和调制</p><p>结合具体应用出题</p></blockquote><ul><li>一般通信系统结构</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113774.png" alt="image-20231206182312216"></p><h2 id="RFID系统中的编码的特殊需要">RFID系统中的编码的特殊需要</h2><ul><li><strong>电子标签能量来源</strong><ul><li>电子标签常常是无源的，需要在读写器的通信过程中获得自身的能量供应</li><li>编码方式<strong>必须保证不能中断读写器对电子标签的能量供应</strong></li></ul></li><li><strong>电子标签检错能力</strong><ul><li>由于信道中干扰的存在，需要根据码型的变化来<strong>判断是否发生误码或有电子标签冲突发生</strong></li></ul></li><li><strong>电子标签时钟提取</strong><ul><li>电子标签芯片中，一般不会有时钟电路，电子标签芯片一般<strong>需要在读写器发来的码流中提取时钟</strong></li></ul></li></ul><h2 id="编码方式">编码方式</h2><blockquote><p>⭐写出编码规则和特点</p></blockquote><h3 id="反向不归零编码">反向不归零编码</h3><ul><li>高电平表1，低电平表示0</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113775.png" alt="image-20231206182831291"></p><ul><li>此码型不宜传输，有以下原因<ul><li>有直流，一般信道难于传输零频附近的频率分量；</li><li>接收端判决门限与信号功率有关，不方便使用；</li><li>在连续出现“0”或“1”时，难以找到同步信号，即不能直接用来提取位同步信号</li></ul></li></ul><blockquote><p>📝身份证，两个方向的数据传输采用的都是<strong>反向不归零编码</strong></p></blockquote><h3 id="曼彻斯特编码⭐⭐">曼彻斯特编码⭐⭐</h3><ul><li>负跳变表示二进制“1”，半个比特周期时的正跳变表示二进制“0”</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113776.png" alt=""></p><ul><li>易于发现传输错误<ul><li>在比特长度内，“没有变化”的状态是不允许的。</li></ul></li><li>容易提取时钟信号<ul><li>跳变都发生在每一个码元中间，接收端可以方便地利用它作为同步时钟。</li></ul></li><li>容易发现碰撞位<ul><li>当多个标签同时发送的数据位有不同值时，则接收的上升边和下降边互相抵消，导致在整个比特长度内是不间断的负载波信号，由于该状态不允许，所以读写器利用该错误就可以判定碰撞发生的具体位置。</li></ul></li></ul><blockquote><p>📝校园卡，S50卡，使用14443 typeA 采用曼切斯特编码，易于发现碰撞位</p><p>电子标签到阅读器：曼彻斯特编码</p><p>阅读器到电子标签：修正密勒码</p></blockquote><ul><li>曼彻斯特编码<strong>电路</strong>⭐</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113777.png" alt="image-20231207131227073"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113778.png" alt="image-20231207131233449"></p><h3 id="密勒（Miller）码">密勒（Miller）码</h3><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113779.png" alt="image-20231206183348211"></p><h2 id="调制">调制</h2><blockquote><p>什么是调制，什么是解调</p></blockquote><h3 id="什么是调制">什么是调制</h3><ul><li>调制是指将信息信号通过调制器转换为与其不同的载波信号，从而实现信息的传输。调制的基本原理是在载波信号上叠加信息信号，通过改变载波信号的某些特征，如频率、振幅、相位等，来携带信息信号并传输到接收端。在接收端，通过解调器将信息信号从载波信号中分离出来，恢复原始的信息信号。</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113780.png" alt=""></p><h3 id="为什么要调制">为什么要调制</h3><ul><li>天线尺寸限制<ul><li>当馈送到天线上的信号波长和天线的尺寸可以相比拟时，天线才能有效地辐射或接收电磁波</li></ul></li><li>频分复用，提高通信容量<ul><li>将多个基带信号分别搬移到不同的载频处，从而实现在一个信道里同时传输许多信号，提高信道利用率</li></ul></li><li>提高信号抗干扰能力<ul><li>可以扩展信号带宽，提高系统抗干扰、抗衰落能力，提高传输的信噪比</li></ul></li></ul><h3 id="调制方式">调制方式</h3><blockquote><p>需要记住英文简写✨</p><p>会画三种调制的图✨</p></blockquote><ul><li><strong>数字振幅调制（ASK）</strong></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113781.png" alt=""></p><ul><li><strong>数字频率调制（FSK）</strong></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113782.png" alt="image-20231206184200604"></p><ul><li><strong>数字相位调制（PSK）</strong></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113783.png" alt=""></p><h3 id="副载波的调制">副载波的调制</h3><p>调制到一个比较低的频率上，然后再调制到一个比较高的频率</p><ul><li>定义<ul><li>电子标签将基带编码调制到低频率的副载波频率上，最后再采用ASK、FSK或PSK对副载波进行二次调制。</li></ul></li><li>好处<ul><li>①采用副载波信号进行负载调制时，调制管每次导通时间较短，<strong>对电子标签电源的影响较小</strong></li><li>②调制器的总导通时间减少，<strong>总功耗下降</strong></li><li>③有用信息的频谱分布在副载波附近而不是载波附近，<strong>便于阅读器对传送数据信息的提取</strong>，但射频耦合回路应有较宽的频带</li></ul></li></ul><h1>第四章</h1><blockquote><p>差错、监测</p></blockquote><h2 id="差错的控制方式⭐">差错的控制方式⭐</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113784.png" alt=""></p><h2 id="检纠错码">检纠错码</h2><blockquote><p>⭐实现方法，纠错原理</p></blockquote><h3 id="奇偶校验⭐⭐">奇偶校验⭐⭐</h3><blockquote><p>大概率考</p></blockquote><ul><li>实现方法<ul><li>在每个被传送码的左边或右边加上1位奇偶校验位0或1</li><li>奇校验：需把每个编码中1的个数凑成奇数</li><li>偶校验：需把每个编码中1的个数凑成偶数</li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113785.png" alt="image-20231206185012729"></p><ul><li>原理</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113786.png" alt="image-20231206185057703"></p><ul><li>特点<ul><li>实现简单</li><li>无错误定位和纠错能力</li><li>多采用奇校验</li></ul></li></ul><h3 id="CRC">CRC</h3><blockquote><p>了解</p></blockquote><ul><li><p>方法</p><ul><li>去看湖科大的计网课</li></ul></li><li><p>原理</p><ul><li>合法的CRC码应当能被生成多项式整除</li><li><strong>若CRC码不能被生成多项式整除，说明出现了信息的传送差错</strong></li></ul></li></ul><h2 id="防碰撞⭐">防碰撞⭐</h2><ul><li>什么是碰撞<ul><li>在RFID系统应用中，因为多个读写器或多个标签，造成的读写器之间或标签之间的相互干扰，统称为<strong>碰撞</strong></li></ul></li><li>分类<ul><li>多标签碰撞</li><li>多读写器碰撞</li></ul></li></ul><h2 id="防碰撞算法">防碰撞算法</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113787.png" alt=""></p><h3 id="非确定性算法（标签控制法）">非确定性算法（标签控制法）</h3><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113788.png" alt=""></p><ul><li>⭐⭐⭐帧时隙ALOHA算法**（必考）**</li></ul><blockquote><p>自己设计，要体现出防碰撞</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032114448.png" alt=""></p><p><audio src="20231206_185959.mp3"></audio></p><ul><li>帧时隙ALOHA算法的特点<ul><li>简化了时隙Aloha的随机退避机制</li><li>当标签数远大于N时，出现“<strong>饿死现象</strong>”</li><li>当标签数远小于N时，较多<strong>时隙空闲</strong>，产生浪费</li></ul></li></ul><h3 id="二进制搜索（确定性算法）">二进制搜索（确定性算法）</h3><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113789.png" alt=""></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113790.png" alt=""></p><h1>第五章</h1><blockquote><p>安全的漏洞、安全的解决方式</p></blockquote><h2 id="基于共享秘密和伪随机函数的安全协议-三次认证-⭐">基于共享秘密和伪随机函数的安全协议(三次认证)⭐</h2><blockquote><p>会画图</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113791.png" alt="image-20231207132017142"></p><ul><li>三次认证过程<ul><li>阅读器发送查询口令的命令给应答器，应答器作为应答响应传送所产生的一个随机数RB给阅读器。</li><li>阅读器产生一个随机数RA，使用共享的密钥K和共同的加密算法EK，算出加密数据块TOKEN AB，并将TOKEN AB传送给应答器。TOKEN AB＝EK(RA,RB)</li><li>应答器接受到TOKEN AB后，进行解密，将取得的随机数与原先发送的随机数RB进行比较，若一致，则阅读器获得了应答器的确认。</li><li>应答器发送另一个加密数据块TOKEN BA给阅读器，TOKEN BA为 TOKEN BA＝EK(RB1,RA)</li><li>阅读器接收到TOKEN BA并对其解密，若收到的随机数与原先发送的随机数RA相同，则完成了阅读器对应答器的认证。</li></ul></li></ul><h2 id="哈希锁⭐">哈希锁⭐</h2><blockquote><p>会描述过程⭐⭐⭐</p></blockquote><ul><li>Hash锁是一种更完善的抵制标签未授权访问的安全与隐私技术。整个方案只需要采用Hash函数，因此成本很低。</li><li>Hash函数特点<ul><li>给定x，计算h(x)较容易，硬件、软件都可以实现；</li><li>给定h(x)，求x计算上不可行（单向性）；</li><li>对于任意x，找到一个y，且y≠x使得h(x)= h(y)，计算上是不可行的（抗弱碰撞性）；</li><li>发现一对(x，y)使得h(x)=h(y)，计算上也是不可行的。（强碰撞性）</li></ul></li><li>Hash-lock协议流程<ul><li>① 标签 T 进入阅读器 R 的有效范围，接收到阅读器 R 发出的命令 Query请求认证</li><li>② 标签 T 通过反向信道发送 metalID 作为回复。[ 注：metaID=hash（key）]</li><li>③ 阅读器 R 将 metalID 传送给后台数据库 B，数据库查询是否存在相等的metalID 值</li><li>④若匹配则发送相应的标签信息(key, ID)给阅读器 R。</li><li>⑤ 阅读器仅将其中的 key’发送给标签。标签验证 key’是否等于 key。</li><li>⑥若 key’＝key 则标签将其 ID 发送给阅读器。阅读器收到标签发送过来的ID与后台应用系统传输过来的ID进行对比，相同则认证成功，否则认证失败</li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113792.png" alt="image-20231207132507226"></p><ul><li>优点<ul><li>解密单向Hash函数是较困难的，因此该方法可以<strong>阻止未授权的阅读器读取标签信息数据</strong>；</li><li>该方法只需在标签上实现一个Hash函数的计算，以及增加存储metaID值，因此在低成本的标签上<strong>容易实现</strong>。</li></ul></li><li>缺点<ul><li>由于每次询问时标签回答的数据是特定的，因此其<strong>不能防止位置跟踪攻击</strong>；</li><li>阅读器和标签问传输的<strong>数据未经加密</strong>，窃听者可以轻易地获得标签Key和ID值。</li></ul></li></ul><h1>第六章</h1><blockquote><p>三大标准体系各自的特点</p></blockquote><h2 id="三大体系">三大体系</h2><ul><li><p>EPCglobal</p><ul><li><p>由美国主导，代表欧美利益全球实力最大的物联网RFID标准组织</p></li><li><p>EPCglobal标准体系<strong>面向物流供应链领域</strong>，可以看成是一个应用标准。EPCglobal的目标是解决供应链的透明性和追踪性</p></li></ul></li><li><p>ISO/IEC</p><ul><li>承担制定全球多种标准的任务，是最早制定RFID标准的组织</li></ul></li><li><p>UID</p><ul><li>日本物联网RFID标准组织</li></ul></li></ul><h2 id="特点">特点</h2><blockquote><p>特点是让AI写的，PPT没找到</p></blockquote><ul><li>ISO/IEC<ul><li>ISO/IEC是信息技术领域最重要的标准化组织之一，制定RFID标准时考虑了物流供应链领域的单品标识以及电子票证、物品防伪、动物管理、食品与医药管理、固定资产管理等应用领域。ISO/IEC的RFID标准体系突出了产品和实用，但可能存在兼容性和利益操控性的问题。</li></ul></li><li>EPCglobal<ul><li>EPCglobal标准体系是面向物流供应链领域的，目标是解决供应链的透明性和追踪性。为此，EPCglobal制定了EPC编码标准，为所有物品提供单件唯一标识，还制定了空中接口协议、读写器协议等与ISO标准体系类似的标准。EPCglobal尽量与ISO兼容，但也有其局限范围，如关注UHF 860～930 MHz。EPCglobal非常强调供应链各方之间的信息共享，为此制定了信息共享的物联网相关标准。</li></ul></li><li>UID<ul><li>UID是日本泛在识别通信协会，制定的Ucode泛在码是日本国家标准。UID的RFID标准以泛在码为核心，旨在实现物品的全球唯一标识和数据共享。UID的RFID系统由数据载体、阅读器和信息服务器组成，具有高精度、可扩展、安全可靠等特点。</li></ul></li></ul><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">ISO/IEC</th><th style="text-align:center">EPCglobal</th></tr></thead><tbody><tr><td style="text-align:center">应用领域</td><td style="text-align:center">不同领域</td><td style="text-align:center">物流供应链</td></tr><tr><td style="text-align:center">关注频段</td><td style="text-align:center">各个频段</td><td style="text-align:center">主要关注UHF860~930MH</td></tr><tr><td style="text-align:center">标准内容</td><td style="text-align:center">仅仅考虑自动身份识别与数据采集的相关标准，数据采集以后如何处理、共享并没有作规定。</td><td style="text-align:center">除信息采集外，还制定了EPCIS、ALE、LLRP等多个标准。</td></tr></tbody></table><h2 id="ISO-IEC-14443标准内容">ISO/IEC 14443标准内容</h2><blockquote><p>看PPT（第六章P35-63）</p></blockquote><ul><li>ISO/IEC 14443-1   物理特性</li><li>ISO/IEC 14443-2  频谱功率和信号接口</li><li>ISO/IEC 14443-3  初始化和防碰撞算法</li><li>ISO/IEC 14443-4   通讯协议</li></ul><h1>第八章</h1><blockquote><p>13.56MHz RFID技术</p></blockquote><h2 id="电子标签-S50卡">电子标签(S50卡)</h2><table><thead><tr><th style="text-align:center"><strong>频率</strong></th><th style="text-align:center"><strong>型号</strong></th><th style="text-align:center"><strong>内存</strong></th><th style="text-align:center">可读/写</th><th style="text-align:center"><strong>支持协议</strong></th></tr></thead><tbody><tr><td style="text-align:center">13.56MHz</td><td style="text-align:center">MF1 S50</td><td style="text-align:center">1024bytes</td><td style="text-align:center">Read/write</td><td style="text-align:center">ISO 14443A</td></tr></tbody></table><ul><li>交互过程⭐**（会画）**</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113793.png" alt=""></p><ul><li><p>存储结构⭐</p><ul><li>存储容量为1024×8 b字长(即1 KB)</li><li>M1卡分为16扇区，每扇区分为4块，分别为块0、块1、块2和块3，每块16字节;</li><li>扇区前3块为<strong>数据块</strong>,用于存贮数据 ，<strong>最后1块为控制块</strong>, 存放密码A、存取控制、密码B</li><li>0区0块用于存放厂商代码，已经固化，不可修改</li><li>IC卡的读写<strong>以块为单位</strong></li></ul></li><li><p>数据块</p><ul><li>读写块：用作一般的数据操作，可用读/写命令直接读/写整个块</li><li>值块：用作定值操作，可以进行加值/减值（INC/DEC）的运算。</li></ul></li></ul><h2 id="阅读器-2">阅读器</h2><ul><li>设计阅读器电路需考虑的问题<ul><li>阅读器是便携式还是固定式</li><li>支持一种还是多种电子标签的读/写</li><li>阅读器的读/写的距离</li><li>阅读器和电子标签的周边环境，如电磁环境、温度、湿度、安全等</li><li>供电方式与节约能耗的措施、电磁兼容（EMC）性能</li><li>与高层通信接口的方式</li><li>防碰撞算法的实现方法、加密的需求</li><li>选用现有的阅读器集成芯片还是自行进行电路设计</li><li>若自行进行电路设计，还应设计其编/解码、防碰撞处理、加/解密等电路</li><li>微控制器（MCU）的选用</li><li>收发信号的调制方式与带宽、天线的形式与匹配方法</li></ul></li><li>阅读器的结构</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113794.png" alt=""></p><ul><li><p>RC522</p><ul><li>通信协议：IIC，SPI，RS232</li><li>支持的协议：ISO14443A</li><li>FIFO深度：64</li></ul></li><li><p>相关函数</p></li></ul><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">函数</th></tr></thead><tbody><tr><td style="text-align:center">通信函数</td><td style="text-align:center">PcdComMF522(…)</td></tr><tr><td style="text-align:center">复位函数</td><td style="text-align:center">PcdReset(…)</td></tr><tr><td style="text-align:center">寻卡函数</td><td style="text-align:center">PcdRequest(…)</td></tr><tr><td style="text-align:center">防碰撞函数</td><td style="text-align:center">PcdAnticoll(…)</td></tr><tr><td style="text-align:center">选卡函数</td><td style="text-align:center">PcdSelect(…)</td></tr><tr><td style="text-align:center">认证函数</td><td style="text-align:center">PcdAuthState(…)</td></tr><tr><td style="text-align:center">读函数</td><td style="text-align:center">PcdRead(…)</td></tr><tr><td style="text-align:center">写函数</td><td style="text-align:center">PcdWrite(…)</td></tr><tr><td style="text-align:center">中止函数</td><td style="text-align:center">PcdHalt(…)</td></tr><tr><td style="text-align:center">值操作（初始化）</td><td style="text-align:center">PcdIntPurse</td></tr><tr><td style="text-align:center">值操作（加值）</td><td style="text-align:center">PcdIncrease</td></tr><tr><td style="text-align:center">值操作（减值）</td><td style="text-align:center">PcdDecrease</td></tr></tbody></table><h1>第十章</h1><h2 id="中间件">中间件</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113795.png" alt=""></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113796.png" alt="image-20231210142325939"></p><ul><li>架构<ul><li><strong>读写器接口</strong>位于中间件最底层，包括了系统支持的所有硬件的设备驱动，并管理所有的硬件相干的参数，如读写器协议、空中接口、主机侧通信。</li><li><strong>数据处理和存储单元层</strong>负责处理和存储来自读写器的原始数据，由本层携带的处理逻辑对数据过滤、聚合和转换。</li><li><strong>中间件管理层</strong>帮助管理射频识别中间件的配置，如添加、配置、修改连接射频读写器；修改应用程序级参数；添加和移除射频识别中间件支持的服务等。</li><li><strong>应用程序接口</strong>提供带API的应用程序来访问、通信、配置射频识别中间件。</li></ul></li><li>作用<ul><li>Savant是连接标签读写器和企业应用程序的纽带。</li><li>Savant系统完成的任务主要是数据校对、读写器协调、数据传送、数据存储和任务管理等。</li></ul></li></ul><h2 id="ONS">ONS</h2><ul><li>ONS功能<ul><li>ONS（对象名称解析服务），系统主要处理电子产品编码与对应的EPCIS信息服务器地址的映射管理和查询。</li><li>利用DNS构架实现ONS服务</li></ul></li><li>ONS和DNS的区别</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113797.png" alt=""></p><h2 id="EPCIS">EPCIS</h2><ul><li><p>功能</p><ul><li><p>EPCIS是最终用户与EPCglobal网络进行数据交换的主要桥梁。</p></li><li><p>作为网络数据库来实现的，EPC被用作数据库的查询指针。</p></li><li><p>EPCIS提供信息查询的接口，可与已有的数据库、应用程序及信息系统相连接。</p></li></ul></li><li><p>数据来源</p><ul><li>EPCIS服务器上的数据由供应链上下游的企业共享获得的。EPC相关数据包括EPC标签和识读器获取的相关信息，以及商业上一些必须的附加数据。</li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113798.png" alt=""></p><h2 id="工作流程">工作流程</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113799.png" alt=""></p><ul><li>EPC的工作流程<ol><li>读写器从标签上识读出EPC标签的编码信息。</li><li>分布式Savant软件系统处理和管理由读写器读取的EPC标签信息。</li><li>Savant将EPC传给ONS。</li><li>ONS指示Savant到一个保存产品文件的PML服务器的IP地址。</li><li>PML服务器利用PML技术把产品信息传到供应链上</li></ol></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032113800.png" alt="image-20231209195153602"></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>13 端点、簇、属性</title>
      <link href="/post/7e06ba51.html"/>
      <url>/post/7e06ba51.html</url>
      
        <content type="html"><![CDATA[<h1>端点（endPoint）</h1><p>一个端点就是一个应用</p><ol><li>一个字节编号，数据收和发送的基本单元，在模块通信的时候，发送模块必须指定收发双方模块的网络地址和端点。</li><li>端点要使用必须要和模块里的某个任务挂钩定义；</li></ol><blockquote><p>首先每一个端点可以看成是一个1个字节数字编号的开有一扇门的房间，数据最终的目标是进入到无线数据包指定的目标端点房间，而取无线数据这个相关的代码在任务事件处理函数里，TI协议栈有那么多的任务事件处理函数，所以必须要指定在哪个任务事件处理函数 来取这个无线数据包里面的有用数据。</p></blockquote><p>3、一个端点只能挂钩在一个任务上，而一个任务可以挂钩多个端点，且端点对所有的任务是公用的，定义一个少一个。</p><blockquote><p>一个端点加入可以挂钩在多个任务上，那么接收模块接到无线数据时候，这个时候同一个端点有多个任务事件处理函数去处理，不合理；一个任务上挂多个端点（6 7 挂应用层任务），发送给协调器模块的6 7端点的数据都会进入到应用层任务事件处理函数里来，仅仅做个判断到底是投递到6房间还是7号房间就可以了。</p></blockquote><h1>簇（ClusterID）</h1><ol><li><p>一类应用会包含多个应用，每个应用都有独特的属性和命令，通常按照应用把最相关的一些属性和命令归到一起，称为簇（Cluster）</p></li><li><p>簇就是相当于端点房间里面的人，是接收最终的目标。这东西是2个字节编号，在射频发送的时候，必须要指定接收模块的簇，发送模块不需要指定。</p></li></ol><h1>属性</h1><p>属性就是在应用层有用的数据载荷，做专门规定最小单元</p><h1>结合发送代码分析</h1><h2 id="端点定义">端点定义</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103071.png" alt="image-20231127225321299"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SDApp_epDesc.endPoint = SDApp_ENDPOINT;<span class="comment">//端点编号</span></span><br><span class="line">SDApp_epDesc.task_id = &amp;SDApp_TaskID; <span class="comment">// 和应用层任务挂钩</span></span><br><span class="line">SDApp_epDesc.simpleDesc</span><br><span class="line">          = (SimpleDescriptionFormat_t *)&amp;SDApp_SimpleDesc;<span class="comment">//更加详细的描述这个端点一些情况就像我们定义一个编号房间，描述房间里大概有多少人之类的信息。</span></span><br><span class="line">SDApp_epDesc.latencyReq = noLatencyReqs;<span class="comment">//同上，也是描述信息</span></span><br><span class="line"></span><br><span class="line">afRegister( &amp;SDApp_epDesc );<span class="comment">//这个函数必须要调用才能完成整个挂钩操作</span></span><br></pre></td></tr></table></figure><h2 id="发送">发送</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="number">0</span>==P1_1)&#123;<span class="comment">/*按钮3按下*/</span></span><br><span class="line"></span><br><span class="line">   <span class="type">char</span> theMessageData[] = &#123;<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">   TestAPP_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; <span class="comment">//设置为16位地址模式  </span></span><br><span class="line">   TestAPP_DstAddr.addr.shortAddr = <span class="number">0x0000</span>; <span class="comment">// 目标网络地址</span></span><br><span class="line">   TestAPP_DstAddr.endPoint = <span class="number">7</span>; <span class="comment">//目标端点 </span></span><br><span class="line"></span><br><span class="line">   AF_DataRequest(&amp;TestAPP_DstAddr, <span class="comment">//目标地址</span></span><br><span class="line">                  &amp;TestAPP_epDesc, <span class="comment">// 端点描述</span></span><br><span class="line">                  <span class="number">0x0001</span>, <span class="comment">// 簇ID</span></span><br><span class="line">                  <span class="number">1</span>,<span class="comment">// 消息数据的长度</span></span><br><span class="line">                  (byte *)&amp;theMessageData, <span class="comment">// 字符串内容数组首地址</span></span><br><span class="line">                  &amp;TestAPP_TransID,<span class="comment">// 发送次数计数</span></span><br><span class="line">                  AF_DISCV_ROUTE, AF_DEFAULT_RADIUS);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抓包分析">抓包分析</h2><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103073.png" alt="image-20231127225506265"></p><ul><li>APS Dest. Endpoint : 0x07    【目标地址7号端点】</li><li>APS Cluster Id：0x0001     【7号端点的0001簇】</li><li>APS Src. Endpoint : 0x0C    【源地址11号端点】</li></ul><h1>单播发送案例</h1><h2 id="案例描述">案例描述</h2><ul><li>终端模块：应用层绑定端点11，有三个按键<ul><li>按键1：按下后向协调器、端点7、簇1，发送字符3</li><li>按键2：按下后向协调器、端点7、簇2，发送字符4</li><li>按键3：按下后向协调器、端点8、簇1，发送字符5</li></ul></li><li>协调器模块：在无线数据接收时间处理函数中，处理终端发送的数据包，判断端点、簇，然后做出响应<ul><li>端点7，簇1：LED1亮灭</li><li>端点7，簇2：LED2亮灭</li><li>端点8，簇1：LED3亮灭</li></ul></li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103074.png" alt="image-20231127230753825"></p><h2 id="实现代码">实现代码</h2><blockquote><p>在之前【Z-stack协议栈使用】的代码基础上，完成本次案例</p></blockquote><h3 id="发送模块">发送模块</h3><p>将之前在<code>UINT16 TestAPP_ProcessEvent( byte task_id, UINT16 events )</code>函数中，自己新添加的<code>TestAPP_EVT</code>事件响应的内容替换为下面的内容</p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103075.png" alt="image-20231127232124339"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( events &amp; TestAPP_EVT )&#123;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>(<span class="number">0</span>==P1_1)&#123;<span class="comment">/*按钮3按下*/</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">char</span> theMessageData[] = &#123;<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        TestAPP_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; <span class="comment">//设置为16位地址模式  </span></span><br><span class="line">        TestAPP_DstAddr.addr.shortAddr = <span class="number">0x0000</span>; <span class="comment">// 目标网络地址</span></span><br><span class="line">        TestAPP_DstAddr.endPoint = <span class="number">7</span>; <span class="comment">//目标端点 </span></span><br><span class="line">         </span><br><span class="line">        AF_DataRequest(&amp;TestAPP_DstAddr, <span class="comment">//目标地址</span></span><br><span class="line">                       &amp;TestAPP_epDesc, <span class="comment">// 端点描述</span></span><br><span class="line">                       <span class="number">0x0001</span>, <span class="comment">// 簇ID</span></span><br><span class="line">                       <span class="number">1</span>,<span class="comment">// 消息数据的长度</span></span><br><span class="line">                       (byte *)&amp;theMessageData, <span class="comment">// 字符串内容数组首地址</span></span><br><span class="line">                       &amp;TestAPP_TransID,<span class="comment">// 发送次数计数</span></span><br><span class="line">                       AF_DISCV_ROUTE, AF_DEFAULT_RADIUS);  </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span>(<span class="number">0</span>==P2_0)&#123;<span class="comment">/*按钮4按下*/</span></span><br><span class="line">        <span class="type">char</span> theMessageData[] = &#123;<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line">        TestAPP_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; <span class="comment">//设置为16位地址模式  </span></span><br><span class="line">        TestAPP_DstAddr.addr.shortAddr = <span class="number">0x0000</span>; <span class="comment">// 目标网络地址</span></span><br><span class="line">        TestAPP_DstAddr.endPoint = <span class="number">7</span>; <span class="comment">//目标端点 </span></span><br><span class="line">         </span><br><span class="line">        AF_DataRequest(&amp;TestAPP_DstAddr, <span class="comment">//目标地址</span></span><br><span class="line">                       &amp;TestAPP_epDesc, <span class="comment">// 端点描述</span></span><br><span class="line">                       <span class="number">0x0002</span>, <span class="comment">// 簇ID</span></span><br><span class="line">                       <span class="number">1</span>,<span class="comment">// 消息数据的长度</span></span><br><span class="line">                       (byte *)&amp;theMessageData, <span class="comment">// 字符串内容数组首地址</span></span><br><span class="line">                       &amp;TestAPP_TransID,<span class="comment">// 发送次数计数</span></span><br><span class="line">                       AF_DISCV_ROUTE, AF_DEFAULT_RADIUS); </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span>(<span class="number">0</span>==P0_5)&#123;<span class="comment">/*按钮5按下*/</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">char</span> theMessageData[] = &#123;<span class="number">5</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        TestAPP_DstAddr.addrMode = (afAddrMode_t)Addr16Bit; <span class="comment">//设置为16位地址模式  </span></span><br><span class="line">        TestAPP_DstAddr.addr.shortAddr = <span class="number">0x0000</span>; <span class="comment">// 目标网络地址</span></span><br><span class="line">        TestAPP_DstAddr.endPoint = <span class="number">8</span>; <span class="comment">//目标端点 </span></span><br><span class="line">         </span><br><span class="line">        AF_DataRequest(&amp;TestAPP_DstAddr, <span class="comment">//目标地址</span></span><br><span class="line">                       &amp;TestAPP_epDesc, <span class="comment">// 端点描述</span></span><br><span class="line">                       <span class="number">0x0001</span>, <span class="comment">// 簇ID</span></span><br><span class="line">                       <span class="number">1</span>,<span class="comment">// 消息数据的长度</span></span><br><span class="line">                       (byte *)&amp;theMessageData, <span class="comment">// 字符串内容数组首地址</span></span><br><span class="line">                       &amp;TestAPP_TransID,<span class="comment">// 发送次数计数</span></span><br><span class="line">                       AF_DISCV_ROUTE, AF_DEFAULT_RADIUS); </span><br><span class="line">     &#125;</span><br><span class="line">      </span><br><span class="line">     <span class="keyword">return</span> (events ^ TestAPP_EVT);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="接收模块">接收模块</h3><ol><li>定义一个变量</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103076.png" alt="image-20231127231733432"></p><ol start="2"><li>端点绑定，在<code>TestAPP_Init</code>函数中，做如下修改</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103077.png" alt="image-20231127231641888"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//端点7</span></span><br><span class="line">TestAPP_epDesc.endPoint = <span class="number">7</span>; <span class="comment">//TestAPP_ENDPOINT;</span></span><br><span class="line">TestAPP_epDesc.task_id = &amp;TestAPP_TaskID;</span><br><span class="line">TestAPP_epDesc.simpleDesc</span><br><span class="line">          = (SimpleDescriptionFormat_t *)&amp;TestAPP_SimpleDesc;</span><br><span class="line">TestAPP_epDesc.latencyReq = noLatencyReqs;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Register the endpoint description with the AF</span></span><br><span class="line">afRegister( &amp;TestAPP_epDesc );</span><br><span class="line"></span><br><span class="line"><span class="comment">//端点8</span></span><br><span class="line">TestAPP_epDesc_8.endPoint = <span class="number">8</span>; <span class="comment">//TestAPP_ENDPOINT;</span></span><br><span class="line">TestAPP_epDesc_8.task_id = &amp;TestAPP_TaskID;</span><br><span class="line">TestAPP_epDesc_8.simpleDesc</span><br><span class="line">          = (SimpleDescriptionFormat_t *)&amp;TestAPP_SimpleDesc;</span><br><span class="line">TestAPP_epDesc_8.latencyReq = noLatencyReqs; </span><br><span class="line"></span><br><span class="line"><span class="comment">// Register the endpoint description with the AF</span></span><br><span class="line">afRegister( &amp;TestAPP_epDesc_8 );</span><br></pre></td></tr></table></figure><ol start="3"><li>将<code>void TestAPP_MessageMSGCB( afIncomingMSGPacket_t *pkt )</code>函数中的内容换成下面的</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TestAPP_MessageMSGCB</span><span class="params">( afIncomingMSGPacket_t *pkt )</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// 端点7</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="number">7</span> == pkt-&gt;endPoint)&#123;</span><br><span class="line">      <span class="keyword">switch</span>(pkt-&gt;clusterId)&#123;<span class="comment">// 判断是哪个簇</span></span><br><span class="line">         <span class="keyword">case</span> <span class="number">0x0001</span>:</span><br><span class="line">            LS164_BYTE(pkt-&gt;cmd.Data[<span class="number">0</span>]);</span><br><span class="line">            P1SEL &amp;=<span class="number">0XFE</span>;<span class="comment">//1111 1110  LED1</span></span><br><span class="line">            P1DIR |=<span class="number">0X01</span>;<span class="comment">//</span></span><br><span class="line">            P1_0 ^=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">           </span><br><span class="line">         <span class="keyword">case</span> <span class="number">0x0002</span>:</span><br><span class="line">            LS164_BYTE(pkt-&gt;cmd.Data[<span class="number">0</span>]);</span><br><span class="line">            P0SEL &amp;=<span class="number">0XFD</span>;<span class="comment">// 1111 1101;</span></span><br><span class="line">            P0DIR |=<span class="number">0X02</span>;</span><br><span class="line">            P0_1 ^=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">// 端点8</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="number">8</span> == pkt-&gt;endPoint)&#123;</span><br><span class="line">      <span class="keyword">switch</span>(pkt-&gt;clusterId)&#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="number">0x0001</span>:</span><br><span class="line">            LS164_BYTE(pkt-&gt;cmd.Data[<span class="number">0</span>]);</span><br><span class="line">            P0SEL &amp;=<span class="number">0XEF</span>;<span class="comment">// 1110 1111 LED3</span></span><br><span class="line">            P0DIR |=<span class="number">0X10</span>;</span><br><span class="line">            P0_4 ^=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202404032103078.png" alt="image-20231127232237859"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32+ESP8266+华为云</title>
      <link href="/post/ea4b98f1.html"/>
      <url>/post/ea4b98f1.html</url>
      
        <content type="html"><![CDATA[<h1>华为云平台创建产品</h1><h2 id="创建账号">创建账号</h2><p>此部分省略…</p><h2 id="打开物联网平台">打开物联网平台</h2><p>搜索框内搜索<code>物联网平台</code></p><p><img src="https://s2.loli.net/2023/06/09/Ww6uAio9gKafjkc.png" alt="image-20230609164140693"></p><p>点击打开【设备接入IOTDA】</p><img src="https://s2.loli.net/2023/06/09/CU2g3s4qemadPbG.png" alt="image-20230609164408118" style="zoom:67%;" /><p>点击进入【管理控制台】</p><img src="https://s2.loli.net/2023/06/09/ftqjRQa7bEy8g6T.png" alt="image-20230609164457032" style="zoom:67%;" /><blockquote><p>这里进入后可能会提示你进行实名认证，如果不实名认证的话是不可以使用云平台的</p></blockquote><h2 id="创建产品">创建产品</h2><blockquote><p>我记得第一次使用的话好像还需要创建一个空间啥的，如果创建的话就一切默认就行了</p></blockquote><ol><li>点击右上角的【创建产品】</li></ol><p><img src="https://s2.loli.net/2023/06/09/mbV6iohPujfX3n2.png" alt="image-20230609164631340"></p><ol start="2"><li>参考下图进行信息填写</li></ol><img src="https://s2.loli.net/2023/06/09/JQZB98sRdlNv43g.png" alt="image-20230609165225429" style="zoom: 67%;" /><ol start="3"><li>创建完成后进入创建的产品，进行产品模型设置</li><li>首先先创建一个服务，服务ID自己根据实际写（因为我是基于STM32开发的，所以写的就是STM32）</li></ol><p><img src="https://s2.loli.net/2023/06/09/AyPnfpbkNZtm18T.png" alt="image-20230609165726214"></p><ol start="5"><li>点击【新增属性】，添加产品需要收发的数据</li></ol><p><img src="https://s2.loli.net/2023/06/09/3aygNkeVb6uv5iA.png" alt="image-20230609165845771"></p><ol start="6"><li>根据实际项目需求的数据格式，填写内容（下图是我读取和设置电机速度建立的属性）</li></ol><img src="https://s2.loli.net/2023/06/09/6nY9TKZUFLIvCVe.png" alt="image-20230609170050359" style="zoom: 67%;" /><ol start="7"><li>如果你还需要进行云端下发指令控制设备，那么还需要点击【添加命令】，进行指令的设置</li></ol><p><img src="https://s2.loli.net/2023/06/09/LRDq1EKSv9yHwTZ.png" alt="image-20230609170209153"></p><ol start="8"><li>指令设置里面，【下发参数】就是下发指令控制设备，【响应参数】就是读取设备上传信息</li></ol><p><img src="https://s2.loli.net/2023/06/09/VF7dupS5gDL9xQh.png" alt="image-20230609170419208"></p><h2 id="创建设备">创建设备</h2><p>在【所有设备】界面，点击右上角的【注册设备】添加设备</p><p><img src="https://s2.loli.net/2023/06/09/7P1Uc6RgvwmMIAb.png" alt="image-20230609170850033"></p><p>记住下面页面生成的两个参数，他会给你一个下载一个TXT文件，这两个参数一会需要使用</p><p><img src="https://s2.loli.net/2023/06/09/U3hyIBN7r4lcLRi.png" alt="image-20230609171306029"></p><h2 id="获取MQTT三元组">获取MQTT三元组</h2><p>用下面的网页生成三元组：<a href="https://iot-tool.obs-website.cn-north-4.myhuaweicloud.com/">Huaweicloud IoTDA Mqtt ClientId Generator (myhuaweicloud.com)</a></p><p><img src="https://s2.loli.net/2023/06/09/pj6E5eXN28CPy4m.png" alt="image-20230609171618009"></p><p>点击【Generate】后会根据你填写的信息生成MQTT三元组</p><h2 id="平台地址和接口获取">平台地址和接口获取</h2><p>参照下图，找到MQTT协议下的平台地址和端口号</p><p>我们使用的是MQTT，所以端口是1883</p><p><img src="https://s2.loli.net/2023/06/09/LkBKuCdvNaG6mXy.png" alt="image-20230609171919965"></p><h1>ESP8266烧录AT指令</h1><p>这里参考之前连<a href="ESP8266%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91.md#%E4%B8%89%E3%80%81ESP8266%E5%9B%BA%E4%BB%B6%E7%83%A7%E5%BD%95">接阿里云的笔记</a>【如果之前烧录过AT指令，这里就可以不用再烧录了】</p><blockquote><p>烧录所需资源</p><p>链接：<a href="https://pan.baidu.com/s/1TsdqrG8J2jgWOyJGn-KJrw?pwd=u3il">https://pan.baidu.com/s/1TsdqrG8J2jgWOyJGn-KJrw?pwd=u3il</a><br>提取码：u3il</p></blockquote><p><img src="https://s2.loli.net/2023/04/09/Mkc6LSexz5tqBn1.png" alt="image-20230307200620751"></p><p>打开烧录工具进行烧录</p><img src="https://s2.loli.net/2023/04/09/wXMaqFEJjiN6epR.png" alt="image-20230307201314854" style="zoom:50%;" /><p><img src="https://s2.loli.net/2023/04/09/bqVaClF3xpUdXy8.png" alt="image-20230307201307109"></p><p>先点击【ERASE】,等完成后，再点击【START】进行烧录</p><p>烧录实际可能比较慢，耐心等待进度条跑完</p><blockquote><p>出现提示弹出显示<code>3-run stub fail</code>，可能事端口选择错误或波特率错误（115200与1152000注意）</p></blockquote><h1>STM32+标准库函数+连接华为云</h1><p>这里的设置参考：<a href="https://blog.csdn.net/weixin_43351158/article/details/129463418?ops_request_misc=%7B%22request%5Fid%22%3A%22168629023816800225552345%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=168629023816800225552345&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~sobaiduend~default-3-129463418-null-null.268%5Ev1%5Econtrol&amp;utm_term=STM32%E8%BF%9E%E6%8E%A5%E5%8D%8E%E4%B8%BA%E4%BA%91&amp;spm=1018.2226.3001.4450">STM32 标准库+ESP8266+华为云物联网平台_stm32 物联网平台_IOT趣制作的博客-CSDN博客</a></p><blockquote><p>delay函数使用自己的就行，没有提供</p></blockquote><h2 id="移植文件">移植文件</h2><blockquote><p>这两个文件是我参考的博客里面提供的驱动文件，我并没有完全按照他说的进行移植更改</p></blockquote><p>HuaweiIOT_at_esp8266.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*模块名称：esp8266+AT指令+华为云物联网平台</span></span><br><span class="line"><span class="comment">*文件名称： HuaweiIOT_at_esp8266.c</span></span><br><span class="line"><span class="comment">*说明备注：无</span></span><br><span class="line"><span class="comment">*修改记录：无</span></span><br><span class="line"><span class="comment">*版本号     日期          作者     说明</span></span><br><span class="line"><span class="comment">*V1.0       22-8-1       funiot.xyz|公众号“IOT趣制作”</span></span><br><span class="line"><span class="comment">*Copyright by JIA</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//【步骤1】使用本驱动文件时，请在main.c中添加引用 #include &quot;HuaweiIOT_at_esp8266.h&quot;</span></span><br><span class="line"><span class="comment">//【步骤2】使用本驱动文件时，请将HuaweIOT.h中宏定义的数据进行补齐</span></span><br><span class="line"><span class="comment">//【步骤3】使用本驱动文件时，请将下面变量的声明拷贝至main.c</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">步骤3拷贝开始↓</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">uint8_t uart1_rec_i=0;</span></span><br><span class="line"><span class="comment">extern uint8_t atok_rec_flag;</span></span><br><span class="line"><span class="comment">char uart1_recdata=0,uart1_recstring[256],sub_string[150],analysis_Str[256];</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">步骤3拷贝截至↑</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//【步骤4】使用本驱动文件时，请将下面的USART1_IRQHandler()串口接收中断处理函数拷贝至main.c，系统中断函数无需额外声明</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">步骤4拷贝开始↓</span></span><br><span class="line"><span class="comment">// *********************************************************************************************************</span></span><br><span class="line"><span class="comment">// * 函 数 名: USART1_IRQHandler</span></span><br><span class="line"><span class="comment">// * 功能说明: 串口中断1函数：主要完成esp8266模块的通信接收处理</span></span><br><span class="line"><span class="comment">// * 形 参：无</span></span><br><span class="line"><span class="comment">// * 返 回 值: 无</span></span><br><span class="line"><span class="comment">// *********************************************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">void USART1_IRQHandler(void)                //串口1中断服务程序</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">char str_temp[128];</span></span><br><span class="line"><span class="comment">char request_id[48];</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)  //接收中断</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">USART_ClearITPendingBit(USART1,USART_IT_RXNE); //清除中断标志</span></span><br><span class="line"><span class="comment">uart1_recdata =USART_ReceiveData(USART1);//读取接收到的数据</span></span><br><span class="line"><span class="comment">if(uart1_recdata!=&#x27;\n&#x27;)</span></span><br><span class="line"><span class="comment">&#123; </span></span><br><span class="line"><span class="comment">//防止第一个接收为空格</span></span><br><span class="line"><span class="comment">if((uart1_rec_i==0)&amp;&amp;(uart1_recdata==&#x27; &#x27;))</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">//测试发现在接收MQTT服务器下发的命令时，有时接收的数据第一位为空格</span></span><br><span class="line"><span class="comment">//通过上述判断方式可以解决，触发原因暂时不明，贾工留坑-2022.9.3.1</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">uart1_recstring[uart1_rec_i]=uart1_recdata;</span></span><br><span class="line"><span class="comment">//printf(&quot;%c&quot;,uart1_recstring[uart1_rec_i]);//调试时开启</span></span><br><span class="line"><span class="comment">uart1_rec_i++;//统计接收字符数量</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;Rec Over,uart1_rec_i=%d，data=%s\r\n&quot;,uart1_rec_i,uart1_recstring);//调试时开启，用于检查接收数据内容</span></span><br><span class="line"><span class="comment">if(uart1_rec_i&gt;=2)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">strncpy(sub_string,uart1_recstring,2);//截取前两位</span></span><br><span class="line"><span class="comment">if(strcmp(sub_string,&quot;OK&quot;)==0)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">atok_rec_flag=1;</span></span><br><span class="line"><span class="comment">//printf(&quot;Get Ok\r\n&quot;);//调试时开启，用于确定是否接收到&quot;ok&quot;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">strncpy(sub_string,uart1_recstring,5);</span></span><br><span class="line"><span class="comment">if(strcmp(sub_string,&quot;ready&quot;)==0)</span></span><br><span class="line"><span class="comment">&#123; </span></span><br><span class="line"><span class="comment">atok_rec_flag=1;</span></span><br><span class="line"><span class="comment">//printf(&quot;Get ready\r\n&quot;);//调试时开启,用于确定是否接收到“ready”</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">strncpy(sub_string,uart1_recstring,5);</span></span><br><span class="line"><span class="comment">if(strcmp(sub_string,&quot;ERROR&quot;)==0)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">atok_rec_flag=0;</span></span><br><span class="line"><span class="comment">//printf(&quot;Get ERROR\r\n&quot;);//调试时开启,用于确定是否接收到“ERROR”</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">//我的接收数据长度为201，下面采用JSON字符串硬解析的方式，具体下标请根据自己实际接收的参数处理</span></span><br><span class="line"><span class="comment">//+MQTTSUBRECV:0,&quot;$oc/devices/61fb2d7fde9933029funiot_esp8266_test01/sys/commands/request_id=4152fb5d-e5ae-4b89-b39d-283ba59cf033&quot;,68,&#123;&quot;paras&quot;:&#123;&quot;led&quot;:1&#125;,&quot;service_id&quot;:&quot;Dev_data&quot;,&quot;command_name&quot;:&quot;Control&quot;&#125;</span></span><br><span class="line"><span class="comment">          if(uart1_rec_i&gt;=200)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">strncpy(analysis_Str, uart1_recstring, 12);//提取出“+MQTTSUBRECV”</span></span><br><span class="line"><span class="comment">if(strcmp(analysis_Str,&quot;+MQTTSUBRECV&quot;)==0)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">memset(analysis_Str,0,sizeof(analysis_Str));//清空缓存区</span></span><br><span class="line"><span class="comment">//printf(&quot;MQTT命令接收头正确\r\n&quot;);</span></span><br><span class="line"><span class="comment">strncpy(request_id, uart1_recstring+92, 36);     //提取出request_id</span></span><br><span class="line"><span class="comment">//printf(&quot;request_id=%s\r\n&quot;,request_id);</span></span><br><span class="line"><span class="comment">strncpy(analysis_Str, uart1_recstring+135, 5);    //提取出&quot;paras&quot;</span></span><br><span class="line"><span class="comment">//printf(&quot;paras=%s\r\n&quot;,analysis_Str);</span></span><br><span class="line"><span class="comment">if(strcmp(analysis_Str,&quot;paras&quot;)==0)        //有效参数体</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">memset(analysis_Str,0,sizeof(analysis_Str));//清空缓存区</span></span><br><span class="line"><span class="comment">strncpy(analysis_Str, uart1_recstring+144,3);//提取出&quot;led&quot;</span></span><br><span class="line"><span class="comment">//printf(&quot;att is %s\r\n&quot;,analysis_Str);</span></span><br><span class="line"><span class="comment">if(strcmp(analysis_Str,&quot;led&quot;)==0)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;led set %c\r\n&quot;,uart1_recstring[149]);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if(uart1_recstring[149]==&#x27;0&#x27;)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;关灯\r\n&quot;);</span></span><br><span class="line"><span class="comment">LED_TurnOff(3);  </span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">else if(uart1_recstring[149]==&#x27;1&#x27;)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">//printf(&quot;开灯\r\n&quot;);      </span></span><br><span class="line"><span class="comment">LED_TurnOn(3);</span></span><br><span class="line"><span class="comment">&#125; </span></span><br><span class="line"><span class="comment">//向云平台完成命令响应</span></span><br><span class="line"><span class="comment">printf(&quot;AT+MQTTPUB=0,\&quot;$oc/devices/%s/sys/commands/response/request_id=%s\&quot;,\&quot;\&quot;,0,0\r\n&quot;,HUAWEI_MQTT_DeviceID,request_id);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">memset(analysis_Str,0,sizeof(analysis_Str));//清空缓存区  </span></span><br><span class="line"><span class="comment">memset(str_temp,0,sizeof(str_temp));//清空缓存区  </span></span><br><span class="line"><span class="comment">&#125;        </span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">uart1_rec_i=0;</span></span><br><span class="line"><span class="comment">memset(uart1_recstring,0,sizeof(uart1_recstring));//清空uart1_recstring字符串</span></span><br><span class="line"><span class="comment">memset(sub_string,0,sizeof(sub_string));//清空sub_string字符串</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"> &#125; </span></span><br><span class="line"><span class="comment">&#125; </span></span><br><span class="line"><span class="comment">步骤4拷贝截至↑</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*头文件包含区*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HuaweiIOT_at_esp8266.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*宏定义区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*外部变量声明区*/</span></span><br><span class="line"><span class="type">uint8_t</span> atok_rec_flag;</span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*函数声明区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*函数实体区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* 函 数 名: HuaweiIot_init</span></span><br><span class="line"><span class="comment">* 功能说明: 华为云物联网平台初始化</span></span><br><span class="line"><span class="comment">* 形 参：无</span></span><br><span class="line"><span class="comment">* 返 回 值: 无</span></span><br><span class="line"><span class="comment">**********************************************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str_temp[<span class="number">256</span>];<span class="comment">//虽然在实际使用时str_temp最大不超100，但是测试时发现char str_temp[128]时程序会卡死</span></span><br><span class="line"><span class="comment">//经过景哥和强哥帮助，将其改为char str_temp[256]时可以正常运行，或者将其定义为全局变量</span></span><br><span class="line"><span class="comment">//初步分析为作用域不同导致分配栈空间不同，具体原因待日后分析。—贾工留坑-2023.3.10.1</span></span><br><span class="line"></span><br><span class="line">delay_ms(<span class="number">1000</span>);<span class="comment">//等待模块上电稳定</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(atok_rec_flag==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            AT_write(<span class="string">&quot;AT&quot;</span>);<span class="comment">//AT测试</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;AT+RST\r\n&quot;</span>);<span class="comment">//重启设备</span></span><br><span class="line">            delay_ms(<span class="number">2000</span>);<span class="comment">//等待设备重启</span></span><br><span class="line">            AT_write(<span class="string">&quot;AT&quot;</span>);<span class="comment">//AT测试</span></span><br><span class="line">            AT_write(<span class="string">&quot;AT+CWMODE=1&quot;</span>);<span class="comment">//设置模块为STA模式</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+CWJAP=\&quot;%s\&quot;,\&quot;%s\&quot;&quot;</span>,WIFI_SSID,WIFI_PWD);<span class="comment">//连接WiFi</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTUSERCFG=0,1,\&quot;NULL\&quot;,\&quot;%s\&quot;,\&quot;%s\&quot;,0,0,\&quot;\&quot;&quot;</span>,HUAWEI_MQTT_USERNAME,HUAWEI_MQTT_PASSWORD);<span class="comment">//设置MQTT的登陆用户名与密码</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTCLIENTID=0,\&quot;%s\&quot;&quot;</span>,HUAWEI_MQTT_ClientID);<span class="comment">//设置MQTT的ClientID</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTCONN=0,\&quot;%s\&quot;,%s,1&quot;</span>,HUAWEI_MQTT_ADDRESS,HUAWEI_MQTT_PORT);<span class="comment">//设置MQTT接入地址与端口号</span></span><br><span class="line">AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTSUB=0,\&quot;$oc/devices/%s/sys/properties/report\&quot;,1&quot;</span>,HUAWEI_MQTT_DeviceID);<span class="comment">//订阅设备属性上报的主题</span></span><br><span class="line">AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTSUB=0,\&quot;$oc/devices/%s/sys/commands/#\&quot;,1&quot;</span>,HUAWEI_MQTT_DeviceID);<span class="comment">//订阅设备命令接收的主题</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTSUB=0,\&quot;$oc/devices/%s/sys/commands/response/#\&quot;,1&quot;</span>,HUAWEI_MQTT_DeviceID);<span class="comment">//订阅设备命令响应的主题</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Connected ESP01s Fail!\r\n&quot;</span>);<span class="comment">//连接超时</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AT\r\n&quot;</span>);</span><br><span class="line">delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        &#125;            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* 函 数 名: AT_write</span></span><br><span class="line"><span class="comment">* 功能说明: AT指令发送</span></span><br><span class="line"><span class="comment">* 形 参：无</span></span><br><span class="line"><span class="comment">* 返 回 值: 无</span></span><br><span class="line"><span class="comment">**********************************************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AT_write</span><span class="params">(<span class="type">char</span> atstring[<span class="number">512</span>])</span><span class="comment">//阻塞等待OK</span></span><br><span class="line">&#123;</span><br><span class="line">atok_rec_flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\r\n&quot;</span>,atstring);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(atok_rec_flag==<span class="number">1</span>)<span class="comment">//接收到OK后串口中断会将atok_rec_flag置1</span></span><br><span class="line">&#123;</span><br><span class="line">atok_rec_flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">delay_ms(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* 函 数 名: HuaweiIot_publish</span></span><br><span class="line"><span class="comment">* 功能说明: 华为云设备属性上报</span></span><br><span class="line"><span class="comment">* 形 参：char * att,属性名；uint16_t data：属性值</span></span><br><span class="line"><span class="comment">* 返 回 值: 无</span></span><br><span class="line"><span class="comment">**********************************************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_DevDate_publish</span><span class="params">(<span class="type">char</span> *att,<span class="type">uint16_t</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AT+MQTTPUB=0,\&quot;$oc/devices/%s/sys/properties/report\&quot;,\&quot;&#123;\\\&quot;services\\\&quot;:[&#123;\\\&quot;service_id\\\&quot;:\\\&quot;%s\\\&quot;\\,\\\&quot;properties\\\&quot;:&#123;\\\&quot;%s\\\&quot;: %d&#125;&#125;]&#125;\&quot;,0,0\r\n&quot;</span>,HUAWEI_MQTT_DeviceID,HUAWEI_MQTT_ServiceID,att,data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HuaweiIOT_at_esp8266.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*模块名称： esp8266+AT指令+华为云物联网平台</span></span><br><span class="line"><span class="comment">*文件名称： HuaweiIOT_at_esp8266.h</span></span><br><span class="line"><span class="comment">*说明备注：无</span></span><br><span class="line"><span class="comment">*修改记录：无</span></span><br><span class="line"><span class="comment">*版本号     日期          作者     说明</span></span><br><span class="line"><span class="comment">*V1.0       22-8-1      funiot.xyz|公众号“IOT趣制作”  </span></span><br><span class="line"><span class="comment">*Copyright by JIA</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __HUAWEIIOT_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HUAWEIIOT_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*头文件包含区*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*宏定义区*/</span></span><br><span class="line"><span class="comment">//使用时请在这里补全相关信息</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIFI_SSID<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIFI_PWD<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_USERNAME<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_PASSWORD<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ClientID<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ADDRESS<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_PORT<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_DeviceID<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ServiceID<span class="string">&quot;xxxxxxxx&quot;</span></span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*外部变量声明区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*函数声明区*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AT_write</span><span class="params">(<span class="type">char</span> atstring[<span class="number">512</span>])</span>;<span class="comment">//阻塞等待OK</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_DevDate_publish</span><span class="params">(<span class="type">char</span> * att,<span class="type">uint16_t</span> data)</span>;</span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="填写宏定义数据">填写宏定义数据</h2><p>HUAWEI_MQTT_DeviceID：创建产品时生成的产品ID</p><p>HUAWEI_MQTT_ServiceID：创建产品时在模型里面创建的服务ID</p><p><img src="https://s2.loli.net/2023/06/09/One91psr7hdcuqk.png" alt="image-20230609172752098"></p><h2 id="添加usart文件">添加usart文件</h2><p>我这把usart中断函数放在了usart.c文件中，没有放在main.c中</p><p>usart.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HuaweiIOT_at_esp8266.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> uart1_rec_i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> atok_rec_flag;</span><br><span class="line"><span class="type">char</span> uart1_recdata = <span class="number">0</span>, uart1_recstring[<span class="number">256</span>], sub_string[<span class="number">150</span>], analysis_Str[<span class="number">256</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint16_t</span> speed;</span><br><span class="line"><span class="type">uint16_t</span> speed_flag;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyUSART_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);<span class="comment">//1.开启时钟</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;                 <span class="comment">//初始化GIPIO</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    USART_InitTypeDef USART_InitStructure;              <span class="comment">//初始化串口</span></span><br><span class="line">    USART_InitStructure.USART_BaudRate = <span class="number">115200</span>;</span><br><span class="line">    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;</span><br><span class="line">    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;</span><br><span class="line">    USART_InitStructure.USART_Parity = USART_Parity_No;</span><br><span class="line">    USART_InitStructure.USART_StopBits = USART_StopBits_1;</span><br><span class="line">    USART_InitStructure.USART_WordLength = USART_WordLength_8b;</span><br><span class="line">    USART_Init(USART1, &amp;USART_InitStructure);</span><br><span class="line"></span><br><span class="line">    NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0</span>;</span><br><span class="line">    NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">    USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);</span><br><span class="line">    USART_Cmd(USART1, ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// *********************************************************************************************************</span></span><br><span class="line"><span class="comment">// * 函 数 名: USART1_IRQHandler</span></span><br><span class="line"><span class="comment">// * 功能说明: 串口中断1函数：主要完成esp8266模块的通信接收处理</span></span><br><span class="line"><span class="comment">// * 形 参：无</span></span><br><span class="line"><span class="comment">// * 返 回 值: 无</span></span><br><span class="line"><span class="comment">// *********************************************************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>                    <span class="comment">//串口1中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str_temp[<span class="number">128</span>];</span><br><span class="line">    <span class="type">char</span> request_id[<span class="number">48</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)    <span class="comment">//接收中断</span></span><br><span class="line">    &#123;</span><br><span class="line">        USART_ClearITPendingBit(USART1, USART_IT_RXNE);            <span class="comment">//清除中断标志</span></span><br><span class="line">        uart1_recdata = USART_ReceiveData(USART1);                        <span class="comment">//读取接收到的数据</span></span><br><span class="line">        <span class="keyword">if</span> (uart1_recdata != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//防止第一个接收为空格</span></span><br><span class="line">            <span class="keyword">if</span> ((uart1_rec_i == <span class="number">0</span>) &amp;&amp; (uart1_recdata == <span class="string">&#x27; &#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">//测试发现在接收MQTT服务器下发的命令时，有时接收的数据第一位为空格</span></span><br><span class="line">                <span class="comment">//通过上述判断方式可以解决，触发原因暂时不明，贾工留坑-2022.9.3.1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                uart1_recstring[uart1_rec_i] = uart1_recdata;</span><br><span class="line">                <span class="comment">//printf(&quot;%c&quot;,uart1_recstring[uart1_rec_i]);//调试时开启</span></span><br><span class="line">                uart1_rec_i++;    <span class="comment">//统计接收字符数量</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;Rec Over,uart1_rec_i=%d，data=%s\r\n&quot;,uart1_rec_i,uart1_recstring);//调试时开启，用于检查接收数据内容</span></span><br><span class="line">            <span class="keyword">if</span> (uart1_rec_i &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="built_in">strncpy</span>(sub_string, uart1_recstring, <span class="number">2</span>);    <span class="comment">//截取前两位</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(sub_string, <span class="string">&quot;OK&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    atok_rec_flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//printf(&quot;Get Ok\r\n&quot;);//调试时开启，用于确定是否接收到&quot;ok&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">strncpy</span>(sub_string, uart1_recstring, <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(sub_string, <span class="string">&quot;ready&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    atok_rec_flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//printf(&quot;Get ready\r\n&quot;);//调试时开启,用于确定是否接收到“ready”</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">strncpy</span>(sub_string, uart1_recstring, <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(sub_string, <span class="string">&quot;ERROR&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    atok_rec_flag = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">//printf(&quot;Get ERROR\r\n&quot;);//调试时开启,用于确定是否接收到“ERROR”</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//我的接收数据长度为201，下面采用JSON字符串硬解析的方式，具体下标请根据自己实际接收的参数处理</span></span><br><span class="line">                <span class="comment">//+MQTTSUBRECV:0,&quot;$oc/devices/61fb2d7fde9933029funiot_esp8266_test01/sys/commands/request_id=4152fb5d-e5ae-4b89-b39d-283ba59cf033&quot;,68,&#123;&quot;paras&quot;:&#123;&quot;led&quot;:1&#125;,&quot;service_id&quot;:&quot;Dev_data&quot;,&quot;command_name&quot;:&quot;Control&quot;&#125;</span></span><br><span class="line">                <span class="keyword">if</span> (uart1_rec_i &gt;= <span class="number">190</span>) &#123;</span><br><span class="line">                    <span class="built_in">strncpy</span>(analysis_Str, uart1_recstring, <span class="number">12</span>);                            <span class="comment">//提取出“+MQTTSUBRECV”</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(analysis_Str, <span class="string">&quot;+MQTTSUBRECV&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="built_in">memset</span>(analysis_Str, <span class="number">0</span>, <span class="keyword">sizeof</span>(analysis_Str));                    <span class="comment">//清空缓存区</span></span><br><span class="line">                        <span class="comment">//printf(&quot;MQTT命令接收头正确\r\n&quot;);</span></span><br><span class="line">                        <span class="built_in">strncpy</span>(request_id, uart1_recstring + <span class="number">84</span>, <span class="number">36</span>);                <span class="comment">//提取出request_id</span></span><br><span class="line">                        <span class="comment">//printf(&quot;request_id=%s\r\n&quot;,request_id);</span></span><br><span class="line">                        <span class="built_in">strncpy</span>(analysis_Str, uart1_recstring + <span class="number">127</span>, <span class="number">5</span>);            <span class="comment">//提取出&quot;paras&quot;</span></span><br><span class="line">                        <span class="comment">//printf(&quot;paras=%s\r\n&quot;,analysis_Str);</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(analysis_Str, <span class="string">&quot;paras&quot;</span>) == <span class="number">0</span>)                                <span class="comment">//有效参数体</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">memset</span>(analysis_Str, <span class="number">0</span>, <span class="keyword">sizeof</span>(analysis_Str));    <span class="comment">//清空缓存区</span></span><br><span class="line">                            <span class="built_in">strncpy</span>(analysis_Str, uart1_recstring + <span class="number">136</span>, <span class="number">7</span>);    <span class="comment">//提取出&quot;led&quot;</span></span><br><span class="line">                            <span class="comment">//printf(&quot;att is %s\r\n&quot;,analysis_Str);</span></span><br><span class="line">                            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(analysis_Str, <span class="string">&quot;ActVel1&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="comment">//printf(&quot;led set %c\r\n&quot;,uart1_recstring[145]);</span></span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (uart1_recstring[<span class="number">144</span>] == <span class="string">&#x27;:&#x27;</span>) &#123;</span><br><span class="line">speed = (uart1_recstring[<span class="number">145</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span>  + (uart1_recstring[<span class="number">146</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">//                                  printf(&quot;关灯\r\n&quot;);</span></span><br><span class="line"></span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (uart1_recstring[<span class="number">145</span>] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                                    <span class="built_in">printf</span>(<span class="string">&quot;开灯\r\n&quot;</span>);</span><br><span class="line">                                    <span class="comment">//LED_TurnOn(3);</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="comment">//向云平台完成命令响应</span></span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;AT+MQTTPUB=0,\&quot;$oc/devices/%s/sys/commands/response/request_id=%s\&quot;,\&quot;\&quot;,0,0\r\n&quot;</span>,</span><br><span class="line">                                       HUAWEI_MQTT_DeviceID, request_id);</span><br><span class="line"></span><br><span class="line">                                <span class="built_in">memset</span>(analysis_Str, <span class="number">0</span>, <span class="keyword">sizeof</span>(analysis_Str));<span class="comment">//清空缓存区  </span></span><br><span class="line">                                <span class="built_in">memset</span>(str_temp, <span class="number">0</span>, <span class="keyword">sizeof</span>(str_temp));                <span class="comment">//清空缓存区  </span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            uart1_rec_i = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">memset</span>(uart1_recstring, <span class="number">0</span>, <span class="keyword">sizeof</span>(uart1_recstring));<span class="comment">//清空uart1_recstring字符串</span></span><br><span class="line">            <span class="built_in">memset</span>(sub_string, <span class="number">0</span>, <span class="keyword">sizeof</span>(sub_string));                    <span class="comment">//清空sub_string字符串</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//内部调用函数，注意要勾选OPTIONS中的USE Micro LIB选项</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span>   <span class="comment">//printf重定向  </span></span><br><span class="line">&#123;</span><br><span class="line">    USART_SendData(USART1, (<span class="type">uint8_t</span>) ch);</span><br><span class="line">    <span class="keyword">while</span> (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>usart.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyUSART_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="程序移植更改过程">程序移植更改过程</h2><p>1.main.c中添加头文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HuaweiIOT_at_esp8266.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span> </span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/09/mEWFsMX1RSbgcvZ.png" alt="image-20230609173756860"></p><p>2.main.c中main函数中开启初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MyUSART_Init();</span><br><span class="line">HuaweiIot_init();    <span class="comment">//华为云物联网平台初始化</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/09/WH4IEFrRal9SUZ6.png" alt="image-20230609173841240"></p><p>3.数据上传</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HuaweiIot_DevDate_publish(<span class="string">&quot;ActVel1&quot;</span>,speed++);</span><br><span class="line">delay_ms(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>4.全局变量从HuaweiIOT_at_esp8266.c移植到usart.c（如果直接拷贝上述的usart文件则可以跳过）</p><p><img src="https://s2.loli.net/2023/06/09/LHofGSJDQU6h8vc.png" alt="image-20230609174046666"></p><p>5.中断服务函数HuaweiIOT_at_esp8266.c移植到usart.c（如果直接拷贝上述的usart文件则可以跳过）</p><p><img src="https://s2.loli.net/2023/06/09/YT5yUhxfp9VlBPi.png" alt="image-20230609174151183"></p><p>6.中断服务函数中的接受云端数据的代码分析更改（这部分是需要根据你个人的实际数据格式进行更改的）</p><p><img src="https://s2.loli.net/2023/06/09/oL65ahGUVrxzsEl.png" alt="image-20230609175235317"></p><blockquote><p>这部分最麻烦的就行算那个长度，其实我之前连阿里云的时候用的是使用循环直接查找属性名获取数据值的，但是他提供的驱动里面使用的是这种手动计算长度，然后截取字符串判断后获取数据，我本来想改成自动的，但没改成，就只能用他的了</p></blockquote><h2 id="个人完整工程">个人完整工程</h2><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HuaweiIOT_at_esp8266.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> speed;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">MyUSART_Init();</span><br><span class="line">HuaweiIot_init();    <span class="comment">//华为云物联网平台初始化</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">HuaweiIot_DevDate_publish(<span class="string">&quot;ActVel1&quot;</span>,speed++);</span><br><span class="line">delay_ms(<span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HuaweiIOT_at_esp8266.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HuaweiIOT_at_esp8266.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*外部变量声明区*/</span></span><br><span class="line"><span class="type">uint8_t</span> atok_rec_flag;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* 函 数 名: HuaweiIot_init</span></span><br><span class="line"><span class="comment">* 功能说明: 华为云物联网平台初始化</span></span><br><span class="line"><span class="comment">* 形 参：无</span></span><br><span class="line"><span class="comment">* 返 回 值: 无</span></span><br><span class="line"><span class="comment">**********************************************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> str_temp[<span class="number">256</span>];<span class="comment">//虽然在实际使用时str_temp最大不超100，但是测试时发现char str_temp[128]时程序会卡死</span></span><br><span class="line"><span class="comment">//经过景哥和强哥帮助，将其改为char str_temp[256]时可以正常运行，或者将其定义为全局变量</span></span><br><span class="line"><span class="comment">//初步分析为作用域不同导致分配栈空间不同，具体原因待日后分析。—贾工留坑-2023.3.10.1</span></span><br><span class="line"></span><br><span class="line">delay_ms(<span class="number">1000</span>);<span class="comment">//等待模块上电稳定</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(atok_rec_flag==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            AT_write(<span class="string">&quot;AT&quot;</span>);<span class="comment">//AT测试</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;AT+RST\r\n&quot;</span>);<span class="comment">//重启设备</span></span><br><span class="line">            delay_ms(<span class="number">2000</span>);<span class="comment">//等待设备重启</span></span><br><span class="line">            AT_write(<span class="string">&quot;AT&quot;</span>);<span class="comment">//AT测试</span></span><br><span class="line">            AT_write(<span class="string">&quot;AT+CWMODE=1&quot;</span>);<span class="comment">//设置模块为STA模式</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+CWJAP=\&quot;%s\&quot;,\&quot;%s\&quot;&quot;</span>,WIFI_SSID,WIFI_PWD);<span class="comment">//连接WiFi</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTUSERCFG=0,1,\&quot;NULL\&quot;,\&quot;%s\&quot;,\&quot;%s\&quot;,0,0,\&quot;\&quot;&quot;</span>,HUAWEI_MQTT_USERNAME,HUAWEI_MQTT_PASSWORD);<span class="comment">//设置MQTT的登陆用户名与密码</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTCLIENTID=0,\&quot;%s\&quot;&quot;</span>,HUAWEI_MQTT_ClientID);<span class="comment">//设置MQTT的ClientID</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTCONN=0,\&quot;%s\&quot;,%s,1&quot;</span>,HUAWEI_MQTT_ADDRESS,HUAWEI_MQTT_PORT);<span class="comment">//设置MQTT接入地址与端口号</span></span><br><span class="line">AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTSUB=0,\&quot;$oc/devices/%s/sys/properties/report\&quot;,1&quot;</span>,HUAWEI_MQTT_DeviceID);<span class="comment">//订阅设备属性上报的主题</span></span><br><span class="line">AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTSUB=0,\&quot;$oc/devices/%s/sys/commands/#\&quot;,1&quot;</span>,HUAWEI_MQTT_DeviceID);<span class="comment">//订阅设备命令接收的主题</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line"></span><br><span class="line"><span class="built_in">sprintf</span>(str_temp,<span class="string">&quot;AT+MQTTSUB=0,\&quot;$oc/devices/%s/sys/commands/response/#\&quot;,1&quot;</span>,HUAWEI_MQTT_DeviceID);<span class="comment">//订阅设备命令响应的主题</span></span><br><span class="line">            AT_write(str_temp);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Connected ESP01s Fail!\r\n&quot;</span>);<span class="comment">//连接超时</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AT\r\n&quot;</span>);</span><br><span class="line">delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        &#125;            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* 函 数 名: AT_write</span></span><br><span class="line"><span class="comment">* 功能说明: AT指令发送</span></span><br><span class="line"><span class="comment">* 形 参：无</span></span><br><span class="line"><span class="comment">* 返 回 值: 无</span></span><br><span class="line"><span class="comment">**********************************************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AT_write</span><span class="params">(<span class="type">char</span> atstring[<span class="number">512</span>])</span><span class="comment">//阻塞等待OK</span></span><br><span class="line">&#123;</span><br><span class="line">atok_rec_flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\r\n&quot;</span>,atstring);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(atok_rec_flag==<span class="number">1</span>)<span class="comment">//接收到OK后串口中断会将atok_rec_flag置1</span></span><br><span class="line">&#123;</span><br><span class="line">atok_rec_flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">delay_ms(<span class="number">50</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************************************************************************</span></span><br><span class="line"><span class="comment">* 函 数 名: HuaweiIot_publish</span></span><br><span class="line"><span class="comment">* 功能说明: 华为云设备属性上报</span></span><br><span class="line"><span class="comment">* 形 参：char * att,属性名；uint16_t data：属性值</span></span><br><span class="line"><span class="comment">* 返 回 值: 无</span></span><br><span class="line"><span class="comment">**********************************************************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_DevDate_publish</span><span class="params">(<span class="type">char</span> *att,<span class="type">uint16_t</span> data)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AT+MQTTPUB=0,\&quot;$oc/devices/%s/sys/properties/report\&quot;,\&quot;&#123;\\\&quot;services\\\&quot;:[&#123;\\\&quot;service_id\\\&quot;:\\\&quot;%s\\\&quot;\\,\\\&quot;properties\\\&quot;:&#123;\\\&quot;%s\\\&quot;: %d&#125;&#125;]&#125;\&quot;,0,0\r\n&quot;</span>,HUAWEI_MQTT_DeviceID,HUAWEI_MQTT_ServiceID,att,data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HuaweiIOT_at_esp8266.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*模块名称： esp8266+AT指令+华为云物联网平台</span></span><br><span class="line"><span class="comment">*文件名称： HuaweiIOT_at_esp8266.h</span></span><br><span class="line"><span class="comment">*说明备注：无</span></span><br><span class="line"><span class="comment">*修改记录：无</span></span><br><span class="line"><span class="comment">*版本号     日期          作者     说明</span></span><br><span class="line"><span class="comment">*V1.0       22-8-1      funiot.xyz|公众号“IOT趣制作”  </span></span><br><span class="line"><span class="comment">*Copyright by JIA</span></span><br><span class="line"><span class="comment">*********************************************************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __HUAWEIIOT_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __HUAWEIIOT_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*头文件包含区*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*宏定义区*/</span></span><br><span class="line"><span class="comment">//使用时请在这里补全相关信息</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIFI_SSID<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//WiFi名</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIFI_PWD<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//WiFi密码</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_USERNAME<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//Username</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_PASSWORD<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//Password</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ClientID<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//ClientId</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ADDRESS<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//平台地址</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_PORT<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//端口号</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_DeviceID<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//设备ID</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HUAWEI_MQTT_ServiceID<span class="string">&quot;xxxxxxxx&quot;</span>  <span class="comment">//服务ID</span></span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*外部变量声明区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">/*函数声明区*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">AT_write</span><span class="params">(<span class="type">char</span> atstring[<span class="number">512</span>])</span>;<span class="comment">//阻塞等待OK</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HuaweiIot_DevDate_publish</span><span class="params">(<span class="type">char</span> * att,<span class="type">uint16_t</span> data)</span>;</span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>usart.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;HuaweiIOT_at_esp8266.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> uart1_rec_i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint8_t</span> atok_rec_flag;</span><br><span class="line"><span class="type">char</span> uart1_recdata = <span class="number">0</span>, uart1_recstring[<span class="number">256</span>], sub_string[<span class="number">150</span>], analysis_Str[<span class="number">256</span>];</span><br><span class="line"><span class="keyword">extern</span> <span class="type">uint16_t</span> speed;</span><br><span class="line"><span class="type">uint16_t</span> speed_flag;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyUSART_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);<span class="comment">//1.开启时钟</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;                 <span class="comment">//初始化GIPIO</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    USART_InitTypeDef USART_InitStructure;              <span class="comment">//初始化串口</span></span><br><span class="line">    USART_InitStructure.USART_BaudRate = <span class="number">115200</span>;</span><br><span class="line">    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;</span><br><span class="line">    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;</span><br><span class="line">    USART_InitStructure.USART_Parity = USART_Parity_No;</span><br><span class="line">    USART_InitStructure.USART_StopBits = USART_StopBits_1;</span><br><span class="line">    USART_InitStructure.USART_WordLength = USART_WordLength_8b;</span><br><span class="line">    USART_Init(USART1, &amp;USART_InitStructure);</span><br><span class="line"></span><br><span class="line">    NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;</span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0</span>;</span><br><span class="line">    NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">    USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);</span><br><span class="line">    USART_Cmd(USART1, ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// *********************************************************************************************************</span></span><br><span class="line"><span class="comment">// * 函 数 名: USART1_IRQHandler</span></span><br><span class="line"><span class="comment">// * 功能说明: 串口中断1函数：主要完成esp8266模块的通信接收处理</span></span><br><span class="line"><span class="comment">// * 形 参：无</span></span><br><span class="line"><span class="comment">// * 返 回 值: 无</span></span><br><span class="line"><span class="comment">// *********************************************************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>                    <span class="comment">//串口1中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str_temp[<span class="number">128</span>];</span><br><span class="line">    <span class="type">char</span> request_id[<span class="number">48</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)    <span class="comment">//接收中断</span></span><br><span class="line">    &#123;</span><br><span class="line">        USART_ClearITPendingBit(USART1, USART_IT_RXNE);            <span class="comment">//清除中断标志</span></span><br><span class="line">        uart1_recdata = USART_ReceiveData(USART1);                        <span class="comment">//读取接收到的数据</span></span><br><span class="line">        <span class="keyword">if</span> (uart1_recdata != <span class="string">&#x27;\n&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//防止第一个接收为空格</span></span><br><span class="line">            <span class="keyword">if</span> ((uart1_rec_i == <span class="number">0</span>) &amp;&amp; (uart1_recdata == <span class="string">&#x27; &#x27;</span>)) &#123;</span><br><span class="line">                <span class="comment">//测试发现在接收MQTT服务器下发的命令时，有时接收的数据第一位为空格</span></span><br><span class="line">                <span class="comment">//通过上述判断方式可以解决，触发原因暂时不明，贾工留坑-2022.9.3.1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                uart1_recstring[uart1_rec_i] = uart1_recdata;</span><br><span class="line">                <span class="comment">//printf(&quot;%c&quot;,uart1_recstring[uart1_rec_i]);//调试时开启</span></span><br><span class="line">                uart1_rec_i++;    <span class="comment">//统计接收字符数量</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//printf(&quot;Rec Over,uart1_rec_i=%d，data=%s\r\n&quot;,uart1_rec_i,uart1_recstring);//调试时开启，用于检查接收数据内容</span></span><br><span class="line">            <span class="keyword">if</span> (uart1_rec_i &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="built_in">strncpy</span>(sub_string, uart1_recstring, <span class="number">2</span>);    <span class="comment">//截取前两位</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(sub_string, <span class="string">&quot;OK&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    atok_rec_flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//printf(&quot;Get Ok\r\n&quot;);//调试时开启，用于确定是否接收到&quot;ok&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">strncpy</span>(sub_string, uart1_recstring, <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(sub_string, <span class="string">&quot;ready&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    atok_rec_flag = <span class="number">1</span>;</span><br><span class="line">                    <span class="comment">//printf(&quot;Get ready\r\n&quot;);//调试时开启,用于确定是否接收到“ready”</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">strncpy</span>(sub_string, uart1_recstring, <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(sub_string, <span class="string">&quot;ERROR&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                    atok_rec_flag = <span class="number">0</span>;</span><br><span class="line">                    <span class="comment">//printf(&quot;Get ERROR\r\n&quot;);//调试时开启,用于确定是否接收到“ERROR”</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//我的接收数据长度为201，下面采用JSON字符串硬解析的方式，具体下标请根据自己实际接收的参数处理</span></span><br><span class="line">                <span class="comment">//+MQTTSUBRECV:0,&quot;$oc/devices/61fb2d7fde9933029funiot_esp8266_test01/sys/commands/request_id=4152fb5d-e5ae-4b89-b39d-283ba59cf033&quot;,68,&#123;&quot;paras&quot;:&#123;&quot;led&quot;:1&#125;,&quot;service_id&quot;:&quot;Dev_data&quot;,&quot;command_name&quot;:&quot;Control&quot;&#125;</span></span><br><span class="line">                <span class="keyword">if</span> (uart1_rec_i &gt;= <span class="number">190</span>) &#123;</span><br><span class="line">                    <span class="built_in">strncpy</span>(analysis_Str, uart1_recstring, <span class="number">12</span>);                            <span class="comment">//提取出“+MQTTSUBRECV”</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(analysis_Str, <span class="string">&quot;+MQTTSUBRECV&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="built_in">memset</span>(analysis_Str, <span class="number">0</span>, <span class="keyword">sizeof</span>(analysis_Str));                    <span class="comment">//清空缓存区</span></span><br><span class="line">                        <span class="comment">//printf(&quot;MQTT命令接收头正确\r\n&quot;);</span></span><br><span class="line">                        <span class="built_in">strncpy</span>(request_id, uart1_recstring + <span class="number">84</span>, <span class="number">36</span>);                <span class="comment">//提取出request_id</span></span><br><span class="line">                        <span class="comment">//printf(&quot;request_id=%s\r\n&quot;,request_id);</span></span><br><span class="line">                        <span class="built_in">strncpy</span>(analysis_Str, uart1_recstring + <span class="number">127</span>, <span class="number">5</span>);            <span class="comment">//提取出&quot;paras&quot;</span></span><br><span class="line">                        <span class="comment">//printf(&quot;paras=%s\r\n&quot;,analysis_Str);</span></span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(analysis_Str, <span class="string">&quot;paras&quot;</span>) == <span class="number">0</span>)                                <span class="comment">//有效参数体</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">memset</span>(analysis_Str, <span class="number">0</span>, <span class="keyword">sizeof</span>(analysis_Str));    <span class="comment">//清空缓存区</span></span><br><span class="line">                            <span class="built_in">strncpy</span>(analysis_Str, uart1_recstring + <span class="number">136</span>, <span class="number">7</span>);    <span class="comment">//提取出&quot;led&quot;</span></span><br><span class="line">                            <span class="comment">//printf(&quot;att is %s\r\n&quot;,analysis_Str);</span></span><br><span class="line">                            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(analysis_Str, <span class="string">&quot;ActVel1&quot;</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="comment">//printf(&quot;led set %c\r\n&quot;,uart1_recstring[145]);</span></span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (uart1_recstring[<span class="number">144</span>] == <span class="string">&#x27;:&#x27;</span>) &#123;</span><br><span class="line">speed = (uart1_recstring[<span class="number">145</span>] - <span class="string">&#x27;0&#x27;</span>) * <span class="number">10</span>  + (uart1_recstring[<span class="number">146</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">//                                  printf(&quot;关灯\r\n&quot;);</span></span><br><span class="line"></span><br><span class="line">                                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (uart1_recstring[<span class="number">145</span>] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                                    <span class="built_in">printf</span>(<span class="string">&quot;开灯\r\n&quot;</span>);</span><br><span class="line">                                    <span class="comment">//LED_TurnOn(3);</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="comment">//向云平台完成命令响应</span></span><br><span class="line">                                <span class="built_in">printf</span>(<span class="string">&quot;AT+MQTTPUB=0,\&quot;$oc/devices/%s/sys/commands/response/request_id=%s\&quot;,\&quot;\&quot;,0,0\r\n&quot;</span>,</span><br><span class="line">                                       HUAWEI_MQTT_DeviceID, request_id);</span><br><span class="line"></span><br><span class="line">                                <span class="built_in">memset</span>(analysis_Str, <span class="number">0</span>, <span class="keyword">sizeof</span>(analysis_Str));<span class="comment">//清空缓存区  </span></span><br><span class="line">                                <span class="built_in">memset</span>(str_temp, <span class="number">0</span>, <span class="keyword">sizeof</span>(str_temp));                <span class="comment">//清空缓存区  </span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            uart1_rec_i = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">memset</span>(uart1_recstring, <span class="number">0</span>, <span class="keyword">sizeof</span>(uart1_recstring));<span class="comment">//清空uart1_recstring字符串</span></span><br><span class="line">            <span class="built_in">memset</span>(sub_string, <span class="number">0</span>, <span class="keyword">sizeof</span>(sub_string));                    <span class="comment">//清空sub_string字符串</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//内部调用函数，注意要勾选OPTIONS中的USE Micro LIB选项</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span>   <span class="comment">//printf重定向  </span></span><br><span class="line">&#123;</span><br><span class="line">    USART_SendData(USART1, (<span class="type">uint8_t</span>) ch);</span><br><span class="line">    <span class="keyword">while</span> (USART_GetFlagStatus(USART1, USART_FLAG_TC) == RESET);</span><br><span class="line">    <span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>usart.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __USART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __USART_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MyUSART_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学进化论</title>
      <link href="/post/ea2a6787.html"/>
      <url>/post/ea2a6787.html</url>
      
        <content type="html"><![CDATA[<h1>《大学进化论》</h1><blockquote><p>[!note]  简介</p><p>这是一本指导大学生校园生活的图书。大学生活自由而放松，但也充斥着迷茫和堕落的陷阱。转瞬即逝的大学生活，怎样才能高质量度过？这本收录了超过100万赞同数的知乎回答辑录，或许能帮你提供思路。</p><p>本书汇集了大学校园中48个常见问题，从心理认知、学习规划、考试技巧、自我提升、考研留学、就业指导等六个模块，提供过来人的真实经验与见解。那些只有过来人才了解的艰苦、辛酸与要诀，本书替你纤毫呈现。</p><p>无论是初入大学的大一新生，还是临近毕业的大四学生，你在大学中遇到的种种困惑，都能在这里得到解答。这本真实、全面、高效的大学领跑指南，让你入学不迷茫，毕业不后悔。</p></blockquote><h2 id="Chapter1-认清自己，没人能给你标准答案">Chapter1 认清自己，没人能给你标准答案</h2><ul><li><p>[x] 上大学就一定轻松了吗？</p></li><li><p>[x] 对自己的大学感到失望怎么办？</p></li><li><p>[x] 如何克服没有考上名牌大学的心理落差？</p></li><li><p>[x] 读很冷门的专业是种什么体验？</p></li><li><p>[x] 转变心理，提前规划大学生活</p></li><li><p>[x] 大学教会你的最重要的事是什么？</p></li><li><p>[x] 大学做什么才酷？</p></li><li><p>[x] 大学最好的状态是什么？</p></li><li><p>[x] 大学中最没必要做的是什么？</p></li></ul><h2 id="Chapter2-上了大学，学习似乎不重要了？">Chapter2 上了大学，学习似乎不重要了？</h2><ul><li><p>[x] 努力学习究竟有什么意义？</p></li><li><p>[x] 老师亲自答，为什么偏偏给学生59 分</p></li><li><p>[x] 怎样才能让学习体系化，效率更高？</p></li><li><p>[x] 有哪些免费的学习网站和资源？</p></li><li><p>[x] 要不要学双学位，对找工作真的有帮助吗？</p></li><li><p>[x] 当初为什么选择学双学位？</p></li><li><p>[x] 大学里，要不要花费时间考证？</p></li><li><p>[x] 选择考证后，给人生带来了哪些正面影响？</p></li></ul><h2 id="Chapter3-考试通关！一般人不知道的学习技巧">Chapter3 考试通关！一般人不知道的学习技巧</h2><ul><li><p>[x] 如何在一个月内通过大学英语四、六级？</p></li><li><p>[x] 考试当前，如何更高效地学习？</p></li><li><p>[x] 第一次写学术论文无从下手怎么办？</p></li><li><p>[x] 手把手教你写英文学术论文</p></li><li><p>[x] 如何在短期内写好一篇毕业论文？</p></li><li><p>[x] 不知道怎么整理学术文献？</p></li><li><p>[x] 只需五步，轻松搞定文献综述</p></li></ul><h2 id="Chapter4-脱胎换骨，如何让大学生活不留遗憾？">Chapter4 脱胎换骨，如何让大学生活不留遗憾？</h2><ul><li><p>[x] 要读书，也要磨炼心智</p></li><li><p>[x] 有哪些是读书学不来却很重要的素质？</p></li><li><p>[x] 大学参加学生会有用吗？</p></li><li><p>[x] 大学的课业、社团、兴趣爱好等，该如何平衡？</p></li><li><p>[x] 如何看待大学里的社交？</p></li><li><p>[x] 总觉得和大学室友不亲近，怎么办？</p></li><li><p>[x] 大学恋爱中，如何处理好亲密关系？</p></li><li><p>[x] 如何塑造适合自己的消费观？</p></li></ul><h2 id="Chapter5-国内考研还是出国留学，你选好了吗？">Chapter5 国内考研还是出国留学，你选好了吗？</h2><ul><li><p>[x] 为什么考研，考研对人生的改变大吗？</p></li><li><p>[x] 读书到底为了什么？读研到底值不值？</p></li><li><p>[x] 如何判断自己是否适合做研究？</p></li><li><p>[x] 过来人告诉你，是先工作还是先读研</p></li><li><p>[x] 关于考研，你需要知道的几个重要事实</p></li><li><p>[x] 受用终身的选研校技巧</p></li><li><p>[x] 出国留学的意义是什么？</p></li><li><p>[x] 有没有必要出国留学？</p></li><li><p>[x] 家境一般，出国留学如何让爸妈同意？</p></li></ul><h2 id="Chapter6-要步入社会了，这些干货一个都不能少">Chapter6 要步入社会了，这些干货一个都不能少</h2><ul><li><p>[x] 有哪些阻碍你成长的“学生思维”？</p></li><li><p>[x] 去大公司实习还是去创业公司实习？</p></li><li><p>[x] 实习工作要做好哪些准备？</p></li><li><p>[x] 无工作经验的应届毕业生如何制作简历？</p></li><li><p>[x] 找工作，是选择一个公司还是一个行业？</p></li><li><p>[x] 选择第一份工作时，要考虑哪些因素？</p></li><li><p>[x] 没有资金、人脉和资源的情况下，如何创业？</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 图书 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>9总结</title>
      <link href="/post/d985cdc1.html"/>
      <url>/post/d985cdc1.html</url>
      
        <content type="html"><![CDATA[<p>最近几周，我较为系统的学习了数学建模的基础知识、常用软件和常见模型。</p><p>经过一段时间的学习，我对数学建模有了一个大概的了解</p><p>matlab、lingo、SPSS等软件的使用</p><p>数据的插值与拟合、规划模型、网络模型、微分方程模型、统计模型、综合评价模型、预测模型等</p><p>学习完成内容：</p><p>在最近几周的学习中，学习了数学建模的基础知识，包括常用的软件工具（如MATLAB、LINGO、SPSS等）以及常见的数学模型。了解了数据的插值与拟合、规划模型、网络模型、微分方程模型、统计模型、综合评价模型、预测模型等多个方面的内容，这为建立数学模型和解决实际问题奠定了基础。</p><p>学习效果：</p><p>1.作业都按时提交，但是感觉效果不是很好，主要对这写数学知识很难在短时间内接收，特别是从统计模型开始后面这三个模型，基本上都是特别晕，虽然题能写出来，但是不太理解他为什么要这样做，反正根据解题步骤也是把题给些出来了。对于统计模型之前的内容，都还可以接收，写着还比较轻松。</p><p>2.对MATLAB、LINGO、SPSS这些软件有了一定的了解，能进行一些简单的数据处理</p><p>3.对数学建模有了一定的了解，再写题的话，及时不会写也能扯到点子上</p><p>团队成员分工情况：</p><p>我们组是每个人都学习了，对于这些基础学习没有进行分工</p><p>存在问题：</p><p>之前学习数学知识的遗忘，特别是矩阵的一些知识点和概念；其次是概率论与数理统计里面的知识，比如接受拒绝原假设的条件、还要那几种分布模型，模模糊糊、隐隐约约有个印象，但是真正看到题，那就不会分析了</p><p>由于暑假在家，个人时间安排不合理，就一看难，就像往后拖</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>8综合评价作业</title>
      <link href="/post/981b88ac.html"/>
      <url>/post/981b88ac.html</url>
      
        <content type="html"><![CDATA[<ol><li>某核心企业需要在6个待选的零部件供应商中选择一个合作伙伴，各待选供应商有关数据如表1所列，试从中选择一个最优供应商(理想解法)</li></ol><table><thead><tr><th style="text-align:center">评价指标</th><th style="text-align:center">产品质量</th><th style="text-align:center">产品价格/元</th><th style="text-align:center">地理位置/km</th><th style="text-align:center">售后服务/h</th><th style="text-align:center">技术水平</th><th style="text-align:center">经济效益</th><th style="text-align:center">供应能力/件</th><th style="text-align:center">市场影响度</th><th style="text-align:center">交货情况</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">0.83</td><td style="text-align:center">326</td><td style="text-align:center">21</td><td style="text-align:center">3.2</td><td style="text-align:center">0.2</td><td style="text-align:center">0.15</td><td style="text-align:center">250</td><td style="text-align:center">0.23</td><td style="text-align:center">0.87</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">0.9</td><td style="text-align:center">295</td><td style="text-align:center">38</td><td style="text-align:center">2.4</td><td style="text-align:center">0.25</td><td style="text-align:center">0.2</td><td style="text-align:center">180</td><td style="text-align:center">0.15</td><td style="text-align:center">0.95</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">0.99</td><td style="text-align:center">340</td><td style="text-align:center">25</td><td style="text-align:center">2.2</td><td style="text-align:center">0.12</td><td style="text-align:center">0.14</td><td style="text-align:center">300</td><td style="text-align:center">0.27</td><td style="text-align:center">0.99</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">0.92</td><td style="text-align:center">287</td><td style="text-align:center">19</td><td style="text-align:center">2</td><td style="text-align:center">0.33</td><td style="text-align:center">0.09</td><td style="text-align:center">200</td><td style="text-align:center">0.3</td><td style="text-align:center">0.89</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">0.87</td><td style="text-align:center">310</td><td style="text-align:center">27</td><td style="text-align:center">0.9</td><td style="text-align:center">0.2</td><td style="text-align:center">%第八题A = [2, 4, 5, 8, 10];B = [4, 6, 9, 3, 4];n = length(A);​result = 0;​for i = 1:n    result = result + A(i) * B(n - i + 1);end​disp(result);matlab</td><td style="text-align:center">150</td><td style="text-align:center">0.18</td><td style="text-align:center">0.82</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">0.95</td><td style="text-align:center">303</td><td style="text-align:center">10</td><td style="text-align:center">1.7</td><td style="text-align:center">0.09</td><td style="text-align:center">0.17</td><td style="text-align:center">175</td><td style="text-align:center">0.26</td><td style="text-align:center">0.94</td></tr></tbody></table><blockquote><p>效益型指标：产品质量、技术水平、经济效益、供应能力、市场影响度、交货情况</p><p>成本型指标：产品价格、地理位置、售后服务</p><p>供应商选择顺序：5&gt;6&gt;4&gt;1&gt;3&gt;2（模型改进后的结果）[排序：465312]</p><p>根据理想解法求出的结果看出，供应商5优于其他供应商</p><p>模型评价： TOPSIS法的局限性：默认了所有指标的重要程度是相同的，即权重相同，但在实际问题中，不同的指标往往具有不同的权重大小。</p><p>模型改进：使用信息熵法对指标进行赋权法</p></blockquote><blockquote><ol><li>对数据进行规范化的结果（模一化）</li></ol><p><img src="https://s2.loli.net/2023/07/26/aVdbRyPpfqox194.png" alt="image-20230726213230392"></p><ol start="2"><li>由信息熵法确定权重</li></ol><p><img src="https://s2.loli.net/2023/07/26/nf16MHGzUqeL8Ik.png" alt="image-20230726213157624"></p><ol start="3"><li>得到带权重的矩阵</li></ol><p><img src="https://s2.loli.net/2023/07/26/I9QLpjnH2lrJgeu.png" alt="image-20230726212944822"></p><ol start="4"><li>正理想解和负理想解</li></ol><p><img src="https://s2.loli.net/2023/07/26/bQaPR2rN6VHUMBE.png" alt="image-20230726213015893"></p><ol start="5"><li>到正理想解距离和到负理想解距离</li></ol><p><img src="https://s2.loli.net/2023/07/26/hHQYgl8ztU72q53.png" alt="image-20230726213033013"></p><ol start="6"><li>相对近似度</li></ol><p><img src="https://s2.loli.net/2023/07/26/HxClXjAdwFNRaLy.png" alt="image-20230726213046811"></p><ol start="7"><li>优劣顺序</li></ol><p><img src="https://s2.loli.net/2023/07/26/rOHywLNP8V45XTa.png" alt="image-20230726213102111"></p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">clc</span><br><span class="line">clear</span><br><span class="line"></span><br><span class="line">load matlab.mat</span><br><span class="line">x = M;</span><br><span class="line">[m,n] = <span class="built_in">size</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">%无量纲化（模一化）</span></span><br><span class="line"><span class="comment">%a = x ./ sum(x);</span></span><br><span class="line">a = x ./ <span class="built_in">repmat</span>(sum(x.*x) .^ <span class="number">0.5</span>,m,<span class="number">1</span>);<span class="comment">%模一化</span></span><br><span class="line"><span class="built_in">disp</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">%信息熵</span></span><br><span class="line">p=a./sum(a);</span><br><span class="line">e=-sum(p.*<span class="built_in">log</span>(p))/<span class="built_in">log</span>(n);</span><br><span class="line">g=<span class="number">1</span>-e;</span><br><span class="line">w=g/sum(g); <span class="comment">%计算权重</span></span><br><span class="line">a = a .* w;</span><br><span class="line"><span class="built_in">disp</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">%正理想解</span></span><br><span class="line">C1 = <span class="built_in">max</span>(a);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span>:<span class="number">4</span></span><br><span class="line">    C1(<span class="built_in">i</span>)=<span class="built_in">min</span>(a(:,<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>(C1);</span><br><span class="line"><span class="comment">%负理想解</span></span><br><span class="line">C0 = <span class="built_in">min</span>(a);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span>:<span class="number">4</span></span><br><span class="line">    C0(<span class="built_in">i</span>)=<span class="built_in">max</span>(a(:,<span class="built_in">i</span>));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>(C0);</span><br><span class="line"></span><br><span class="line"><span class="comment">%到正理想解距离</span></span><br><span class="line">S1=vecnorm(a-C1,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">disp</span>(S1&#x27;);</span><br><span class="line"><span class="comment">%到负理想解距离</span></span><br><span class="line">S0=vecnorm(a-C0,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">disp</span>(S0&#x27;);</span><br><span class="line"></span><br><span class="line">f=S0&#x27;./(S1&#x27;+S0&#x27;);</span><br><span class="line"><span class="built_in">disp</span>(f);</span><br><span class="line">b = f ./ sum(f);</span><br><span class="line">[sf,ind]=<span class="built_in">sort</span>(b,<span class="string">&#x27;descend&#x27;</span>);<span class="comment">%求排序结果</span></span><br><span class="line"><span class="built_in">disp</span>(ind);</span><br></pre></td></tr></table></figure><ol start="2"><li>你已经去过几家主要的摩托车商店，基本确定将从三种车型中选购一种，你选择的标准主要有:价格、耗油量大小、舒适程度和外观美观情况。经反复思考比较，构造了它们之间的成对比较判断矩阵。</li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>7</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>5</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>8</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>5</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\begin{bmatrix}1 &amp; 3 &amp; 7 &amp; 8 \\1/3 &amp; 1 &amp; 5 &amp; 5 \\1/7 &amp; 1/5 &amp; 1 &amp; 3 \\1/8 &amp; 1/5 &amp; 1/3 &amp; 1\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.8em;vertical-align:-2.15em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='4.800em' viewBox='0 0 667 4800'><path d='M403 1759 V84 H666 V0 H319 V1759 v1200 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v1200 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/3</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/7</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/5</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-4.65em;"><span class="pstrut" style="height:6.8em;"></span><span style="width:0.667em;height:4.800em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='4.800em' viewBox='0 0 667 4800'><path d='M347 1759 V0 H0 V84 H263 V1759 v1200 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v1200 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>三种车型(记为 a,b,c ) 关于价格、耗油量、舒适程度和外表美观情况的成对比较判断矩阵为</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">(</mo><mtext>价格</mtext><mo fence="true">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\left( 价格\right) \\\begin{bmatrix}1 &amp; 2 &amp; 3 \\1/2 &amp; 1 &amp; 2 \\1/3 &amp; 1/2 &amp; 1\end{bmatrix}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.4em;vertical-align:-2.45em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-6.16em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord cjk_fallback">价格</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.45em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/2</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">(</mo><mtext>耗油量</mtext><mo fence="true">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>5</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>7</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\left( 耗油量\right) \\ \begin{bmatrix}1 &amp; 1/5 &amp; 1/2 \\5 &amp; 1 &amp; 7 \\2 &amp; 1/7 &amp; 1\end{bmatrix}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.4em;vertical-align:-2.45em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-6.16em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord cjk_fallback">耗油量</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.45em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/2</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">(</mo><mtext>舒适程度</mtext><mo fence="true">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>5</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\left( 舒适程度\right) \\ \begin{bmatrix}1 &amp; 3 &amp; 5 \\1/3 &amp; 1 &amp; 4 \\1/5 &amp; 1/4 &amp; 1\end{bmatrix}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.4em;vertical-align:-2.45em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-6.16em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord cjk_fallback">舒适程度</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.45em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/3</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">(</mo><mtext>外表</mtext><mo fence="true">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>5</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>3</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>7</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\left(外表\right) \\ \begin{bmatrix}1 &amp; 1/5 &amp; 3 \\5 &amp; 1 &amp; 7 \\1/3 &amp; 1/7 &amp; 1\end{bmatrix}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.4em;vertical-align:-2.45em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-6.16em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord cjk_fallback">外表</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.45em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/5</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1/7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.667em' height='3.600em' viewBox='0 0 667 3600'><path d='M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>(1) 根据上述矩阵可以看出四项标准在你心目中的比重是不同的，请按由重到轻顺序将它们排出。</p><p>(2) 哪辆车最便宜、哪辆车最省油、哪辆车最舒适、哪辆车最漂亮?</p><p>(3) 用层次分析法确定你对这三种车型的喜欢程度(用百分比表示)。</p><blockquote><p>解：</p><table><thead><tr><th></th><th>价格</th><th>耗油量</th><th>舒适程度</th><th>外观</th></tr></thead><tbody><tr><td>a</td><td>0.5396</td><td>0.1046</td><td>0.6260</td><td>0.1889</td></tr><tr><td>b</td><td>0.2970</td><td>0.7446</td><td>0.2807</td><td>0.7304</td></tr><tr><td>c</td><td>0.1634</td><td>0.1508</td><td>0.0933</td><td>0.0807</td></tr><tr><td>最大特征根</td><td>3.0092</td><td>3.1223</td><td>3.0867</td><td>3.0658</td></tr><tr><td>一致性指标</td><td>0.0046</td><td>0.0612</td><td>0.0433</td><td>0.0329</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/07/26/r2No6k7v8PF9nKd.png" alt="image-20230726210224298"></p><p>(1)</p><p>P~a~= 0.5794 * 0.5396+0.2810 * 0.1046+0.0905 * 0.6260+0.0491 * 0.1889 = 0.4080</p><p>P~b~= 0.5794 * 0.2970+0.2810 * 0.7446+0.0905 * 0.2807+0.0491 * 0.7304 = 0.4426</p><p>P~c~= 0.5794 * 0.1634+0.2810 * 0.1508+0.0905 * 0.0933+0.0491 * 0.0807 = 0.1495</p><p>b&gt;a&gt;c</p><p>(2)</p><p>c车最便宜、a车最省油、a车最舒适、b车最漂亮</p><p>(3)</p><p>P~a~+P~b~+P~c~=1</p><p>喜欢程度：</p><p>a车：40.8%</p><p>b车：44.26%</p><p>c车：14.95%</p></blockquote><blockquote><p>解析：</p></blockquote><p>对于给出的每一个矩阵，都需要经过如下过程：</p><ol><li>a矩阵归一化，得矩阵b</li><li>b矩阵按行求和,得矩阵c</li><li>c归一化,得矩阵d(此时得到的矩阵就是目标层的权值)</li><li>对a矩阵进行赋值（a * d），得矩阵e</li><li>对矩阵e进行归一化，得权向量x</li><li>求矩阵的最大特征根y，sum(e./d)/n;</li><li>求一致性指标z，(y - n) ./ (n-1);</li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[x,y,z]</span>= <span class="title">ccfx</span><span class="params">(a,n)</span></span></span><br><span class="line">    b = a ./ sum(a);<span class="comment">%归一化</span></span><br><span class="line">    c = sum(b,<span class="number">2</span>);<span class="comment">%按行求和</span></span><br><span class="line">    d = c ./ sum(c);</span><br><span class="line">    e = a*d;</span><br><span class="line">    x = e ./ sum(e);</span><br><span class="line">    y = sum(e./d)/n;</span><br><span class="line">    z = (y - n) ./ (n<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span> <span class="number">3</span> <span class="number">7</span> <span class="number">8</span>;<span class="number">1</span>/<span class="number">3</span> <span class="number">1</span> <span class="number">5</span> <span class="number">5</span>;<span class="number">1</span>/<span class="number">7</span> <span class="number">1</span>/<span class="number">5</span> <span class="number">1</span> <span class="number">3</span>;<span class="number">1</span>/<span class="number">8</span> <span class="number">1</span>/<span class="number">5</span> <span class="number">1</span>/<span class="number">3</span> <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">b1 = [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>;<span class="number">1</span>/<span class="number">2</span> <span class="number">1</span> <span class="number">2</span>;<span class="number">1</span>/<span class="number">3</span> <span class="number">1</span>/<span class="number">2</span> <span class="number">1</span>];</span><br><span class="line">b2 = [<span class="number">1</span> <span class="number">1</span>/<span class="number">5</span> <span class="number">1</span>/<span class="number">2</span>;<span class="number">5</span> <span class="number">1</span> <span class="number">7</span>;<span class="number">2</span> <span class="number">1</span>/<span class="number">7</span> <span class="number">1</span>];</span><br><span class="line">b3 = [<span class="number">1</span> <span class="number">3</span> <span class="number">5</span>;<span class="number">1</span>/<span class="number">3</span> <span class="number">1</span> <span class="number">4</span>;<span class="number">1</span>/<span class="number">5</span> <span class="number">1</span>/<span class="number">4</span> <span class="number">1</span>];</span><br><span class="line">b4 = [<span class="number">1</span> <span class="number">1</span>/<span class="number">5</span> <span class="number">3</span>;<span class="number">5</span> <span class="number">1</span> <span class="number">7</span>;<span class="number">1</span>/<span class="number">3</span> <span class="number">1</span>/<span class="number">7</span> <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">[w0,u0,ci0] = ccfx(a,<span class="number">4</span>);</span><br><span class="line">[w1,u1,ci1] = ccfx(b1,<span class="number">3</span>);</span><br><span class="line">[w2,u2,ci2] = ccfx(b2,<span class="number">3</span>);</span><br><span class="line">[w3,u3,ci3] = ccfx(b3,<span class="number">3</span>);</span><br><span class="line">[w4,u4,ci4] = ccfx(b4,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">c1 = [w1,w2,w3,w4];<span class="comment">%权向量</span></span><br><span class="line">c2 = [u1,u2,u3,u4];<span class="comment">%最大特征根</span></span><br><span class="line">c3 = [ci1,ci2,ci3,ci4];<span class="comment">%一致性指标CI</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(w0&#x27;);</span><br><span class="line"><span class="built_in">disp</span>(c1&#x27;);</span><br><span class="line"><span class="built_in">disp</span>(c2);</span><br><span class="line"><span class="built_in">disp</span>(c3);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>7统计模型练习</title>
      <link href="/post/333262a2.html"/>
      <url>/post/333262a2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用SPSS进行分析求解</p></blockquote><h1>第一题</h1><ol><li>下表1.1是中国1994-2016年国内旅游总花费Y、国内生产总值X1、铁路里程X2和公路里程X3的数据,请据此分析如下问题:<br>(1)就建立简单线性回归模型,分别分析中国国内旅游总花费与国内生产总值、铁路里程和公路里程数据的数量关系。<br>(2)对建立的回归模型进行检验,对几个模型估计检验结果进行比较。</li></ol><table><thead><tr><th style="text-align:center">年份</th><th style="text-align:center">国内旅游总花费/议员</th><th style="text-align:center">国内生产总值/亿元</th><th style="text-align:center">铁路里程/万公里</th><th style="text-align:center">公路里程/万公里</th></tr></thead><tbody><tr><td style="text-align:center">1994</td><td style="text-align:center">1023.5</td><td style="text-align:center">48637.5</td><td style="text-align:center">5.9</td><td style="text-align:center">111.78</td></tr><tr><td style="text-align:center">1995</td><td style="text-align:center">1375.7</td><td style="text-align:center">61339.9</td><td style="text-align:center">6.24</td><td style="text-align:center">115.7</td></tr><tr><td style="text-align:center">1996</td><td style="text-align:center">1638.4</td><td style="text-align:center">71813.6</td><td style="text-align:center">6.49</td><td style="text-align:center">118.58</td></tr><tr><td style="text-align:center">1997</td><td style="text-align:center">2112.7</td><td style="text-align:center">79715</td><td style="text-align:center">6.6</td><td style="text-align:center">122.64</td></tr><tr><td style="text-align:center">1998</td><td style="text-align:center">2391.2</td><td style="text-align:center">85195.5</td><td style="text-align:center">6.64</td><td style="text-align:center">127.85</td></tr><tr><td style="text-align:center">1999</td><td style="text-align:center">2831.9</td><td style="text-align:center">90564.4</td><td style="text-align:center">6.74</td><td style="text-align:center">135.17</td></tr><tr><td style="text-align:center">2000</td><td style="text-align:center">3175.5</td><td style="text-align:center">100280.1</td><td style="text-align:center">6.87</td><td style="text-align:center">167.98</td></tr><tr><td style="text-align:center">2001</td><td style="text-align:center">3522.4</td><td style="text-align:center">110863.1</td><td style="text-align:center">7.01</td><td style="text-align:center">169.8</td></tr><tr><td style="text-align:center">2002</td><td style="text-align:center">3878.4</td><td style="text-align:center">121717.4</td><td style="text-align:center">7.19</td><td style="text-align:center">176.52</td></tr><tr><td style="text-align:center">2003</td><td style="text-align:center">3442.3</td><td style="text-align:center">137422</td><td style="text-align:center">7.3</td><td style="text-align:center">180.98</td></tr><tr><td style="text-align:center">2004</td><td style="text-align:center">4710.7</td><td style="text-align:center">161840.2</td><td style="text-align:center">7.44</td><td style="text-align:center">187.07</td></tr><tr><td style="text-align:center">2005</td><td style="text-align:center">5285.9</td><td style="text-align:center">187318.9</td><td style="text-align:center">7.54</td><td style="text-align:center">334.52</td></tr><tr><td style="text-align:center">2006</td><td style="text-align:center">6229.7</td><td style="text-align:center">219438.5</td><td style="text-align:center">7.71</td><td style="text-align:center">345.7</td></tr><tr><td style="text-align:center">2007</td><td style="text-align:center">7770.6</td><td style="text-align:center">270232.3</td><td style="text-align:center">7.8</td><td style="text-align:center">358.37</td></tr><tr><td style="text-align:center">2008</td><td style="text-align:center">8749.3</td><td style="text-align:center">319515.5</td><td style="text-align:center">7.97</td><td style="text-align:center">373.02</td></tr><tr><td style="text-align:center">2009</td><td style="text-align:center">10183.7</td><td style="text-align:center">349081.4</td><td style="text-align:center">8.55</td><td style="text-align:center">386.08</td></tr><tr><td style="text-align:center">2010</td><td style="text-align:center">12579.8</td><td style="text-align:center">413030.3</td><td style="text-align:center">9.12</td><td style="text-align:center">400.82</td></tr><tr><td style="text-align:center">2011</td><td style="text-align:center">19305.4</td><td style="text-align:center">489300.6</td><td style="text-align:center">9.32</td><td style="text-align:center">410.64</td></tr><tr><td style="text-align:center">2012</td><td style="text-align:center">22706.2</td><td style="text-align:center">540367.4</td><td style="text-align:center">9.76</td><td style="text-align:center">423.75</td></tr><tr><td style="text-align:center">2013</td><td style="text-align:center">26276.1</td><td style="text-align:center">595244.4</td><td style="text-align:center">10.31</td><td style="text-align:center">435.62</td></tr><tr><td style="text-align:center">2014</td><td style="text-align:center">30311.9</td><td style="text-align:center">643974</td><td style="text-align:center">11.18</td><td style="text-align:center">446.39</td></tr><tr><td style="text-align:center">2015</td><td style="text-align:center">34195.1</td><td style="text-align:center">689052.1</td><td style="text-align:center">12.1</td><td style="text-align:center">457.73</td></tr><tr><td style="text-align:center">2016</td><td style="text-align:center">39390</td><td style="text-align:center">743585.5</td><td style="text-align:center">12.4</td><td style="text-align:center">469.63</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/07/21/aiwZsE82AjSCnFe.png" alt="image-20230721200241386"></p><p><img src="https://s2.loli.net/2023/07/21/YXfeR6wvCcO4Fdu.png" alt="image-20230721200345432"></p><p><img src="https://s2.loli.net/2023/07/21/XMIl9b1Z2vKQHFG.png" alt="image-20230721200352912"></p><p>国内生产总值</p><p><img src="https://s2.loli.net/2023/07/21/notAP4QXampCeJS.png" alt="image-20230721200605599"></p><p><img src="https://s2.loli.net/2023/07/21/Zg9WHxUyE7r4Cwl.png" alt="image-20230721200451730"></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mover accent="true"><mi>y</mi><mo stretchy="true">^</mo></mover><mn>1</mn></msub><mo>=</mo><mo>−</mo><mn>3228.021</mn><mo>+</mo><mn>0.05</mn><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mn>0.957</mn><mo separator="true">,</mo><mi>t</mi><mo>=</mo><mn>21.68</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\widehat{y}_{1}=-3228.021+0.05x\\R^{2}=0.957,t=21.68\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0241em;vertical-align:-1.2621em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7621em;"><span style="top:-3.9221em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6706em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="svg-align" style="width:calc(100% - 0.1111em);margin-left:0.1111em;top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">3228.021</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0.05</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.3979em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.957</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">21.68</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2621em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>R^2^=0.957,表明所建模型整体上对样本数据拟合程度较好。</p><p>回归系数t的检验,t=21.7&gt;t~0.025~(21)=2.08,对斜率系数的显著性表明,国内生产总值对中国国内旅游总花费存在显著影响</p></blockquote><p>铁路里程</p><p><img src="https://s2.loli.net/2023/07/21/WpvUi13wVrSEJae.png" alt="image-20230721201207504"></p><p><img src="https://s2.loli.net/2023/07/21/RLhXmIF43aunilA.png" alt="image-20230721201222091"></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mover accent="true"><mi>y</mi><mo stretchy="true">^</mo></mover><mn>2</mn></msub><mo>=</mo><mo>−</mo><mn>39438.731</mn><mo>+</mo><mn>6165.253</mn><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mn>0.971</mn><mo separator="true">,</mo><mi>t</mi><mo>=</mo><mn>26.496</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \widehat{y}_{2}=-39438.731+6165.253x \\R^{2}=0.971,t=26.496\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0241em;vertical-align:-1.2621em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7621em;"><span style="top:-3.9221em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6706em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="svg-align" style="width:calc(100% - 0.1111em);margin-left:0.1111em;top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">39438.731</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">6165.253</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.3979em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.971</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">26.496</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2621em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>R^2^=0.971,说明所建模型整体上对样本数据拟合程度较好。</p><p>t=26.496&gt;t~0.025~(21)=2.08,对斜率系数的显著性表明,铁路里程对国内旅游总花费存在显著影响</p></blockquote><p>公路里程</p><p><img src="https://s2.loli.net/2023/07/21/JtwyBSZP3Kv79oa.png" alt="image-20230721201636333"></p><p><img src="https://s2.loli.net/2023/07/21/VvHXy5cKSxgz1ER.png" alt="image-20230721201644013"></p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mover accent="true"><mi>y</mi><mo stretchy="true">^</mo></mover><mn>3</mn></msub><mo>=</mo><mo>−</mo><mn>9106.166</mn><mo>+</mo><mn>71.639</mn><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mn>0.701</mn><mo separator="true">,</mo><mi>t</mi><mo>=</mo><mn>7.04</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}\widehat{y}_{3}=-9106.166+71.639x\\R^{2}=0.701,t=7.04\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0241em;vertical-align:-1.2621em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7621em;"><span style="top:-3.9221em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6706em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span class="svg-align" style="width:calc(100% - 0.1111em);margin-left:0.1111em;top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">9106.166</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">71.639</span><span class="mord mathnormal">x</span></span></span><span style="top:-2.3979em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.701</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">7.04</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2621em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>R^2^=0.701,说明所建模型整体上对样本数据拟合程度较好。</p><p>t=7.04&gt;t~0.025~(21)=2.08,对于斜率系数的显著性表明,公路里程对国内旅游总花费存在显著影响。</p></blockquote><h1>第二题</h1><ol start="2"><li>进入21世纪后,中国的家用汽车增长很快。家用汽车的拥有量收到经济增长、公共服务、市场价格、交通状况、社会环境、政策因素的影响。为了研究一些主要因素与家用汽车有用量的数量关系,选择“百户拥有家用汽车量”、“人均地区生产总值”“城镇人口比重”、“居民消费价格指数”等变量,2016年全国各省区市的有关数据如下表1.2,试分析下述问题:<br>(1)建立百户拥有家用汽车量计量经济模型,估计参数并对模型进行检验,检验结论的依据是什么?<br>(2)分析模型参数估计结果的经济意义,你如何解读模型估计检验的结果?<br>(3)你认为模型需要如何改进?</li></ol><table><thead><tr><th style="text-align:center">地区</th><th style="text-align:center">百户拥有家用汽车量/辆</th><th style="text-align:center">人均地区生产总值/万元</th><th style="text-align:center">城镇人口比重/%</th><th style="text-align:center">居民消费价格指数（上年=100）</th></tr></thead><tbody><tr><td style="text-align:center">北京</td><td style="text-align:center">47.3</td><td style="text-align:center">11.81</td><td style="text-align:center">86.5</td><td style="text-align:center">101.4</td></tr><tr><td style="text-align:center">天津</td><td style="text-align:center">43.1</td><td style="text-align:center">11.45</td><td style="text-align:center">82.93</td><td style="text-align:center">102.1</td></tr><tr><td style="text-align:center">河北</td><td style="text-align:center">35.3</td><td style="text-align:center">4.29</td><td style="text-align:center">53.32</td><td style="text-align:center">101.5</td></tr><tr><td style="text-align:center">山西</td><td style="text-align:center">24.6</td><td style="text-align:center">3.54</td><td style="text-align:center">56.21</td><td style="text-align:center">101.1</td></tr><tr><td style="text-align:center">内蒙古</td><td style="text-align:center">34.1</td><td style="text-align:center">7.19</td><td style="text-align:center">61.19</td><td style="text-align:center">101.2</td></tr><tr><td style="text-align:center">辽宁</td><td style="text-align:center">24.2</td><td style="text-align:center">5.08</td><td style="text-align:center">67.37</td><td style="text-align:center">101.6</td></tr><tr><td style="text-align:center">吉林</td><td style="text-align:center">21.4</td><td style="text-align:center">5.41</td><td style="text-align:center">55.97</td><td style="text-align:center">101.6</td></tr><tr><td style="text-align:center">黑龙江</td><td style="text-align:center">14.2</td><td style="text-align:center">4.05</td><td style="text-align:center">59.2</td><td style="text-align:center">101.5</td></tr><tr><td style="text-align:center">上海</td><td style="text-align:center">29.3</td><td style="text-align:center">11.64</td><td style="text-align:center">87.9</td><td style="text-align:center">103.2</td></tr><tr><td style="text-align:center">江苏</td><td style="text-align:center">37.9</td><td style="text-align:center">9.67</td><td style="text-align:center">67.72</td><td style="text-align:center">102.3</td></tr><tr><td style="text-align:center">浙江</td><td style="text-align:center">45.2</td><td style="text-align:center">8.45</td><td style="text-align:center">67</td><td style="text-align:center">101.9</td></tr><tr><td style="text-align:center">安徽</td><td style="text-align:center">18.7</td><td style="text-align:center">3.94</td><td style="text-align:center">51.99</td><td style="text-align:center">101.8</td></tr><tr><td style="text-align:center">福建</td><td style="text-align:center">26.5</td><td style="text-align:center">7.44</td><td style="text-align:center">63.6</td><td style="text-align:center">101.7</td></tr><tr><td style="text-align:center">江西</td><td style="text-align:center">21.5</td><td style="text-align:center">4.03</td><td style="text-align:center">53.1</td><td style="text-align:center">102</td></tr><tr><td style="text-align:center">山东</td><td style="text-align:center">44.1</td><td style="text-align:center">6.84</td><td style="text-align:center">59.02</td><td style="text-align:center">102.1</td></tr><tr><td style="text-align:center">河南</td><td style="text-align:center">23.7</td><td style="text-align:center">4.25</td><td style="text-align:center">48.5</td><td style="text-align:center">101.9</td></tr><tr><td style="text-align:center">湖北</td><td style="text-align:center">17.6</td><td style="text-align:center">5.55</td><td style="text-align:center">58.1</td><td style="text-align:center">102.2</td></tr><tr><td style="text-align:center">湖南</td><td style="text-align:center">21.4</td><td style="text-align:center">4.62</td><td style="text-align:center">52.75</td><td style="text-align:center">101.9</td></tr><tr><td style="text-align:center">广东</td><td style="text-align:center">29.4</td><td style="text-align:center">7.35</td><td style="text-align:center">69.2</td><td style="text-align:center">102.3</td></tr><tr><td style="text-align:center">广西</td><td style="text-align:center">22.2</td><td style="text-align:center">3.79</td><td style="text-align:center">48.08</td><td style="text-align:center">101.6</td></tr><tr><td style="text-align:center">海南</td><td style="text-align:center">18.1</td><td style="text-align:center">4.42</td><td style="text-align:center">56.78</td><td style="text-align:center">102.8</td></tr><tr><td style="text-align:center">重庆</td><td style="text-align:center">19.6</td><td style="text-align:center">5.82</td><td style="text-align:center">62.6</td><td style="text-align:center">101.8</td></tr><tr><td style="text-align:center">四川</td><td style="text-align:center">20.4</td><td style="text-align:center">3.99</td><td style="text-align:center">49.21</td><td style="text-align:center">101.9</td></tr><tr><td style="text-align:center">贵州</td><td style="text-align:center">21.2</td><td style="text-align:center">3.31</td><td style="text-align:center">44.15</td><td style="text-align:center">101.4</td></tr><tr><td style="text-align:center">云南</td><td style="text-align:center">28.7</td><td style="text-align:center">3.1</td><td style="text-align:center">45.03</td><td style="text-align:center">101.5</td></tr><tr><td style="text-align:center">西藏</td><td style="text-align:center">23.3</td><td style="text-align:center">3.48</td><td style="text-align:center">29.56</td><td style="text-align:center">102.5</td></tr><tr><td style="text-align:center">陕西</td><td style="text-align:center">19.9</td><td style="text-align:center">5.09</td><td style="text-align:center">55.34</td><td style="text-align:center">101.3</td></tr><tr><td style="text-align:center">甘肃</td><td style="text-align:center">18</td><td style="text-align:center">2.76</td><td style="text-align:center">44.69</td><td style="text-align:center">101.3</td></tr><tr><td style="text-align:center">青海</td><td style="text-align:center">30.5</td><td style="text-align:center">4.34</td><td style="text-align:center">51.63</td><td style="text-align:center">101.8</td></tr><tr><td style="text-align:center">宁夏</td><td style="text-align:center">30.1</td><td style="text-align:center">4.69</td><td style="text-align:center">56.29</td><td style="text-align:center">101.5</td></tr><tr><td style="text-align:center">新疆</td><td style="text-align:center">25.2</td><td style="text-align:center">4.02</td><td style="text-align:center">48.35</td><td style="text-align:center">101.4</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/07/22/WtgsSXDN591jB8o.png" alt="image-20230722141940623"></p><p><img src="https://s2.loli.net/2023/07/22/st6l9HpZoFuOJdU.png" alt="image-20230722141945032"></p><p><img src="https://s2.loli.net/2023/07/22/vbNOts1USc2jJWG.png" alt="image-20230722141952356"></p><blockquote><p>(1)模型建立：y=612.785+4.812x~1~-0.445x~2~-5.768x~3~</p><p>模型检验：</p><ol><li>R^2^=0.62,修正后的R^2^=0.578，接近于1，说明样本拟合度较好</li><li>F检验：F=14.7&gt;F~0.05~(3,27)=2.97，拒绝原假设，说明“人均地区生产总值”、“城镇人口比重”、“居民消费价格指数”对“百户拥有家用汽车量”有显著影响</li><li>T检验：t~0.025~(27)=2.052，在模型系数中，t的值分别为2.435、4.696、-2.194、-2.337，四个的绝对值均大于2.052。同时，四个变量的显著性值P均小于0.05。因此可以判断“人均地区生产总值”、“城镇人口比重”、“居民消费价格指数”对“百户拥有家用汽车量”有显著影响</li></ol><p>检验依据：</p><ol><li>可决系数越大，说明拟合程度越好。</li><li>F 的值与临界值比较，若大于临界值，则否定原假设，回归方程是显著的; 若小于临界值，则接受原假设，回归方程不显著。</li><li>t 的值与临界值比较，若大于临界值，则否定原假设，系数都是显著地:若小于临界值，则接受原假设，系数不显著。</li><li>显著水平与p值比较，若大于p值，则可在显著性水平下拒绝原假设，系数显著:若小于p值,则接受原假设，系数不显著。</li></ol><p>(2)模型估计结果说明，在假定其他变量不变的情况下，人均地区生产总值每增长1万元，百户拥有家用汽车量增加4.812辆；城镇人口比重每增长1%，百户拥有家用汽车量减少0.445辆；居民消费价格指数增长1个百分点，百户拥有家用汽车量减少5.768辆。</p><p>(3)模型改进</p><p>y=28.35+4.683x~1~-0.399x~2~-2.55*10^-44^e^x3^</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>y</mi><mo>=</mo><mn>28.35</mn><mo>+</mo><mn>4.683</mn><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><mn>0.399</mn><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mn>2.55</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mrow><mo>−</mo><mn>44</mn></mrow></msup><msup><mi>e</mi><msub><mi>x</mi><mn>3</mn></msub></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}y=28.35+4.683x_{1}-0.399x_{2}-2.55\times 10^{-44}e^{x_{3}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5241em;vertical-align:-0.5121em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0121em;"><span style="top:-3.1479em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">28.35</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4.683</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">0.399</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2.55</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">44</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5121em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><img src="https://s2.loli.net/2023/07/22/msIbLJz4o91cKBq.png" alt="image-20230722144803986"></p><p><img src="https://s2.loli.net/2023/07/22/rBPbNYW4tE6ohAV.png" alt="image-20230722144808929"></p><p><img src="https://s2.loli.net/2023/07/22/349gftTwoMlxui2.png" alt="image-20230722144812710"></p><p>模型改进后R^2^=0.636,修正后的R^2^=0.596，样本拟合度更高</p></blockquote><h1>第三题</h1><ol start="3"><li>5个水稻品种的产量比较实验,随机区组设计,4次重复,获得每个小区产量资料如下表1.3,试分析这5个水稻品种间产量水平有无明显差异。</li></ol><table><thead><tr><th style="text-align:center">品种</th><th style="text-align:center">区组（重复）</th><th style="text-align:center"></th><th style="text-align:center"></th><th style="text-align:center"></th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">1</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">61</td><td style="text-align:center">57</td><td style="text-align:center">55</td><td style="text-align:center">56</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">53</td><td style="text-align:center">52</td><td style="text-align:center">50</td><td style="text-align:center">51</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">52</td><td style="text-align:center">58</td><td style="text-align:center">55</td><td style="text-align:center">57</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">58</td><td style="text-align:center">56</td><td style="text-align:center">53</td><td style="text-align:center">53</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">53</td><td style="text-align:center">51</td><td style="text-align:center">54</td><td style="text-align:center">55</td></tr></tbody></table><blockquote><p>对原始数据集进行调整</p><table><thead><tr><th style="text-align:center">X</th><th style="text-align:center">Y1</th></tr></thead><tbody><tr><td style="text-align:center">61</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">57</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">55</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">56</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">53</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">52</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">50</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">51</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">58</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">56</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">53</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">53</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">53</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">51</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">54</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">55</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">52</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">58</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">55</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">57</td><td style="text-align:center">3</td></tr></tbody></table></blockquote><p><img src="https://s2.loli.net/2023/07/21/HhBm7cpRi6EQZOd.png" alt="image-20230721222522907"></p><p><img src="https://s2.loli.net/2023/07/21/G62ErtOQR85ZMok.png" alt="image-20230721222547147"></p><p><img src="https://s2.loli.net/2023/07/21/s5nolpJDPvSwzNc.png" alt="image-20230721222552328"></p><p><img src="https://s2.loli.net/2023/07/21/Ia8rwkxyO1YNqoZ.png" alt="image-20230721222556542"></p><p><img src="https://s2.loli.net/2023/07/21/ezLryWuK96jY8tw.png" alt="image-20230721222602165"></p><p><img src="https://s2.loli.net/2023/07/21/Aw8zdncTJeu6Vr4.png" alt="image-20230721222605279"></p><blockquote><p>在方差齐性检验表中，显著性均大于0.05，因此满足方差齐性这一前提条件。</p><p>在ANOVA表中，F对应的显著性0.022小于0.05，因此拒绝原假设，认为五组数据中，至少有一组数据与其它几组数据之间存在显著性差异的。</p><p>在多重比较表中，分析LSD下的比较结果得出结论：</p><p>品种1的产量显著高于品种2、5；品种2的产量显著低于品种1、3、4</p><p>品种1和品种3、4无显著差异；品种2和品种5无显著差异；品种5和品种2、3、4无显著差异</p></blockquote><h1>第四题</h1><ol start="4"><li>某位老师正在探讨新的历史教学方法,包括使用录音录像和计算机。他想知道这些新技木对于普通学生和较有天赋的学生的影响是否一样。12 名普通学生和 12 名较有天赋学生被随机分到三个组,在学期未所有学生都进行同样的期末考试,结果见下表1.4。试进行一次两因素方差分析,为你的结果生成一个方差分析表,并分析报告你的结果。</li></ol><table><thead><tr><th style="text-align:center">分类</th><th style="text-align:center">传统方法</th><th style="text-align:center">录音录像</th><th style="text-align:center">计算机</th></tr></thead><tbody><tr><td style="text-align:center">普通学生</td><td style="text-align:center">72</td><td style="text-align:center">69</td><td style="text-align:center">63</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">83</td><td style="text-align:center">66</td><td style="text-align:center">72</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">96</td><td style="text-align:center">78</td><td style="text-align:center">78</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">79</td><td style="text-align:center">64</td><td style="text-align:center">59</td></tr><tr><td style="text-align:center">较有天赋学生</td><td style="text-align:center">83</td><td style="text-align:center">96</td><td style="text-align:center">89</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">95</td><td style="text-align:center">87</td><td style="text-align:center">93</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">89</td><td style="text-align:center">93</td><td style="text-align:center">86</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">98</td><td style="text-align:center">86</td><td style="text-align:center">95</td></tr></tbody></table><blockquote><p>原始数据集调整</p><table><thead><tr><th style="text-align:center">X</th><th style="text-align:center">Y1</th><th style="text-align:center">Y2</th></tr></thead><tbody><tr><td style="text-align:center">72</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">69</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">63</td><td style="text-align:center">1</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">83</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">66</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">72</td><td style="text-align:center">1</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">96</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">78</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">78</td><td style="text-align:center">1</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">79</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">64</td><td style="text-align:center">1</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">59</td><td style="text-align:center">1</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">83</td><td style="text-align:center">2</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">96</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">89</td><td style="text-align:center">2</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">95</td><td style="text-align:center">2</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">87</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">93</td><td style="text-align:center">2</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">89</td><td style="text-align:center">2</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">93</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">86</td><td style="text-align:center">2</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">98</td><td style="text-align:center">2</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">86</td><td style="text-align:center">2</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">95</td><td style="text-align:center">2</td><td style="text-align:center">3</td></tr></tbody></table></blockquote><p><img src="https://s2.loli.net/2023/07/22/Xc8xkMgpzI37d2e.png" alt="image-20230722161228148"></p><p><img src="https://s2.loli.net/2023/07/21/hqXm3dCSyHnto6s.png" alt="image-20230721224059966"></p><p><img src="https://s2.loli.net/2023/07/21/hHEasunNUiwKPzT.png" alt="image-20230721224106231"></p><blockquote><p>通过误差方差的莱文等同性检验表可知，显著性值均大于0.05，所以满足方差齐性的条件</p><p>分析主体间效应检验表读出如下结论：</p><ol><li>Y1的检测统计量，F=37.423,P&lt;0.001&lt;0.05,说明学生是否有天赋对学生成绩有显著影响</li><li>Y2的监测统计量，F=2.838,P=0.085&gt;0.05,说明教学方式的更换对学生成绩无显著影响</li><li>Y1*Y2的监测统计量，F=2.384,P=0.121&gt;0.05,说明学生是否有天赋和教学方式可能无交互作用</li></ol><p>在上述分析的基础上结合描述统计表得出结论：</p><p>较有天赋的学生成绩显著高于普通学生的成绩，虽然不能得出教学方式对学生成绩是否有显著影响，但是在现有数据的分析中，表现出传统教学方式的学生成绩优于新教学方式。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SPSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>6微分方程模型练习</title>
      <link href="/post/f71beda0.html"/>
      <url>/post/f71beda0.html</url>
      
        <content type="html"><![CDATA[<ol><li>用Matlab求解微分方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>−</mo><mn>2</mn><mi>y</mi><mo>+</mo><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mrow><mo fence="true">(</mo><mn>0</mn><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y&#x27;=-2y+2x^{2}+2x,y\left( 0\right) =1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y1 = dsolve(<span class="string">&#x27;Dy=-2*y+2*x.^2+2*x&#x27;</span>)</span><br><span class="line">y2 = dsolve(<span class="string">&#x27;Dy=-2*y+2*x.^2+2*x&#x27;</span>,<span class="string">&#x27;y(0)=1&#x27;</span>,<span class="string">&#x27;x&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/17/2PlNTu84DO7mCqc.png" alt="image-20230717150216016"></p><ol start="2"><li>用Matlab分别求解微分方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>−</mo><mn>2</mn><mi>y</mi><mo>+</mo><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mrow><mo fence="true">(</mo><mn>0</mn><mo fence="true">)</mo></mrow><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y&#x27;=-2y+2x^{2}+2x,y\left( 0\right) =1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，0≤x≤0.5的符号解和数值解;并在同一个图形界面上画出数值解和符号解的曲线。</li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 使用 ode45 求解微分方程</span></span><br><span class="line">[x, y] = ode45(@f3, [<span class="number">0</span>, <span class="number">0.5</span>], <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">yFunc = matlabFunction(y2);<span class="comment">%将符号解转换为函数句柄</span></span><br><span class="line">x_values = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">0.5</span>, <span class="number">7</span>);</span><br><span class="line">y_values = yFunc(x_values);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制结果</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;--r&#x27;</span>)</span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"><span class="built_in">plot</span>(x_values,y_values,<span class="string">&#x27;-k&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;数值解&#x27;</span>,<span class="string">&#x27;符号解&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/17/5CFXDLxzidAB4sh.png" alt="image-20230717223523597"></p><ol start="3"><li>请运用 Matlab呈现Lorenz 模型系统的三维演化轨迹，并判断取值基本接近的两个不同初始条件对系统轨线演化的影响，由此分析该模型对初值的敏感性。</li></ol><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% Lorenz 系统参数</span></span><br><span class="line">sigma = <span class="number">10</span>;</span><br><span class="line">rho = <span class="number">28</span>;</span><br><span class="line"><span class="built_in">beta</span> = <span class="number">8</span>/<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 定义 Lorenz 系统的微分方程</span></span><br><span class="line">dxdt = @(t, x) [sigma * (x(<span class="number">2</span>) - x(<span class="number">1</span>));</span><br><span class="line">                x(<span class="number">1</span>) * (rho - x(<span class="number">3</span>)) - x(<span class="number">2</span>);</span><br><span class="line">                x(<span class="number">1</span>) * x(<span class="number">2</span>) - <span class="built_in">beta</span> * x(<span class="number">3</span>)];</span><br><span class="line"></span><br><span class="line"><span class="comment">% 模拟 Lorenz 系统演化</span></span><br><span class="line">[t1, y1] = ode45(dxdt, [<span class="number">0</span>, <span class="number">100</span>], [<span class="number">1</span>; <span class="number">0</span>; <span class="number">0</span>]);</span><br><span class="line">[t2, y2] = ode45(dxdt, [<span class="number">0</span>, <span class="number">100</span>], [<span class="number">1.001</span>; <span class="number">0</span>; <span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制三维演化轨迹</span></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot3</span>(y1(:, <span class="number">1</span>), y1(:, <span class="number">2</span>), y1(:, <span class="number">3</span>), <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">1.5</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot3</span>(y2(:, <span class="number">1</span>), y2(:, <span class="number">2</span>), y2(:, <span class="number">3</span>), <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">1.5</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">zlabel(<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;Lorenz 系统三维演化轨迹&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;初始条件1&#x27;</span>, <span class="string">&#x27;初始条件2&#x27;</span>);</span><br><span class="line"><span class="comment">%view(-35, 15);  % 设置视角</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(t1,y1(:,<span class="number">1</span>),t2,y2(:,<span class="number">1</span>))</span><br><span class="line">title(<span class="string">&#x27;X(1)&#x27;</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="built_in">plot</span>(t1,y1(:,<span class="number">2</span>),t2,y2(:,<span class="number">2</span>))</span><br><span class="line">title(<span class="string">&#x27;X(2)&#x27;</span>);</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">plot</span>(t1,y1(:,<span class="number">3</span>),t2,y2(:,<span class="number">3</span>))</span><br><span class="line">title(<span class="string">&#x27;X(3)&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/17/Juy3hczK52DrxAj.png" alt="untitled"></p><blockquote><p>初始条件微小变化会导致系统轨迹快速分离</p></blockquote><p>4.一个慢跑者在平面上按如下规律跑步：X=10+20cost，Y=20+15sint.突然有一只狗攻击他，这只狗从原点出发，以恒定速率w跑向慢跑者，狗运动方向始终指向慢跑者。分别求出w=20，w=5时狗的运动轨迹。</p><p>提示：</p><p><img src="https://s2.loli.net/2023/07/17/89N7BjufHPptIMT.png" alt="image-20230717151109041"></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">clf;</span><br><span class="line">[t1,y1] = ode45(<span class="string">&#x27;f4&#x27;</span>,[<span class="number">0</span>,<span class="number">10</span>],[<span class="number">0</span>;<span class="number">0</span>]);</span><br><span class="line">T = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">2</span>*<span class="built_in">pi</span>;</span><br><span class="line">X = <span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(T);</span><br><span class="line">Y = <span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(T);</span><br><span class="line"><span class="built_in">plot</span>(X,Y,<span class="string">&#x27;b*&#x27;</span>,y1(:,<span class="number">1</span>),y1(:,<span class="number">2</span>),<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">title(<span class="string">&#x27;w=20狗的运动轨迹&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;跑道&#x27;</span>, <span class="string">&#x27;狗的运动轨迹&#x27;</span>);</span><br><span class="line">[t2,y2] = ode45(<span class="string">&#x27;f5&#x27;</span>,[<span class="number">0</span>,<span class="number">100</span>],[<span class="number">0</span>;<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">plot</span>(X,Y,<span class="string">&#x27;b*&#x27;</span>,y2(:,<span class="number">1</span>),y2(:,<span class="number">2</span>),<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">title(<span class="string">&#x27;w=5狗的运动轨迹&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;跑道&#x27;</span>, <span class="string">&#x27;狗的运动轨迹&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dy</span> = <span class="title">f4</span><span class="params">(t,y)</span></span></span><br><span class="line">dy = <span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">dy(<span class="number">1</span>) = <span class="number">20</span> * (<span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(t) - y(<span class="number">1</span>)) / <span class="built_in">sqrt</span>((<span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(t) - y(<span class="number">1</span>))^<span class="number">2</span> + (<span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(t) - y(<span class="number">2</span>))^<span class="number">2</span>);</span><br><span class="line">dy(<span class="number">2</span>) = <span class="number">20</span> * (<span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(t) - y(<span class="number">2</span>)) / <span class="built_in">sqrt</span>((<span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(t) - y(<span class="number">1</span>))^<span class="number">2</span> + (<span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(t) - y(<span class="number">2</span>))^<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dy</span> = <span class="title">f5</span><span class="params">(t,y)</span></span></span><br><span class="line">dy = <span class="built_in">zeros</span>(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">dy(<span class="number">1</span>) = <span class="number">5</span> * (<span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(t) - y(<span class="number">1</span>)) / <span class="built_in">sqrt</span>((<span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(t) - y(<span class="number">1</span>))^<span class="number">2</span> + (<span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(t) - y(<span class="number">2</span>))^<span class="number">2</span>);</span><br><span class="line">dy(<span class="number">2</span>) = <span class="number">5</span> * (<span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(t) - y(<span class="number">2</span>)) / <span class="built_in">sqrt</span>((<span class="number">10</span> + <span class="number">20</span> * <span class="built_in">cos</span>(t) - y(<span class="number">1</span>))^<span class="number">2</span> + (<span class="number">20</span> + <span class="number">15</span> * <span class="built_in">sin</span>(t) - y(<span class="number">2</span>))^<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/17/ZUkPLrWHT5zfFRt.png" alt="image-20230717150829283"></p><p><img src="https://s2.loli.net/2023/07/17/76GpOjCUk3ElHMg.png" alt="image-20230717150815030"></p><blockquote><p>w = 20 时狗可以追上人，当w = 5时，狗不能追上人</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5网络模型练习</title>
      <link href="/post/36fc393d.html"/>
      <url>/post/36fc393d.html</url>
      
        <content type="html"><![CDATA[<ol><li>有 20 吨货物需要沿一条路径从城市1经过城市 2、3、4 运送到城市 5，可以选择3 种不同的运输方式:铁路、公路和航空匀速.在3个位于路途中间的城市里可以更改运输方式但是在相邻的两个城市之间只能采取一种运输方式，表 1给出了在每一对城市之间运输1吨货物的成本,表2 给出了在更换运输方式时每吨货物需要的额外支出,此支出与地点无关应该选择怎样的运输方案可以使得总成本最小?(提示:转化为最短路问题求解)</li></ol><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1-2</th><th style="text-align:center">2-3</th><th style="text-align:center">3-4</th><th style="text-align:center">4-5</th></tr></thead><tbody><tr><td style="text-align:center">铁路</td><td style="text-align:center">30</td><td style="text-align:center">25</td><td style="text-align:center">40</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">公路</td><td style="text-align:center">25</td><td style="text-align:center">40</td><td style="text-align:center">45</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">航空</td><td style="text-align:center">40</td><td style="text-align:center">20</td><td style="text-align:center">50</td><td style="text-align:center">45</td></tr></tbody></table><table><thead><tr><th style="text-align:center">从…装换为…</th><th style="text-align:center">铁路</th><th style="text-align:center">公路</th><th style="text-align:center">航空</th></tr></thead><tbody><tr><td style="text-align:center">铁路</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center">公路</td><td style="text-align:center">8</td><td style="text-align:center">0</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">航空</td><td style="text-align:center">15</td><td style="text-align:center">10</td><td style="text-align:center">0</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">zeros</span>(<span class="number">14</span>);</span><br><span class="line">a(<span class="number">1</span>,<span class="number">2</span>)=<span class="number">600</span>;a(<span class="number">1</span>,<span class="number">3</span>)=<span class="number">500</span>;a(<span class="number">1</span>,<span class="number">4</span>)=<span class="number">800</span>;</span><br><span class="line"></span><br><span class="line">a(<span class="number">2</span>,<span class="number">5</span>)=<span class="number">500</span>;a(<span class="number">2</span>,<span class="number">6</span>)=<span class="number">900</span>;a(<span class="number">2</span>,<span class="number">7</span>)=<span class="number">640</span>;</span><br><span class="line">a(<span class="number">3</span>,<span class="number">5</span>)=<span class="number">660</span>;a(<span class="number">3</span>,<span class="number">6</span>)=<span class="number">800</span>;a(<span class="number">3</span>,<span class="number">7</span>)=<span class="number">600</span>;</span><br><span class="line">a(<span class="number">4</span>,<span class="number">5</span>)=<span class="number">800</span>;a(<span class="number">4</span>,<span class="number">6</span>)=<span class="number">1000</span>;a(<span class="number">4</span>,<span class="number">7</span>)=<span class="number">400</span>;</span><br><span class="line"></span><br><span class="line">a(<span class="number">5</span>,<span class="number">8</span>)=<span class="number">800</span>;a(<span class="number">5</span>,<span class="number">9</span>)=<span class="number">1000</span>;a(<span class="number">5</span>,<span class="number">10</span>)=<span class="number">1240</span>;</span><br><span class="line">a(<span class="number">6</span>,<span class="number">8</span>)=<span class="number">960</span>;a(<span class="number">6</span>,<span class="number">9</span>)=<span class="number">900</span>;a(<span class="number">6</span>,<span class="number">10</span>)=<span class="number">1200</span>;</span><br><span class="line">a(<span class="number">7</span>,<span class="number">8</span>)=<span class="number">1100</span>;a(<span class="number">7</span>,<span class="number">9</span>)=<span class="number">1100</span>;a(<span class="number">7</span>,<span class="number">10</span>)=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">a(<span class="number">8</span>,<span class="number">11</span>)=<span class="number">1200</span>;a(<span class="number">8</span>,<span class="number">12</span>)=<span class="number">1300</span>;a(<span class="number">8</span>,<span class="number">13</span>)=<span class="number">1440</span>;</span><br><span class="line">a(<span class="number">9</span>,<span class="number">11</span>)=<span class="number">1100</span>;a(<span class="number">9</span>,<span class="number">12</span>)=<span class="number">1000</span>;a(<span class="number">9</span>,<span class="number">13</span>)=<span class="number">1200</span>;</span><br><span class="line">a(<span class="number">10</span>,<span class="number">11</span>)=<span class="number">1200</span>;a(<span class="number">10</span>,<span class="number">12</span>)=<span class="number">1100</span>;a(<span class="number">10</span>,<span class="number">13</span>)=<span class="number">900</span>;</span><br><span class="line"></span><br><span class="line">a(<span class="number">11</span>,<span class="number">14</span>)=<span class="number">1</span>;a(<span class="number">12</span>,<span class="number">14</span>)=<span class="number">1</span>;a(<span class="number">13</span>,<span class="number">14</span>)=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">G = digraph(a);</span><br><span class="line"><span class="built_in">plot</span>(G)</span><br><span class="line">[path1,d] = shortestpath(G,<span class="number">1</span>,<span class="number">14</span>);</span><br><span class="line">highlight(<span class="built_in">plot</span>(G),path1,<span class="string">&#x27;EdgeColor&#x27;</span>,<span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">path1</span><br><span class="line">d<span class="number">-1</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/19/SvAmswlZpRuJhPe.png" alt="image-20230719140725775"></p><p><img src="https://s2.loli.net/2023/07/19/3LWkitTRH87Vqj2.png" alt="image-20230719140756706"></p><ol start="3"><li>某市政工程公司在未来5~8 月份内需完成4 项工程:A 修建一条地下通道、B 修建一座人行天桥、C新建一条道路及 D 道路维修.工期和所需劳动力见表 1.该公司共有劳动力 120人，任一项工程在一个月内的劳动力投入不能超过 80 人，问公司如何分配劳动力完成所有工程，是否能按期完成?</li></ol><table><thead><tr><th style="text-align:center">工程</th><th style="text-align:center">工期</th><th style="text-align:center">需要劳动力（人月）</th></tr></thead><tbody><tr><td style="text-align:center">A 修建一条地下通道</td><td style="text-align:center">5~7月</td><td style="text-align:center">100</td></tr><tr><td style="text-align:center">B 修建一座人行天桥</td><td style="text-align:center">6~7月</td><td style="text-align:center">80</td></tr><tr><td style="text-align:center">C 新建一条道路</td><td style="text-align:center">5~8月</td><td style="text-align:center">200</td></tr><tr><td style="text-align:center">D道路维修</td><td style="text-align:center">8月</td><td style="text-align:center">80</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/07/19/lU1CLTVOHYpu4MD.png" alt="image-20230719140808335"></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">b = <span class="built_in">zeros</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">b(<span class="number">1</span>,<span class="number">2</span>)=<span class="number">120</span>;b(<span class="number">1</span>,<span class="number">3</span>)=<span class="number">120</span>;b(<span class="number">1</span>,<span class="number">4</span>)=<span class="number">120</span>;b(<span class="number">1</span>,<span class="number">5</span>)=<span class="number">120</span>;</span><br><span class="line"></span><br><span class="line">b(<span class="number">2</span>,<span class="number">6</span>)=<span class="number">80</span>;b(<span class="number">2</span>,<span class="number">8</span>)=<span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">b(<span class="number">3</span>,<span class="number">6</span>)=<span class="number">80</span>;b(<span class="number">3</span>,<span class="number">7</span>)=<span class="number">80</span>;b(<span class="number">3</span>,<span class="number">8</span>)=<span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">b(<span class="number">4</span>,<span class="number">6</span>)=<span class="number">80</span>;b(<span class="number">4</span>,<span class="number">7</span>)=<span class="number">80</span>;b(<span class="number">4</span>,<span class="number">8</span>)=<span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">b(<span class="number">5</span>,<span class="number">8</span>)=<span class="number">80</span>;b(<span class="number">5</span>,<span class="number">9</span>)=<span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">b(<span class="number">6</span>,<span class="number">10</span>)=<span class="number">100</span>;b(<span class="number">7</span>,<span class="number">10</span>)=<span class="number">80</span>;b(<span class="number">8</span>,<span class="number">10</span>)=<span class="number">200</span>;b(<span class="number">9</span>,<span class="number">10</span>)=<span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">S = digraph(b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">plot</span>(S,<span class="string">&#x27;EdgeLabel&#x27;</span>,S.Edges.Weight);</span><br><span class="line">[mf,GF]= maxflow(S,<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">GF.Edges</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/19/cxXvFYhiDtTdeOm.png" alt="image-20230719141126572"></p><p><img src="https://s2.loli.net/2023/07/19/UjhaQR5ox4fJIgv.png" alt="image-20230719141529324"></p><p><img src="https://s2.loli.net/2023/07/19/o9qd7MluTHYzCQ4.png" alt="image-20230719141529324"></p><p><img src="https://s2.loli.net/2023/07/19/W8pqjtdZBMIwAN5.png" alt="image-20230719141512594"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4模型规划练习</title>
      <link href="/post/afb136cd.html"/>
      <url>/post/afb136cd.html</url>
      
        <content type="html"><![CDATA[<ol><li>(0-1 规划)某公司董事会正在考虑几个大型的投资项目，每个项目只能投资一次，且各个项目所需的投资金额与能够产生的预期收益是不同的，具体见表 1 所示.已知公司现有的投资额是 1亿美金，其中投资项目 1和项目 2 是斥的，项目 3 和项目4 也是斥的此外如果不选择项目1或者项目 2，就不能选择项目 3、项目 4.投资项目 5、项目6 和项目7没有附加约束。董事会应该如何投资，使得预期收益最大?</li></ol><table><thead><tr><th style="text-align:center">投资项目</th><th style="text-align:center">预计收益/百万美元</th><th style="text-align:center">所需资金/百万美金</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">17</td><td style="text-align:center">43</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">10</td><td style="text-align:center">28</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">15</td><td style="text-align:center">34</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">19</td><td style="text-align:center">48</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">7</td><td style="text-align:center">17</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">13</td><td style="text-align:center">32</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">9</td><td style="text-align:center">23</td></tr></tbody></table><blockquote><p>定义：Xi为是否投资项目，投资项目则x=1,不投资则x=0</p><p>模型：max = 17x1+10x2+15x3+19x4+7x5+13x6+9x7;</p><p>约束：资金约束：43x1+28x2+34x3+48x4+17x5+32x6+23x7&lt;=100;</p><p>互斥约束：x1+x2&lt;1;x3+x4&lt;1;x3+x4&lt;=x1+x2;</p><p>最优解：x1=x3=x7=1，其他为0</p><p>最大收益：41百万美金</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MODEL:</span><br><span class="line"><span class="built_in">max</span> = <span class="number">17</span>*x1+<span class="number">10</span>*x2+<span class="number">15</span>*x3+<span class="number">19</span>*x4+<span class="number">7</span>*x5+<span class="number">13</span>*x6+<span class="number">9</span>*x7;</span><br><span class="line">x1+x2&lt;<span class="number">1</span>;</span><br><span class="line">x3+x4&lt;<span class="number">1</span>;</span><br><span class="line">x3+x4&lt;=x1+x2;</span><br><span class="line"><span class="number">43</span>*x1+<span class="number">28</span>*x2+<span class="number">34</span>*x3+<span class="number">48</span>*x4+<span class="number">17</span>*x5+<span class="number">32</span>*x6+<span class="number">23</span>*x7&lt;=<span class="number">100</span>;</span><br><span class="line">@bin(x1);@bin(x2);@bin(x3);@bin(x4);@bin(x5);@bin(x6);@bin(x7);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/17/FDwt4AK2THCoNcS.png" alt="image-20230714201143474"></p><ol start="2"><li>(运输问题)设三个化肥厂供应四个地区的农用化肥，假设等量化肥在这些地区的使用效果相同,各个化肥厂的产量,需求地的需求量及各个化肥厂到需求低的单位运价见下表所示,现要求所有的化肥都要运送到四个地区，试求最佳调拨方案.</li></ol><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">B1</th><th style="text-align:center">B2</th><th style="text-align:center">B3</th><th style="text-align:center">B4</th><th style="text-align:center">产量</th></tr></thead><tbody><tr><td style="text-align:center">A1</td><td style="text-align:center">16</td><td style="text-align:center">13</td><td style="text-align:center">22</td><td style="text-align:center">17</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">A2</td><td style="text-align:center">14</td><td style="text-align:center">13</td><td style="text-align:center">19</td><td style="text-align:center">15</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">A3</td><td style="text-align:center">19</td><td style="text-align:center">20</td><td style="text-align:center">23</td><td style="text-align:center">—</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">最低需求</td><td style="text-align:center">30</td><td style="text-align:center">70</td><td style="text-align:center">0</td><td style="text-align:center">10</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">最高需求</td><td style="text-align:center">50</td><td style="text-align:center">70</td><td style="text-align:center">30</td><td style="text-align:center">不限</td><td style="text-align:center"></td></tr></tbody></table><p>分析：</p><p>地区B4的最高需求是：当其他地区最低需求被满足时，供给给产B4的数量。</p><p>地区B4的最高需求=50+60+50-30-70=60</p><p>总产量=50+60+50=160</p><p>最低需求=30+70+10=110</p><p>最高需求=50+70+30+（160-30-70）=210</p><p>最大需求210比供应160多50,因此需要虚拟一个供应点A4，其供应量为50，使得供求平衡</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">B1</th><th style="text-align:center">B1~1~</th><th style="text-align:center">B2</th><th style="text-align:center">B3</th><th style="text-align:center">B4</th><th style="text-align:center">B4~1~</th><th style="text-align:center">产量</th></tr></thead><tbody><tr><td style="text-align:center">A1</td><td style="text-align:center">16</td><td style="text-align:center">16</td><td style="text-align:center">13</td><td style="text-align:center">22</td><td style="text-align:center">17</td><td style="text-align:center">17</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">A2</td><td style="text-align:center">14</td><td style="text-align:center">14</td><td style="text-align:center">13</td><td style="text-align:center">19</td><td style="text-align:center">15</td><td style="text-align:center">15</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">A3</td><td style="text-align:center">19</td><td style="text-align:center">19</td><td style="text-align:center">20</td><td style="text-align:center">23</td><td style="text-align:center">M</td><td style="text-align:center">M</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">A4</td><td style="text-align:center">M</td><td style="text-align:center">0</td><td style="text-align:center">M</td><td style="text-align:center">0</td><td style="text-align:center">M</td><td style="text-align:center">0</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">需求</td><td style="text-align:center">30</td><td style="text-align:center">20</td><td style="text-align:center">70</td><td style="text-align:center">30</td><td style="text-align:center">10</td><td style="text-align:center">50</td><td style="text-align:center"></td></tr></tbody></table><p>（M为任意大数，不会影响求最优解）</p><p>模型建立：</p><p>假设：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 表示从化肥厂 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 运送到地区 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的化肥数量。</li></ul><p>目标是最小化总运输成本 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>，即所有运输量与单位运价的乘积的总和。</p><p>模型的约束条件如下：</p><ul><li>每个化肥厂的产量不能超过其最大产量。</li><li>每个地区的需求量必须得到满足。</li></ul><p>最小化目标函数：</p><p>​                                   <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>4</mn></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mn>6</mn></msubsup><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z=\sum ^{4}_{i=1}\sum ^{6}_{j=1}c_{ij}x_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3898em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></p><p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">c_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 为化肥厂 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 运送到地区 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的单位运价。</p><p>约束条件：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>4</mn></msubsup><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≤</mo><mi>F</mi><mrow><mo fence="true">(</mo><mi>i</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\sum ^{4}_{i=1}x_{ij}\leq F\left( i\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2537em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">i</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span>;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mn>6</mn></msubsup><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≥</mo><mi>M</mi><mrow><mo fence="true">(</mo><mi>j</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\sum ^{6}_{j=1}x_{ij}\geq M\left( j\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3898em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">MODEL:</span><br><span class="line">sets:</span><br><span class="line">area/1..6/:M;</span><br><span class="line">factory/1..4/:F;</span><br><span class="line">link(factory,area):X,C;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">M = 30,20,70,30,10,50;</span><br><span class="line">F = 50,60,50,50;</span><br><span class="line">C = 16,16,13,22,17,17</span><br><span class="line">14,14,13,19,15,15</span><br><span class="line">19,19,20,23,1000,1000</span><br><span class="line">1000,0,1000,0,1000,0;</span><br><span class="line">enddata</span><br><span class="line">min = @sum(link(i,j):X(i,j) * C(i,j));</span><br><span class="line">@for(factory(i):@sum(area(j):X(i,j)) &lt;= F(i));</span><br><span class="line">@for(area(j):@sum(factory(i):X(i,j)) &gt;= M(j));</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>运算结果：</p><p><img src="https://s2.loli.net/2023/07/17/OcwD1eh6PNvzYHK.png" alt="image-20230714223323904"></p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">B1</th><th style="text-align:center">B1~1~</th><th style="text-align:center">B2</th><th style="text-align:center">B3</th><th style="text-align:center">B4</th><th style="text-align:center">B4~1~</th><th style="text-align:center">产量</th></tr></thead><tbody><tr><td style="text-align:center">A1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">50</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">A2</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">20</td><td style="text-align:center">0</td><td style="text-align:center">10</td><td style="text-align:center">30</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">A3</td><td style="text-align:center">30</td><td style="text-align:center">20</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">A4</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">30</td><td style="text-align:center">0</td><td style="text-align:center">20</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">需求</td><td style="text-align:center">30</td><td style="text-align:center">20</td><td style="text-align:center">70</td><td style="text-align:center">30</td><td style="text-align:center">10</td><td style="text-align:center">50</td><td style="text-align:center"></td></tr></tbody></table><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">B1</th><th style="text-align:center">B2</th><th style="text-align:center">B3</th><th style="text-align:center">B4</th><th style="text-align:center">产量</th></tr></thead><tbody><tr><td style="text-align:center">A1</td><td style="text-align:center">0</td><td style="text-align:center">50*13</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">A2</td><td style="text-align:center">0</td><td style="text-align:center">20*13</td><td style="text-align:center">0</td><td style="text-align:center">40*15</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">A3</td><td style="text-align:center">50*19</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">50</td></tr><tr><td style="text-align:center">最低需求</td><td style="text-align:center">30</td><td style="text-align:center">70</td><td style="text-align:center">0</td><td style="text-align:center">10</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">最高需求</td><td style="text-align:center">50</td><td style="text-align:center">70</td><td style="text-align:center">30</td><td style="text-align:center">不限</td><td style="text-align:center"></td></tr></tbody></table><p>总费用：50×13+20×13+40×15+50×19=2460</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LINGO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2LINGO基本操作</title>
      <link href="/post/4ec4f9c0.html"/>
      <url>/post/4ec4f9c0.html</url>
      
        <content type="html"><![CDATA[<ol><li>某公司新购置了某种设备 6 台，欲分配给下属的4 个企业，已知各企业获得这种设备后年创利润如表 1.1 所示，单位为千万元。问应如何分配这些设备能使年创总利润最大，最大利润是多少?</li></ol><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">甲</th><th style="text-align:center">乙</th><th style="text-align:center">丙</th><th style="text-align:center">丁</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">4</td><td style="text-align:center">2</td><td style="text-align:center">3</td><td style="text-align:center">4</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">6</td><td style="text-align:center">4</td><td style="text-align:center">5</td><td style="text-align:center">5</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">7</td><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">7</td><td style="text-align:center">8</td><td style="text-align:center">8</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">7</td><td style="text-align:center">9</td><td style="text-align:center">8</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">7</td><td style="text-align:center">10</td><td style="text-align:center">8</td><td style="text-align:center">6</td></tr></tbody></table><blockquote><p>甲公司2， 乙公5、6， 丙公司3、4，丁公司1，最大为44千万元</p><p><img src="https://s2.loli.net/2023/07/28/wNgY4O5CyTsURec.png" alt="image-20230711125500097"></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">model:</span><br><span class="line">sets:</span><br><span class="line">goods/1..6/;</span><br><span class="line">company/1..4/;</span><br><span class="line">link(goods,company):c,x;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">c= 4 2 3 4</span><br><span class="line">   6 4 5 5</span><br><span class="line">   7 6 7 6</span><br><span class="line">   7 8 8 6</span><br><span class="line">   7 9 8 6</span><br><span class="line">   7 10 8 6;</span><br><span class="line">enddata</span><br><span class="line"></span><br><span class="line">Max=@sum(link:c*x);</span><br><span class="line">@for(goods(i):@sum(company(j):x(i,j))=1);</span><br><span class="line">@for(company(j):@sum(goods(i):x(i,j))&lt;2);</span><br><span class="line">@for(link:@bin(x));</span><br><span class="line">end</span><br></pre></td></tr></table></figure><ol start="2"><li>发动机最优生产计划模型求解。某工厂向用户提供发动机，按合同规定，其交货数量和日期是:第一季末交 40 台第二季末交 60 台，第三季末交 80 台。工厂的最大生产能力为每季 100 台，每季的生产费用是 50x + 0.2x^2^(元)，此处 x为该季生产发动机的台数。若工厂生产得多，多余的发动机可移到下一季度向用户交货，此时工厂就需支付存储费，每台发动机每季的存储费为 4 元。问该厂每季应生产多少台发动机，才能既满足交货合同，又使工厂所花费的费用最少(假定第一季度无存货)?</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MODEL:</span><br><span class="line">min  = 50*x1+0.2*x1*x1+(x1-40)*4+50*x2+0.2*x2*x2+(x1-40+x2-60)*4+50*x3+0.2*x3*x3;</span><br><span class="line">x1 - 40 + x2 - 60 + x3 = 80;</span><br><span class="line">x1 - 40 + x2 &gt;= 60;</span><br><span class="line">x1 &gt;= 40;</span><br><span class="line">x1 &lt;= 100;</span><br><span class="line">x2 &lt;= 100;</span><br><span class="line">x1 &lt;= 100;</span><br><span class="line">@gin(x1);@gin(x2);@gin(x3);</span><br><span class="line">end</span><br></pre></td></tr></table></figure><blockquote><p>第一季度生产50台，第二季度生产60台，第三季度生产70台，总费用最小为11280元</p><p><img src="https://s2.loli.net/2023/07/15/qKgzVPxmdvWa9GF.png" alt="image-20230711173538683"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LINGO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1MATLAB基础编程</title>
      <link href="/post/7c04206b.html"/>
      <url>/post/7c04206b.html</url>
      
        <content type="html"><![CDATA[<ol><li>回忆你所学过的数学函数并给出x=3.56 时以下函数的值</li></ol><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>n</mi><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msup><mi>x</mi><mi>a</mi></msup><mrow><mo fence="true">(</mo><mi>a</mi><mo>=</mo><mn>3</mn><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>sin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>cos</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mi>tan</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mn>2</mn><mi>tan</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mi>x</mi><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}sign\left( x\right) ,x^{a}\left( a=3\right) ,\sin \left( x\right) ,\cos \left( x\right) ,\tan \left( x^{2}\right) ,2\tan \left( x\right) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5241em;vertical-align:-0.5121em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0121em;"><span style="top:-3.1479em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5121em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>a</mi><mi>x</mi></msup><mrow><mo fence="true">(</mo><mi>a</mi><mo>=</mo><mn>3</mn><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msup><mi>e</mi><mi>x</mi></msup><mo separator="true">,</mo><mi>ln</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mrow><mo fence="true">∣</mo><mi>x</mi><mo>−</mo><msup><mi>x</mi><mi>x</mi></msup><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>3</mn></msub><mi>x</mi><mo separator="true">,</mo><mrow><mo fence="true">[</mo><mi>x</mi><mo fence="true">]</mo></mrow><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>arcsin</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>3</mn><mi>π</mi><mo fence="true">)</mo></mrow><mo separator="true">,</mo><mroot><mi>x</mi><mn>6</mn></mroot><mo separator="true">,</mo><msqrt><mrow><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mfrac><mrow><mn>4</mn><mi>x</mi></mrow><mrow><mi>ln</mi><mo>⁡</mo><mfrac><mrow><mi>x</mi><mo>+</mo><msup><mi>e</mi><mi>x</mi></msup><mi>sin</mi><mo>⁡</mo><mi>x</mi></mrow><mrow><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac></mrow></mfrac></mrow></msqrt></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}a^{x}\left( a=3\right) ,e^{x},\ln \left( \left| x-x^{x}\right| \right) ,\log _{3}x,\left[ x\right] ,\\\arcsin \left( x^{2}-3\pi \right) ,\sqrt[6] {x},\sqrt{2x^{2}+\dfrac{4x}{\ln \dfrac{x+e^{x}\sin x}{2x^{2}}}}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.2701em;vertical-align:-2.385em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.885em;"><span style="top:-5.5942em;"><span class="pstrut" style="height:3.5492em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord mathnormal">x</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span></span></span><span style="top:-3.385em;"><span class="pstrut" style="height:3.5492em;"></span><span class="mord"><span class="mop">arcsin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7172em;"><span style="top:-2.895em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8492em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">x</span></span></span><span style="top:-2.8092em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1908em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5492em;"><span class="svg-align" style="top:-5.43em;"><span class="pstrut" style="height:5.43em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.3449em;"></span><span class="mord"><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3449em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.5749em;"><span class="pstrut" style="height:3.3449em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.0219em;"><span class="pstrut" style="height:3.3449em;"></span><span class="mord"><span class="mord">4</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9209em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.5092em;"><span class="pstrut" style="height:5.43em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.5101em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='3.5101em' viewBox='0 0 400000 3510' preserveAspectRatio='xMinYMin slice'><path d='M702 80H40000040H742v3376l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9209em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.385em;"><span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p><img src="https://s2.loli.net/2023/07/15/3vgX9BpFMD4UK6P.png" alt="image-20230710220209878"></p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第一题</span></span><br><span class="line">x = <span class="number">3.56</span>;</span><br><span class="line">a = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">x1 = <span class="built_in">sign</span>(x)</span><br><span class="line">x2 = x ^ a</span><br><span class="line">x3 = <span class="built_in">sin</span>(x)</span><br><span class="line">x4 = <span class="built_in">cos</span>(x)</span><br><span class="line">x5 = <span class="built_in">tan</span>(x ^ <span class="number">2</span>)</span><br><span class="line">x6 = <span class="number">2</span> * <span class="built_in">tan</span>(x)</span><br><span class="line">x7 = a ^ x</span><br><span class="line">x8 = <span class="built_in">exp</span>(x)</span><br><span class="line">x9 = <span class="built_in">log</span>(<span class="built_in">abs</span>(x - x^x))</span><br><span class="line">x10 = <span class="built_in">log10</span>(x) / <span class="built_in">log</span>(<span class="number">3</span>) <span class="comment">%log3X=log10(X)/log10(3)</span></span><br><span class="line">x11 = <span class="built_in">ceil</span>(x) <span class="comment">%向上取整</span></span><br><span class="line">x12 = <span class="built_in">asin</span>(x ^ <span class="number">2</span> - <span class="number">3</span> * <span class="built_in">pi</span>)</span><br><span class="line">x13 = <span class="built_in">nthroot</span>(x, <span class="number">6</span>)</span><br><span class="line">x14 = <span class="built_in">sqrt</span>(<span class="number">2</span> * x ^ <span class="number">2</span> + (<span class="number">4</span> * x / (<span class="built_in">log</span>((x + x8 * x3) / (<span class="number">2</span> * x ^ <span class="number">2</span>)))) )</span><br></pre></td></tr></table></figure><ol start="2"><li>利用帮助了解向量函数max，min, sum，mean，sort，length，矩阵函数rand，size的功能和用法。操作步骤:先用函数rand生成一个5X10的矩阵再使用上面提到的函数，看看产生什么样的输出。并用自己的话说明上述函数的功能和用法。</li></ol><blockquote><p><img src="https://s2.loli.net/2023/07/15/41qKLjoyA6DsXZ3.png" alt="image-20230710220510930"></p><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202307151057489.png" alt="image-20230710220530741"></p><ol><li><p>向量函数：</p><p>max：返回向量中的最大值。 用法：max(vector)</p><p>min：返回向量中的最小值。 用法：min(vector)</p><p>sum：返回向量中所有元素的总和。 用法：sum(vector)</p><p>mean：返回向量中所有元素的平均值。 用法：mean(vector)</p><p>sort：对向量进行排序，按升序排列。 用法：sort(vector)</p><p>length：返回向量中的元素个数。 用法：length(vector)</p></li><li><p>矩阵函数：</p><p>rand：生成指定大小的随机矩阵，元素值在0和1之间。 用法：rand(rows, columns)</p></li></ol><p>size：返回矩阵的大小（行数和列数）。 用法：size(matrix)</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第二题</span></span><br><span class="line"><span class="comment">%2.利用帮助了解向量函数max，min, sum，mean，sort，length，</span></span><br><span class="line"><span class="comment">% 矩阵函数rand，size的功能和用法。</span></span><br><span class="line"><span class="comment">% 操作步骤:先用函数rand生成一个5X10的矩阵再使用上面提到的函数，看看产生什么样的输出。</span></span><br><span class="line"><span class="comment">% 并用自己的话说明上述函数的功能和用法。</span></span><br><span class="line"></span><br><span class="line">matrix = <span class="built_in">rand</span>(<span class="number">5</span>, <span class="number">10</span>)</span><br><span class="line">max_value = <span class="built_in">max</span>(matrix)</span><br><span class="line">min_value = <span class="built_in">min</span>(matrix)</span><br><span class="line">sum_value = sum(matrix)</span><br><span class="line">mean_value = <span class="built_in">mean</span>(matrix)</span><br><span class="line">sorted_matrix = <span class="built_in">sort</span>(matrix)</span><br><span class="line">matrix_length = <span class="built_in">length</span>(matrix)</span><br></pre></td></tr></table></figure><p>3.设有分块矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>E</mi><mrow><mn>3</mn><mo>×</mo><mn>3</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mrow><mn>3</mn><mo>×</mo><mn>2</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mn>2</mn><mo>×</mo><mn>3</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>S</mi><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A=\begin{bmatrix}E_{3\times 3} &amp; R_{3\times 2} \\O_{2\times 3} &amp; S_{2\times 2}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mbin mtight">×</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>其中E,R,O,S分别为单位阵、随机阵、零阵和对角阵，试编写一个命令M文件，技术验证<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mn>2</mn></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>E</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>R</mi><mo>+</mo><mi>R</mi><mi>S</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>S</mi><mn>2</mn></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A^{2}=\begin{bmatrix}E &amp; R+RS \\0 &amp; S^{2}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RS</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>。提示：先产生一个矩阵A,计算出A;另一方面，计算矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>E</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>R</mi><mo>+</mo><mi>R</mi><mi>S</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>S</mi><mn>2</mn></msup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}E &amp; R+RS \\0 &amp; S^{2}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RS</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>，比较结果是否一致。</p><blockquote><p><img src="https://s2.loli.net/2023/07/15/F85Gm13JvYgdkKI.png" alt="image-20230710221510620"></p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第三题</span></span><br><span class="line"><span class="comment">% 生成分块矩阵 A</span></span><br><span class="line">E = <span class="built_in">eye</span>(<span class="number">3</span>);                 <span class="comment">% 3x3单位阵</span></span><br><span class="line">R = <span class="built_in">rand</span>(<span class="number">3</span>, <span class="number">2</span>);             <span class="comment">% 3x2随机阵</span></span><br><span class="line">O = <span class="built_in">zeros</span>(<span class="number">2</span>, <span class="number">3</span>);            <span class="comment">% 2x3零阵</span></span><br><span class="line">S = <span class="built_in">diag</span>([<span class="number">1</span>, <span class="number">2</span>]);           <span class="comment">% 2x2对角阵</span></span><br><span class="line"></span><br><span class="line">A = [E, R; O, S];           <span class="comment">% 构建矩阵 A</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 计算 A^2</span></span><br><span class="line">A_squared = [E, R + R*S; O, S^<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出结果比较</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isequal</span>(A^<span class="number">2</span>, A_squared)</span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;A^2 = [E, R+RS; 0, S^2]&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">disp</span>(<span class="string">&#x27;A^2 ≠ [E, R+RS; 0, S^2]&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在同一个坐标下作出$y_{1}=x,y_{2}=x-\dfrac{x^{3}}{3!},y_{3}=x-\dfrac{x^{3}}{3!}+\dfrac{x^{5}}{5!},y_{4}=\sin \left( x\right) $，这四条曲线的图形,说明 Taylor 公式说明了什么问题。</li></ol><blockquote><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202307151057490.png" alt="image-20230711102252940"></p><p>Taylor 公式是一种用无穷级数展开来逼近函数的方法。它可以将一个函数在某个点附近的局部行为用多项式来表示。y1 = x 就是函数 f(x) = x 在 x = 0 处的一阶泰勒展开式，y2 和 y3 分别是 f(x) = sin(x) 在 x = 0 处的三阶和五阶泰勒展开式。通过绘制这些曲线，我们可以观察到泰勒展开式在给定点附近的逼近效果。Taylor 公式说明了在某个点附近，一个光滑函数可以用一个多项式逼近。通过增加多项式的阶数，我们可以获得更高精度的逼近结果。</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第四题</span></span><br><span class="line">x = <span class="built_in">linspace</span>(<span class="number">-2</span>*<span class="built_in">pi</span>, <span class="number">2</span>*<span class="built_in">pi</span>, <span class="number">100</span>);  <span class="comment">% 生成 x 的取值范围</span></span><br><span class="line">y1 = x;</span><br><span class="line">y2 = x - x.^<span class="number">3</span>/<span class="built_in">factorial</span>(<span class="number">3</span>);</span><br><span class="line">y3 = x - x.^<span class="number">3</span>/<span class="built_in">factorial</span>(<span class="number">3</span>) + x.^<span class="number">5</span>/<span class="built_in">factorial</span>(<span class="number">5</span>);</span><br><span class="line">y4 = <span class="built_in">sin</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制曲线</span></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(x, y1, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y2, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y3, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x, y4, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;y_1 = x&#x27;</span>, <span class="string">&#x27;y_2 = x - x^3/3!&#x27;</span>, <span class="string">&#x27;y_3 = x - x^3/3! + x^5/5!&#x27;</span>, <span class="string">&#x27;y_4 = sin(x)&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;Taylor公式的示例&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> off;</span><br></pre></td></tr></table></figure><ol start="5"><li>用 subplot 分别在不同的坐标系下作出四条曲线</li></ol><p>(1)概率曲线<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">y=e^{-x^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9869em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>(2)四叶玫瑰线$\rho =\sin 2\theta $</p><p>(3)叶形线<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mn>3</mn><mi>t</mi></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>t</mi><mn>3</mn></msup></mrow></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mn>3</mn><msup><mi>t</mi><mn>2</mn></msup></mrow><mrow><mn>1</mn><mo>+</mo><msup><mi>t</mi><mn>3</mn></msup></mrow></mfrac></mstyle></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}x=\dfrac{3t}{1+t^{3}}\\y=\dfrac{3t^{2}}{1+t^{3}}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.3512em;vertical-align:-1.9256em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4256em;"><span style="top:-4.5953em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.3348em;"><span class="pstrut" style="height:3.4911em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9256em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>(4)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mi>ln</mi><mo>⁡</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mn>1</mn><mo>+</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></msqrt></mrow><mi>y</mi></mfrac></mstyle><mo>−</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msup><mi>y</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">x=\ln \dfrac{1+\sqrt{1-y^{2}}}{y}-\sqrt{1-y^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5153em;vertical-align:-0.8804em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6348em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.9178em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2822em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2822em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.9178em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2822em;"><span></span></span></span></span></span></span></span></span></p><blockquote><p><img src="https://s2.loli.net/2023/07/15/yTWZCFbAncPwBjY.png" alt="untitled"></p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第五题   用 subplot 分别在不同的坐标系下作出四条曲线</span></span><br><span class="line">t = <span class="built_in">linspace</span>(<span class="number">-10</span>, <span class="number">10</span>, <span class="number">100</span>);  <span class="comment">% 生成 t 的取值范围</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 概率曲线 y = e^(-x^2)</span></span><br><span class="line">x1 = t;</span><br><span class="line">y1 = <span class="built_in">exp</span>(-x1.^<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 四叶玫瑰线 rho = sin(2*theta)</span></span><br><span class="line">theta = t;</span><br><span class="line">rho = <span class="built_in">sin</span>(<span class="number">2</span>*theta);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 叶形线</span></span><br><span class="line">x3 = <span class="number">3</span>*t./(<span class="number">1</span> + t.^<span class="number">3</span>);</span><br><span class="line">y3 = <span class="number">3</span>*t.^<span class="number">2.</span>/(<span class="number">1</span> + t.^<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% x = ln((1 + sqrt(1-y^2))/y) - sqrt(1-y^2)</span></span><br><span class="line">y4 = <span class="built_in">linspace</span>(<span class="number">-1</span>, <span class="number">1</span>, <span class="number">1000</span>);</span><br><span class="line">x4 = <span class="built_in">log</span>((<span class="number">1</span> + <span class="built_in">sqrt</span>(<span class="number">1</span> - y4.^<span class="number">2</span>))./y4) - <span class="built_in">sqrt</span>(<span class="number">1</span> - y4.^<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制四个子图</span></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 子图1：概率曲线</span></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x1, y1, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;概率曲线&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 子图2：四叶玫瑰线</span></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">polarplot(theta, rho, <span class="string">&#x27;r&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">title(<span class="string">&#x27;四叶玫瑰线)&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 子图3：叶形线</span></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="built_in">plot</span>(x3, y3, <span class="string">&#x27;g&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;叶形线&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 子图4：曲线 x = ln((1 + sqrt(1-y^2))/y) - sqrt(1-y^2)</span></span><br><span class="line">subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line"><span class="built_in">plot</span>(x4, y4, <span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;LineWidth&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;曲线&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 调整子图之间的间距</span></span><br><span class="line">sgtitle(<span class="string">&#x27;不同坐标系下的曲线&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="6"><li>做出曲面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>=</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mi>cos</mi><mo>⁡</mo><mi>u</mi><mo fence="true">)</mo></mrow><mi>cos</mi><mo>⁡</mo><mi>v</mi><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>=</mo><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mi>cos</mi><mo>⁡</mo><mi>u</mi><mo fence="true">)</mo></mrow><mi>sin</mi><mo>⁡</mo><mi>v</mi><mo separator="true">,</mo><mi>u</mi><mo>∈</mo><mrow><mo fence="true">(</mo><mn>0</mn><mo separator="true">,</mo><mn>2</mn><mi>π</mi><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>Z</mi><mo>=</mo><mi>sin</mi><mo>⁡</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo>∈</mo><mrow><mo fence="true">(</mo><mn>0</mn><mo separator="true">,</mo><mn>2</mn><mi>π</mi><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}x=\left( 1+\cos u\right) \cos v,\\y=\left( 1+\cos u\right) \sin v,u\in \left( 0,2\pi \right) \\Z=\sin u,v\in \left( 0,2\pi \right) \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ol><blockquote><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202307151057150.png" alt="image-20230711105202718"></p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第六题</span></span><br><span class="line">u = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span>*<span class="built_in">pi</span>, <span class="number">100</span>);    <span class="comment">% 生成 u 的取值范围</span></span><br><span class="line">v = <span class="built_in">linspace</span>(<span class="number">0</span>, <span class="number">2</span>*<span class="built_in">pi</span>, <span class="number">100</span>);    <span class="comment">% 生成 v 的取值范围</span></span><br><span class="line"></span><br><span class="line">[u, v] = <span class="built_in">meshgrid</span>(u, v);       <span class="comment">% 生成网格点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 参数方程</span></span><br><span class="line">x = (<span class="number">1</span> + <span class="built_in">cos</span>(u)) .* <span class="built_in">cos</span>(v);</span><br><span class="line">y = (<span class="number">1</span> + <span class="built_in">cos</span>(u)) .* <span class="built_in">sin</span>(v);</span><br><span class="line">z = <span class="built_in">sin</span>(u);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 绘制曲面</span></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line">surf(x, y, z);</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">ylabel(<span class="string">&#x27;y&#x27;</span>);</span><br><span class="line">zlabel(<span class="string">&#x27;z&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;曲面&#x27;</span>);</span><br></pre></td></tr></table></figure><ol start="7"><li>利用 for 循环求 1! +2! +3!+ …+5!的值。</li></ol><blockquote><p>153</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第七题</span></span><br><span class="line">n = <span class="number">5</span>;  <span class="comment">% 求和的最大阶乘值</span></span><br><span class="line">sum = <span class="number">0</span>;  <span class="comment">% 初始化求和结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:n</span><br><span class="line">    sum = sum + <span class="built_in">factorial</span>(k);  <span class="comment">% 累加到求和结果</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(sum);  <span class="comment">% 输出结果</span></span><br></pre></td></tr></table></figure><ol start="8"><li>已知一维数组 A=[2,4,5,8,10],B=[4,6,9,3,4],用 for 循环语句实现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>A</mi><mi>i</mi></msub><msub><mi>B</mi><mrow><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\sum ^{n}_{i=1}A_{i}B_{n-i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>求和函数可用 sum()。</li></ol><blockquote><p>153</p></blockquote><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%第八题</span></span><br><span class="line">A = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">10</span>];</span><br><span class="line">B = [<span class="number">4</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">n = <span class="built_in">length</span>(A);</span><br><span class="line"></span><br><span class="line">result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:n</span><br><span class="line">    result = result + A(<span class="built_in">i</span>) * B(n - <span class="built_in">i</span> + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(result);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3差值与拟合</title>
      <link href="/post/f8316f74.html"/>
      <url>/post/f8316f74.html</url>
      
        <content type="html"><![CDATA[<p>9.已知飞机下轮廓线上数据如下，分别用分段线性插值和三次样条插值求x每改变0.1时的y值。</p><table><thead><tr><th style="text-align:center">x</th><th style="text-align:center">0</th><th style="text-align:center">3</th><th style="text-align:center">5</th><th style="text-align:center">7</th><th style="text-align:center">9</th><th style="text-align:center">11</th><th style="text-align:center">12</th><th style="text-align:center">13</th><th style="text-align:center">14</th><th style="text-align:center">15</th></tr></thead><tbody><tr><td style="text-align:center">y</td><td style="text-align:center">0</td><td style="text-align:center">1.2</td><td style="text-align:center">1.7</td><td style="text-align:center">2.0</td><td style="text-align:center">2.1</td><td style="text-align:center">2.0</td><td style="text-align:center">1.8</td><td style="text-align:center">1.2</td><td style="text-align:center">1.0</td><td style="text-align:center">1.6</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%9.已知飞机下轮廓线上数据如下，分别用分段线性插值和三次样条插值求每改变0.1时的y值。</span></span><br><span class="line"></span><br><span class="line">x = [<span class="number">0</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span>];</span><br><span class="line">y = [<span class="number">0</span> <span class="number">1.2</span> <span class="number">1.7</span> <span class="number">2.0</span> <span class="number">2.1</span> <span class="number">2.0</span> <span class="number">1.8</span> <span class="number">1.2</span> <span class="number">1.0</span> <span class="number">1.6</span>];</span><br><span class="line">xi = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">15</span>;</span><br><span class="line">y1 = interp1(x,y,xi,<span class="string">&#x27;linear&#x27;</span>);<span class="comment">%分段差值</span></span><br><span class="line">y2 = interp1(x,y,xi,<span class="string">&#x27;spline&#x27;</span>);<span class="comment">%三次样条插值</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,xi,y1,<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;分段差值&#x27;</span>)</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;*&#x27;</span>,xi,y2,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">title(<span class="string">&#x27;三次样条插值&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/15/rIC7h4Sy8MHplRa.png" alt="image-20230712200927575"></p><p>10.试作出该山区的地貌图和等高线图，并对最近邻点插值、双线性插值方法和双三次插值方法的插值效果进行比较。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1200</th><th style="text-align:center">1600</th><th style="text-align:center">2000</th><th style="text-align:center">2400</th><th style="text-align:center">2800</th><th style="text-align:center">3200</th><th style="text-align:center">3600</th><th style="text-align:center">4000</th></tr></thead><tbody><tr><td style="text-align:center">1200</td><td style="text-align:center">1130</td><td style="text-align:center">1250</td><td style="text-align:center">1280</td><td style="text-align:center">1230</td><td style="text-align:center">1040</td><td style="text-align:center">900</td><td style="text-align:center">500</td><td style="text-align:center">700</td></tr><tr><td style="text-align:center">1600</td><td style="text-align:center">1320</td><td style="text-align:center">1450</td><td style="text-align:center">1420</td><td style="text-align:center">1400</td><td style="text-align:center">1300</td><td style="text-align:center">700</td><td style="text-align:center">900</td><td style="text-align:center">850</td></tr><tr><td style="text-align:center">2000</td><td style="text-align:center">1390</td><td style="text-align:center">1500</td><td style="text-align:center">1500</td><td style="text-align:center">1400</td><td style="text-align:center">900</td><td style="text-align:center">1100</td><td style="text-align:center">1060</td><td style="text-align:center">950</td></tr><tr><td style="text-align:center">2400</td><td style="text-align:center">1500</td><td style="text-align:center">1200</td><td style="text-align:center">1100</td><td style="text-align:center">1350</td><td style="text-align:center">1450</td><td style="text-align:center">1200</td><td style="text-align:center">1150</td><td style="text-align:center">1010</td></tr><tr><td style="text-align:center">2800</td><td style="text-align:center">1500</td><td style="text-align:center">1200</td><td style="text-align:center">1100</td><td style="text-align:center">1550</td><td style="text-align:center">1600</td><td style="text-align:center">1550</td><td style="text-align:center">1380</td><td style="text-align:center">1070</td></tr><tr><td style="text-align:center">3200</td><td style="text-align:center">1500</td><td style="text-align:center">1550</td><td style="text-align:center">1600</td><td style="text-align:center">1550</td><td style="text-align:center">1600</td><td style="text-align:center">1600</td><td style="text-align:center">1600</td><td style="text-align:center">1550</td></tr><tr><td style="text-align:center">3600</td><td style="text-align:center">1480</td><td style="text-align:center">1500</td><td style="text-align:center">1550</td><td style="text-align:center">1510</td><td style="text-align:center">1430</td><td style="text-align:center">1300</td><td style="text-align:center">1200</td><td style="text-align:center">980</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%10.试作出该山区的地貌图和等高线图，并对最近邻点插值、双线性插值方法和双三次插值方法的插值效果进行比较。</span></span><br><span class="line">clf;</span><br><span class="line">x=<span class="number">1200</span>:<span class="number">400</span>:<span class="number">4000</span>;</span><br><span class="line">y=<span class="number">1200</span>:<span class="number">400</span>:<span class="number">3600</span>;</span><br><span class="line">z=[<span class="number">1130</span>  <span class="number">1250</span>  <span class="number">1280</span>  <span class="number">1230</span>  <span class="number">1040</span>  <span class="number">900</span>  <span class="number">500</span> <span class="number">700</span></span><br><span class="line">   <span class="number">1320</span>  <span class="number">1450</span>  <span class="number">1420</span>  <span class="number">1400</span>  <span class="number">1300</span>   <span class="number">700</span>   <span class="number">900</span>   <span class="number">850</span></span><br><span class="line">   <span class="number">1390</span>  <span class="number">1500</span>  <span class="number">1500</span>  <span class="number">1400</span>   <span class="number">900</span>  <span class="number">1100</span>  <span class="number">1060</span>   <span class="number">950</span></span><br><span class="line">   <span class="number">1500</span> <span class="number">1200</span>  <span class="number">1100</span>  <span class="number">1350</span>  <span class="number">1450</span>  <span class="number">1200</span>  <span class="number">1150</span>  <span class="number">1010</span></span><br><span class="line">   <span class="number">1500</span> <span class="number">1200</span>  <span class="number">1100</span>  <span class="number">1550</span>  <span class="number">1600</span>  <span class="number">1550</span>  <span class="number">1380</span>  <span class="number">1070</span></span><br><span class="line">   <span class="number">1500</span> <span class="number">1550</span>  <span class="number">1600</span>  <span class="number">1550</span>  <span class="number">1600</span>  <span class="number">1600</span>  <span class="number">1600</span>  <span class="number">1550</span></span><br><span class="line">   <span class="number">1480</span> <span class="number">1500</span>  <span class="number">1550</span>  <span class="number">1510</span>  <span class="number">1430</span>  <span class="number">1300</span>  <span class="number">1200</span>  <span class="number">980</span>];</span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">meshc(x,y,z)</span><br><span class="line">title(<span class="string">&#x27;原始山区地貌图&#x27;</span>);</span><br><span class="line">xi=<span class="number">1200</span>:<span class="number">5</span>:<span class="number">4000</span>;</span><br><span class="line">yi=<span class="number">1200</span>:<span class="number">5</span>:<span class="number">3600</span>;</span><br><span class="line">[xi,yi]=<span class="built_in">meshgrid</span>(xi,yi);</span><br><span class="line">zi=interp2(x,y,z,xi,yi,<span class="string">&#x27;nearest&#x27;</span>);<span class="comment">%临近点插值</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">meshc(xi,yi,zi)</span><br><span class="line">title(<span class="string">&#x27;临近点插值山区地貌图&#x27;</span>);</span><br><span class="line">zi=interp2(x,y,z,xi,yi,<span class="string">&#x27;linear&#x27;</span>);<span class="comment">%线性插值</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">meshc(xi,yi,zi)</span><br><span class="line">title(<span class="string">&#x27;线性插值山区地貌图&#x27;</span>);</span><br><span class="line">zi=interp2(x,y,z,xi,yi,<span class="string">&#x27;cubic&#x27;</span>);<span class="comment">%三次插值</span></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line">meshc(xi,yi,zi)</span><br><span class="line">title(<span class="string">&#x27;三次插值山区地貌图&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/15/gWS5tKJwrEvCDqb.png" alt="image-20230712200959965"></p><p>11.对下面一组数据作二次多项式拟合，并作出数据点和拟合曲线的图形</p><table><thead><tr><th style="text-align:center">x</th><th style="text-align:center">0</th><th style="text-align:center">0.1</th><th style="text-align:center">0.2</th><th style="text-align:center">0.3</th><th style="text-align:center">0.4</th><th style="text-align:center">0.5</th><th style="text-align:center">0.6</th><th style="text-align:center">0.7</th><th style="text-align:center">0.8</th><th style="text-align:center">0.9</th><th style="text-align:center">1.0</th></tr></thead><tbody><tr><td style="text-align:center">y</td><td style="text-align:center">-0.447</td><td style="text-align:center">1.978</td><td style="text-align:center">3.28</td><td style="text-align:center">6.16</td><td style="text-align:center">7.08</td><td style="text-align:center">7.34</td><td style="text-align:center">7.66</td><td style="text-align:center">9.56</td><td style="text-align:center">9.48</td><td style="text-align:center">9.30</td><td style="text-align:center">11.2</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%11.对下面一组数据作二次多项式拟合，并作出数据点和拟合曲线的图形</span></span><br><span class="line">x = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">1</span>;</span><br><span class="line">y = [<span class="number">-0.447</span> <span class="number">1.978</span> <span class="number">3.28</span> <span class="number">6.16</span> <span class="number">7.08</span> <span class="number">7.34</span> <span class="number">7.66</span> <span class="number">9.56</span> <span class="number">9.48</span> <span class="number">9.30</span> <span class="number">11.2</span>];</span><br><span class="line">a =polyfit(x,y,<span class="number">2</span>); </span><br><span class="line">z = polyval(a,x);</span><br><span class="line">clf;</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&#x27;+&#x27;</span>,x,z,<span class="string">&#x27;--r&#x27;</span>) </span><br><span class="line">title(<span class="string">&#x27;二次多项式拟合&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/15/QNrWgHACIo56GUY.png" alt="image-20230712201015223"></p><p>12.在一次传染病中，已知t时刻的染病人数I(t)满足模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mrow><mo fence="true">(</mo><mi>t</mi><mo fence="true">)</mo></mrow><mo>=</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>1</mn><mrow><mi>a</mi><mo>+</mo><mi>b</mi><msup><mi>e</mi><mrow><mi>c</mi><mi>t</mi></mrow></msup></mrow></mfrac></mstyle></mrow><annotation encoding="application/x-tex">I\left( t\right) =\dfrac{1}{a+be^{ct}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">t</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7196em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，公共部门每隔5天记录一次传染病的人数，具体见表 1，试利用拟合方法确定参数a、b、c。</p><table><thead><tr><th style="text-align:center">天数</th><th style="text-align:center">0</th><th style="text-align:center">5</th><th style="text-align:center">10</th><th style="text-align:center">15</th><th style="text-align:center">20</th><th style="text-align:center">25</th><th style="text-align:center">30</th><th style="text-align:center">35</th><th style="text-align:center">40</th><th style="text-align:center">45</th><th style="text-align:center">50</th><th style="text-align:center">55</th><th style="text-align:center">60</th></tr></thead><tbody><tr><td style="text-align:center">感染人数</td><td style="text-align:center">0.2</td><td style="text-align:center">0.4</td><td style="text-align:center">0.5</td><td style="text-align:center">0.9</td><td style="text-align:center">1.5</td><td style="text-align:center">2.4</td><td style="text-align:center">3.1</td><td style="text-align:center">3.8</td><td style="text-align:center">4.1</td><td style="text-align:center">4.2</td><td style="text-align:center">4.5</td><td style="text-align:center">4.4</td><td style="text-align:center">4.5</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%12.在一次传染病中</span></span><br><span class="line">x = <span class="number">0</span>:<span class="number">5</span>:<span class="number">60</span>;</span><br><span class="line">y = [<span class="number">0.2</span> <span class="number">0.4</span> <span class="number">0.5</span> <span class="number">0.9</span> <span class="number">1.5</span> <span class="number">2.4</span> <span class="number">3.1</span> <span class="number">3.8</span> <span class="number">4.1</span> <span class="number">4.2</span> <span class="number">4.5</span> <span class="number">4.4</span> <span class="number">4.5</span>];</span><br><span class="line">a = lsqcurvefit(<span class="string">&#x27;f2&#x27;</span>,[<span class="number">0.1</span>;<span class="number">0.1</span>;<span class="number">0.5</span>],x,y)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/07/15/fCovBQUKdwDhlGJ.png" alt="image-20230712201045489"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12 OSLA</title>
      <link href="/post/559f37c0.html"/>
      <url>/post/559f37c0.html</url>
      
        <content type="html"><![CDATA[<h1>预备知识</h1><blockquote><p>OSAL（Operating System Abstraction Layer，系统抽象层），可以通俗地理解为一个简化版的操作系统，为Z-Stack的正确运行提供了内存管理、中断管理和任务调度等基本功能。</p></blockquote><ol><li><p>任务ID：应用层是一个任务，它有一个系统分配给他的数值唯一的编号</p></li><li><p>任务事件处理函数：任务可以处理事件，处理事件的这些代码都在一个函数里</p></li><li><p>任务事件变量：应用层任务还有一个 2个字节的变量</p></li><li><p><strong>应用层任务事件变量</strong>和应用层定义的<strong>事件</strong>【之前通过宏定义，定义的代表这个事件的2个字节变量】的关系</p><ul><li>如果事件变量和某个事件的宏值<strong>与操作</strong>为1，那么表示应用层任务将要处理这个事件。</li></ul></li><li><p>系统在运行的时候会不断的去读应用层任务事件变量，当它发现这个变量为0时，就认为应用层任务当前没有事件需要去处理；如果发现这个变量不为0，它就认为应用层任务有事件将要去处理，它就会去调用应用层任务事件处理函数<code>TestApp_ProcessEvent( byte task_id, UINT16 events )</code>，并且把任务事件变量的值传给<code>events</code>。</p></li><li><p>在事件处理函数里，<code>events</code>会分别和应用层定义的所有事件宏值进行与操作，如果发现那个为0，那么就去执行这个事件处理的相应代码</p></li><li><p><code>osal_set_event()</code>调用设置任务事件函数，<code>TestApp_TaskID</code>就会去执行<code>TestApp_SEND_MSG_EVT</code>事件相应的处理代码。</p><ul><li>本质：把<code>TestApp_TaskID</code>（应用层任务）的任务事件变量中对应于<code>TestApp_SEND_MSG_EVT</code>宏值为1的那个为变成1，这样话首先这个任务事件变量就变成了非0，系统在检测到任务事件变量为非0，就会去调用任务事件处理函数<code>TestApp_ProcessEvent</code>，在这个函数里，任务事件变量肯定和<code>TestApp_SEND_MSG_EVT</code>宏值与操作为1，所以必定会执行这个事件相关的代码。</li></ul></li><li><p>每一个层都是一个任务，因此每一个层都有1个任务ID。  任务事件处理函数  任务事件变量</p><ul><li>FUN函数数组={任务事件处理A,任务事件处理B,任务事件处理C…}</li><li>Arr变量数组={任务事件变量a,任务事件变量b,任务事件变量c…}</li></ul></li><li><p>任务ID，系统不是随便分配，可以通过这个值立即找到这个任务自己的<strong>任务事件处理函数</strong>和<strong>事件变量</strong></p><ul><li>例如：应用层任务的任务ID是8</li><li>那么FUN[8]里面是对应的任务处理函数的函数名</li><li>Arr[8]里面就是该任务的事件变量</li></ul></li></ol><blockquote><p>其他资料上的专业性定义：</p><ul><li><p><strong>任务（Task）</strong>：可以理解为需要处理器处理的具体任务，例如“在1秒后开灯”或者“关灯”等等。</p></li><li><p><strong>任务池</strong>：是一个可以存储多个任务的缓冲区，例如一个任务池中可以存放“1秒后开灯”、“2秒后关灯”、“3秒后开灯”及“1分钟后关灯”这几个任务。系统会在指定的时间去执行任务池中的各个任务。</p></li><li><p><strong>优先级</strong>：由于可能存在在同一个时刻需要执行多个任务的情况，所以需要区分在这个时刻优先处理哪些任务、延后处理哪些任务，而优先级是用来标记每一个任务的优先等级。在相同条件下，系统会优先处理高优先级的任务，同时低优先级的任务需要等待处理。另外，系统也可能会中断优先级较底的任务，转而去处理优先级较高的任务。</p></li><li><p><strong>轮询</strong>：系统会<strong>每隔一段时间</strong>在任务池中检查有没有现在需要处理的任务，这个过程称为轮询。</p></li><li><p><strong>操作系统调度周期</strong>：调度周期是指轮询概念中“<strong>每隔一段时间</strong>”的具体时间长度。系统调度周期也是任务的最小时间周期，例如系统调度周期是1秒钟，但是存在一个任务是“0.1秒后关灯”，该任务虽然要求0.1秒后关灯，但由于0.1秒小于系统调度周期，所以这个任务在1秒后才会被执行。</p></li></ul><h2 id="动手实现系统调度"><strong>动手实现系统调度</strong></h2></blockquote><h1>osal_init_system</h1><p>函数<code>osal_init_system</code>中有一个<code>osalInitTasks();</code>函数，在这个函数里系统给所有任务分配任务ID.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">osalInitTasks</span><span class="params">( <span class="type">void</span> )</span> <span class="comment">// 定义函数 osalInitTasks，该函数不接受任何参数并且没有返回值  </span></span><br><span class="line">&#123;  </span><br><span class="line">  uint8 taskID = <span class="number">0</span>; <span class="comment">// 定义一个 uint8 类型的变量 taskID 并初始化为 0，用于表示任务ID  </span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 为 tasksEvents 分配内存，tasksCnt 是任务的数量，这里分配的是 uint16 类型的大小乘以 tasksCnt 的大小  </span></span><br><span class="line">  tasksEvents = (uint16 *)osal_mem_alloc( <span class="keyword">sizeof</span>( uint16 ) * tasksCnt);  </span><br><span class="line">  <span class="comment">// 将分配的内存区域用 0 填充  </span></span><br><span class="line">  osal_memset( tasksEvents, <span class="number">0</span>, (<span class="keyword">sizeof</span>( uint16 ) * tasksCnt));  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 初始化 macTask，并使用 ++taskID 作为参数  </span></span><br><span class="line">  macTaskInit( taskID++ );  </span><br><span class="line">  <span class="comment">// 初始化 nwk，并使用 ++taskID 作为参数  </span></span><br><span class="line">  nwk_init( taskID++ );  </span><br><span class="line">  <span class="comment">// 初始化 Hal，并使用 ++taskID 作为参数  </span></span><br><span class="line">  Hal_Init( taskID++ );  </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined( MT_TASK ) <span class="comment">// 如果定义了 MT_TASK  </span></span></span><br><span class="line">  <span class="comment">// 初始化 MT_Task，并使用 ++taskID 作为参数  </span></span><br><span class="line">  MT_TaskInit( taskID++ );  </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line">  <span class="comment">// 初始化 APS，并使用 ++taskID 作为参数  </span></span><br><span class="line">  APS_Init( taskID++ );  </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined ( ZIGBEE_FRAGMENTATION ) <span class="comment">// 如果定义了 ZIGBEE_FRAGMENTATION  </span></span></span><br><span class="line">  <span class="comment">// 初始化 APSF，并使用 ++taskID 作为参数  </span></span><br><span class="line">  APSF_Init( taskID++ );  </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line">  <span class="comment">// 初始化 ZDApp，并使用 ++taskID 作为参数  </span></span><br><span class="line">  ZDApp_Init( taskID++ );  </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )</span></span><br><span class="line">  <span class="comment">// 如果定义了 ZIGBEE_FREQ_AGILITY 或者 ZIGBEE_PANID_CONFLICT  </span></span><br><span class="line">  <span class="comment">// 初始化 ZDNwkMgr，并使用 ++taskID 作为参数  </span></span><br><span class="line">  ZDNwkMgr_Init( taskID++ ); </span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line">  <span class="comment">// 初始化 TestAPP，没有提供任务ID，可能是最后初始化的任务，或者是之前的任务ID都在其他任务中使用了  </span></span><br><span class="line">  TestAPP_Init( taskID );  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>osal_start_system</h1><p>do-while循环的作用：</p><p>轮询整个任务池，也就是看一下有没有要处理的任务。循环中只有一个条件判断，如果条件成立，那么就结束循环。</p><p>其中的tasksEvents是一个uint16类型的数组，其中的每一个元素都表示一种类型的任务，也就是说，tasksEvents就是一个任务池，tasksCnt是这个任务池的大小。</p><p>这个循环的运行逻辑是：</p><ul><li>首先，idx的初始值为0；</li><li>当tasksEvents[idx]的值为0时，表示该任务中没有事情要处理，这时候条件判断不成立，进入下一次循环；</li><li>每执行1次循环前，idx加1，然后判断是否小于tasksCnt；</li><li>当tasksEvents[idx]的值不等于0时，表示该任务中有事情要处理，这时候条件判断成立，于是通过break结束循环；</li><li>当循环结束后，如果整个任务池中都没有任务要处理，那么idx必定会&gt;=tasksCnt。因此，如果idx &lt; tasksCnt，表示现在任务池中有任务需要处理，并且tasksEvents[idx]就是当前需要处理的任务。因此在循环结束后，Z-Stack先用if (idx &lt; tasksCnt)语句来判断有没有任务需要处理。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 这是一个不返回的函数，是任务系统的主循环函数。它将遍历所有任务事件并为有事件的任务调用task_event_processor()函数。  </span></span><br><span class="line"><span class="comment"> * 如果所有任务都没有事件，此函数会让处理器进入睡眠模式。  </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line"><span class="type">void</span> <span class="title function_">osal_start_system</span><span class="params">( <span class="type">void</span> )</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> !defined ( ZBIT ) &amp;&amp; !defined ( UBIT ) <span class="comment">// 如果未定义ZBIT和UBIT宏  </span></span></span><br><span class="line">  <span class="keyword">for</span>(;;) <span class="comment">// 进入无限循环，除非外部中断或者其他条件停止  </span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span>  </span></span><br><span class="line">  &#123;  </span><br><span class="line">    uint8 idx = <span class="number">0</span>; <span class="comment">// 定义一个uint8类型的变量idx并初始化为0，用于表示任务索引  </span></span><br><span class="line">  </span><br><span class="line">    osalTimeUpdate(); <span class="comment">// 更新系统时间  </span></span><br><span class="line">    Hal_ProcessPoll(); <span class="comment">// 执行Hal的轮询处理，这替换了MT_SerialPoll()和osal_check_timer()函数  </span></span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 开始do-while循环，直到idx达到tasksCnt（任务数量）为止 </span></span><br><span class="line">    <span class="keyword">do</span> &#123;   </span><br><span class="line">      <span class="keyword">if</span> (tasksEvents[idx]) <span class="comment">// 如果当前任务有事件（事件为非零值）  </span></span><br><span class="line">      &#123;  </span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">// 则跳出循环，执行后续代码  </span></span><br><span class="line">      &#125;  </span><br><span class="line">    &#125; <span class="keyword">while</span> (++idx &lt; tasksCnt); <span class="comment">// idx自增1并判断是否小于tasksCnt，若小于则继续循环  </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 如果idx小于tasksCnt（还有任务未处理） </span></span><br><span class="line">    <span class="keyword">if</span> (idx &lt; tasksCnt) </span><br><span class="line">    &#123;  </span><br><span class="line">      uint16 events; <span class="comment">// 定义一个uint16类型的变量events，用于存储事件  </span></span><br><span class="line">      halIntState_t intState; <span class="comment">// 定义一个halIntState_t类型的变量intState，用于存储中断状态（用于锁住临界区）  </span></span><br><span class="line">  </span><br><span class="line">      HAL_ENTER_CRITICAL_SECTION(intState); <span class="comment">// 进入临界区，锁定中断以保护临界区代码的执行，将intState设置为当前的中断状态  </span></span><br><span class="line">      events = tasksEvents[idx]; <span class="comment">// 从tasksEvents数组中获取当前任务的事件  </span></span><br><span class="line">      tasksEvents[idx] = <span class="number">0</span>; <span class="comment">// 清零当前任务的未处理事件（清除事件）  </span></span><br><span class="line">      HAL_EXIT_CRITICAL_SECTION(intState); <span class="comment">// 退出临界区，解锁中断恢复原始的中断状态  </span></span><br><span class="line">  </span><br><span class="line">      <span class="comment">// 调用tasksArr数组中对应任务的回调函数，参数为当前任务的索引idx和已处理的事件events，并将返回的事件添加到当前任务的事件中  </span></span><br><span class="line">      events = (tasksArr[idx])( idx, events );   </span><br><span class="line">  </span><br><span class="line">      HAL_ENTER_CRITICAL_SECTION(intState); <span class="comment">// 再次进入临界区，锁定中断以保护临界区代码的执行，将intState设置为当前的中断状态  </span></span><br><span class="line">      tasksEvents[idx] |= events; <span class="comment">// 将未处理的事件添加回当前任务的事件中（添加未处理事件）  </span></span><br><span class="line">      HAL_EXIT_CRITICAL_SECTION(intState); <span class="comment">// 退出临界区，解锁中断恢复原始的中断状态  </span></span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined( POWER_SAVING ) <span class="comment">// 如果定义了POWER_SAVING宏（开启节能模式）  </span></span></span><br><span class="line">    <span class="keyword">else</span> <span class="comment">// 如果整个任务事件循环没有任何活动（没有任务有事件）  </span></span><br><span class="line">    &#123;  </span><br><span class="line">      osal_pwrmgr_powerconserve(); <span class="comment">// 则调用osal_pwrmgr_powerconserve()函数将处理器/系统置于睡眠模式以节省电力（节能模式）  </span></span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// 结束if宏定义判断（如果有定义POWER_SAVING宏）  </span></span></span><br><span class="line">  &#125; <span class="comment">// 结束for循环（整个任务事件处理流程）  </span></span><br><span class="line">&#125; <span class="comment">// 结束函数定义（osal_start_system函数）</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>11 Z-Stack协议栈使用</title>
      <link href="/post/9f6b35f7.html"/>
      <url>/post/9f6b35f7.html</url>
      
        <content type="html"><![CDATA[<h1>f8wConfig.cfg文件</h1><blockquote><p>选择信道、设置PAN ID</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022148382.png" alt="image-20231024164646941"></p><h2 id="选择信道">选择信道</h2><p>#define  DEFAULT_CHANLIST 0x00000800</p><p><code>DEFAULT_CHANLIST </code>表明Zigbee模块要工作的网络，当有多个信道参数值进行或操作之后，把结果作为 <code>DEFAULT_CHANLIST</code>值</p><p>对于路由器、终端、协调器的意义：</p><ul><li>路由器和终端：<ul><li>可以在参与或操作的这些信道上选择一个相对于我来说最佳的网络，加入进去</li></ul></li><li>协调器<ul><li>可以在参与或操作的这些信道上选择一个最佳的信道并在这个信道上创建自己的Zigbee网络</li></ul></li></ul><h2 id="选择PAN-ID">选择PAN ID</h2><ul><li><p>非0xFFFF</p><ul><li>路由器和终端：必须要加入到PANID为参数值这样一个Zigbee无线局域网</li><li>协调器：要创建一个网络，并且把这个参数值作为这个网络的PANED</li></ul></li><li><p>为0xFFFF</p><ul><li>路由器和终端：在加入网络的时候没有PANID的限制</li><li>协调器：可以随机生成一个值，把这个随机值作为这个网络的PANED</li></ul></li></ul><blockquote><p>当2个模块下载相同的协调器代码，并且指定的PANID参数值为非0xffff时，</p><p>先上电的模块可以创建0xFFF8这样一个Zigbee网络，后上电的模块创建一个在0xFFF8基础上加1的网络。</p></blockquote><h1>响应任务事件</h1><blockquote><p>硬件层 ：硬件操作相关</p><p>网络层 ：网络相关的代码</p><p>应用层：自己写应用程序部分</p><ul><li>几乎每一个层都是一个任务，系统为每一个任务分配一个，一个字节的唯一数值编号，每一个任务都能处理一些他们能够处理的事物</li><li>任务ID：这个数值编号叫做</li><li>事件：它他们能够处理的事物</li></ul></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*task_id：任务ID</span></span><br><span class="line"><span class="comment">*event_flag：任务事件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">uint8 <span class="title function_">osal_set_event</span><span class="params">( uint8 task_id, uint16 event_flag )</span></span><br></pre></td></tr></table></figure><h2 id="在工程中进行测试">在工程中进行测试</h2><ol><li>在<code>TestAPP.c</code>文件中，找到<code>UINT16 TestAPP_ProcessEvent( byte task_id, UINT16 events )</code>函数</li><li>在之前写的三种模式的测试代码下添加如下语句</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osal_set_event(TestAPP_TaskID,TestAPP_SEND_MSG_EVT);</span><br></pre></td></tr></table></figure><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154458.png" alt="image-20231024173151722"></p><ol start="3"><li>在该函数中进行向下找，看到对<code>TestAPP_SEND_MSG_EVT</code>事件的响应代码，进行如下处理：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P0DIR |= <span class="number">0X02</span>;</span><br><span class="line">P0_1 = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154460.png" alt="image-20231024172856825"></p><ol start="4"><li>x 1%第八题2A = [2, 4, 5, 8, 10];3B = [4, 6, 9, 3, 4];4n = length(A);5​6result = 0;7​8for i = 1:n9    result = result + A(i) * B(n - i + 1);10end11​12disp(result);matlab</li><li>实验现象：跳到<code>TestAPP_SEND_MSG_EVT</code>事件的响应代码，LED2亮</li></ol><h1>软件定时器响应事件</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*taskID：任务ID</span></span><br><span class="line"><span class="comment">*event_id：任务事件</span></span><br><span class="line"><span class="comment">*timeout_value：超时时间（毫秒），多长时间处理一次 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">uint8 <span class="title function_">osal_start_timerEx</span><span class="params">( uint8 taskID, uint16 event_id, uint16 timeout_value )</span></span><br></pre></td></tr></table></figure><h2 id="实验验证">实验验证</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">osal_start_timerEx(TestAPP_TaskID,TestAPP_SEND_MSG_EVT,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure><ol><li>注释掉刚才写的<code>osal_set_event</code>函数，将<code>osal_start_timerEx</code>函数写在下面</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154461.png" alt="image-20231024173632873"></p><ol start="2"><li>编译下载，观察实验现象</li><li>延时2秒后亮</li></ol><h1>定义事件</h1><blockquote><p>格式为 <code>#define 事件名 0x000? </code> ?可以是十六进制的数，最多定义16个时间 0 ~ F</p><p>必须保证3个0，位置随意</p></blockquote><h2 id="实验验证-2">实验验证</h2><ol><li>在<code>TestAPP.h</code>文件中，定义事件</li></ol><blockquote><p>格式为 #define 事件名 0x000?  ?可以是十六进制的数，最多定义16个时间 0 ~ F</p><p>必须保证3个0，位置随意</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//格式为 #define 事件名 0x000?  ?可以是十六进制的数，最多定义16个时间 0 ~ F</span></span><br><span class="line"><span class="comment">//必须保证3个0，位置随意</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TestAPP_EVT                0x0002   </span></span><br></pre></td></tr></table></figure><ol start="2"><li>如下</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154462.png" alt="image-20231024174750798"></p><ol start="3"><li>在<code>TestAPP.c</code>文件中，找到刚才的<code>UINT16 TestAPP_ProcessEvent( byte task_id, UINT16 events )</code>函数，在最后一个事件响应代码下，添加新的事件响应代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( events &amp; TestAPP_EVT )&#123;</span><br><span class="line">   <span class="comment">//初始化要全面，因为使用的是TI官方代码移植的，他官方例程中可能也配置了这个IO口，我们在这里重新配置的时候必须要全面配置，否则这个IO口可能默认不是通用IO</span></span><br><span class="line">   P0SEL &amp;=<span class="number">0XEF</span>;<span class="comment">//1110 1111 </span></span><br><span class="line">   P0DIR |= <span class="number">0X10</span>;</span><br><span class="line">   P0_4 = <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> (events ^ TestAPP_EVT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154463.png" alt="image-20231024175336520"></p><ol start="4"><li>添加本事件的响应事件函数</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154464.png" alt="image-20231024180249010"></p><ol start="5"><li>编译，下载，灯亮</li></ol><blockquote><p>初始化要全面，因为使用的是TI官方代码移植的，他官方例程中可能也配置了这个IO口，我们在这里重新配置的时候必须要全面配置，否则这个IO口可能默认不是通用IO</p></blockquote><h1>消息</h1><p>在ZSTACK里，任务事件定义的特点决定了，每一个任务最多只能处理16种不同的事件，而系统在运行时候有许多事务需要处理，如果每一个实物处理都定义成1个事件，那么16种事件肯定是不够用，所有引入消息。<br>消息的处理事务的原理：<br>定义了一个事件#define SYS_EVENT_MSG               0x8000  // A message is waiting event<br>当需要应用层任务来处理某个事务的时候，首先给应用层任务发送一个消息<br>掉osal_set_event(SDApp_TaskID,SYS_EVENT_MSG);<br>那么这样一来，应用层就会进入SYS_EVENT_MSG处理，在这个事件处理里判断到底刚刚引发我们产生SYS_EVENT_MSG事件是哪一种类型的消息，然后根据消息的类型做相应的处理。<br>而消息的类型可以自己定义，这样一来消息的类可以很多，那么应用层任务处理的事物种类就很多了。</p><h2 id="实验验证-3">实验验证</h2><ol><li>将<code>TestAPP.c</code>文件中的<code>void TestAPP_HandleKeys( byte shift, byte keys )</code>函数下的所有内容清空，然后调用数码管显示函数</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154465.png" alt="image-20231024185914125"></p><ol start="2"><li>在<code>TestAPP_ProcessEvent</code>函数注释掉之前调用的<code>osal_start_timerEx</code>，将下面的函数添加到下面</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个名为keyChange_t的结构体指针msgPtr</span></span><br><span class="line">keyChange_t *msgPtr;</span><br><span class="line">              </span><br><span class="line"><span class="comment">//定义按键响应消息</span></span><br><span class="line">msgPtr = (keyChange_t *)osal_msg_allocate( <span class="keyword">sizeof</span>(keyChange_t) );</span><br><span class="line">              </span><br><span class="line"><span class="keyword">if</span> ( msgPtr )&#123;</span><br><span class="line"><span class="comment">// 将消息头部的事件设置为KEY_CHANGE</span></span><br><span class="line"> msgPtr-&gt;hdr.event = KEY_CHANGE;</span><br><span class="line"><span class="comment">// 将键值设置为3</span></span><br><span class="line">msgPtr-&gt;keys=<span class="number">3</span>;</span><br><span class="line">                  </span><br><span class="line"><span class="comment">//将发送给TestAPP_TaskID任务的消息压入消息队列，并响应系统事件osal_set_event(TestAPP_TaskID,SYS_EVENT_MSG);</span></span><br><span class="line">osal_msg_send( TestAPP_TaskID, (uint8 *)msgPtr );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154466.png" alt="image-20231024185449983"></p><ol start="3"><li>编译，下载，数码管显示按键数字，表示无误</li></ol><h2 id="按键实验（协议栈实现）">按键实验（协议栈实现）</h2><ol><li>添加封装好的代码到工程中</li></ol><p>Key.c</p><blockquote><p>根据自己的实际情况，更改里面的文件名和事件名</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;TestApp.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OSAL_Timers.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">char</span> TestAPP_TaskID;</span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> i,j;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">     <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">30</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">KeysIntCfg</span><span class="params">()</span></span><br><span class="line">&#123;<span class="comment">//Key3  Key4   Key5</span></span><br><span class="line">     </span><br><span class="line">     P1SEL &amp;=~<span class="number">0X02</span>;</span><br><span class="line">     P1DIR &amp;=~<span class="number">0X02</span>;</span><br><span class="line">     IEN2|=<span class="number">0x10</span>;<span class="comment">//开P1IE组中断</span></span><br><span class="line">     P1IEN|=<span class="number">0x02</span>;<span class="comment">//开Key3组内中断</span></span><br><span class="line">     PICTL|=<span class="number">0x02</span>;<span class="comment">//设置P1_1为下降沿</span></span><br><span class="line">     </span><br><span class="line">     P2SEL &amp;=~<span class="number">0X01</span>;</span><br><span class="line">     P2DIR &amp;=~<span class="number">0X01</span>;</span><br><span class="line">     IEN2|=<span class="number">0x02</span>;</span><br><span class="line">     P2IEN|=<span class="number">0x01</span>;</span><br><span class="line">     PICTL|=<span class="number">0x08</span>;<span class="comment">//设置P2_0为下降沿</span></span><br><span class="line">     </span><br><span class="line">     P0SEL &amp;=~<span class="number">0X20</span>;</span><br><span class="line">     P0DIR &amp;=~<span class="number">0X20</span>;</span><br><span class="line">     P0IE=<span class="number">1</span>;<span class="comment">//或者写成 IEN1|=0x20</span></span><br><span class="line">     P0IEN|=<span class="number">0x20</span>;</span><br><span class="line">     PICTL|=<span class="number">0x01</span>;<span class="comment">//设置P0_5为下降沿</span></span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     EA=<span class="number">1</span>;      <span class="comment">//开总中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=P1INT_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">Key3_ISR</span><span class="params">()</span> <span class="comment">//P1_1</span></span><br><span class="line">&#123;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">if</span>(P1IFG &amp; <span class="number">0X02</span>)</span><br><span class="line">     &#123;</span><br><span class="line">        osal_start_timerEx(TestAPP_TaskID,TestAPP_EVT,<span class="number">25</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     P1IFG =<span class="number">0</span>;</span><br><span class="line">     P1IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=P2INT_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">Key4_ISR</span><span class="params">()</span><span class="comment">//P2_0</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>(P2IFG &amp; <span class="number">0X01</span>)</span><br><span class="line">     &#123; </span><br><span class="line">        osal_start_timerEx(TestAPP_TaskID,TestAPP_EVT,<span class="number">25</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     P2IFG =<span class="number">0</span>;</span><br><span class="line">     P2IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=P0INT_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">Key5_ISR</span><span class="params">()</span><span class="comment">//P0_5</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(P0IFG &amp; <span class="number">0X20</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       osal_start_timerEx(TestAPP_TaskID,TestAPP_EVT,<span class="number">25</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     P0IFG =<span class="number">0</span>;</span><br><span class="line">     P0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Key.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> KEY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY_H</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">KeysIntCfg</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>引用头文件，初始化。【初始化函数一定要放到<code>osal_start_system();</code>之前】</li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154467.png" alt="image-20231024190443721"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154468.png" alt="image-20231024190533982"></p><ol start="3"><li>屏蔽官方例程中的中断函数。【hal-target-CC2530EB-drivers】里面的<code>HAL_ISR_FUNCTION( halKeyPort2Isr, P2INT_VECTOR )</code>和<code>HAL_ISR_FUNCTION( halKeyPort0Isr, P0INT_VECTOR )</code></li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154469.png" alt="image-20231024190935761"></p><ol start="4"><li>将<code>TestAPP.c</code>文件中的之前定义的<code>TestAPP_EVT</code>事件响应进行修改，如下所示</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( events &amp; TestAPP_EVT )&#123;</span><br><span class="line">   </span><br><span class="line">   P0SEL &amp;=<span class="number">0XEF</span>;<span class="comment">//1110 1111 </span></span><br><span class="line">   P0DIR |= <span class="number">0X10</span>;</span><br><span class="line">   P0_4 ^= <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span>(<span class="number">0</span>==P1_1)&#123;<span class="comment">/*按钮3按下*/</span>LS164_BYTE(<span class="number">3</span>);&#125;</span><br><span class="line">   <span class="keyword">if</span>(<span class="number">0</span>==P2_0)&#123;<span class="comment">/*按钮4按下*/</span>LS164_BYTE(<span class="number">4</span>);&#125;</span><br><span class="line">   <span class="keyword">if</span>(<span class="number">0</span>==P0_5)&#123;<span class="comment">/*按钮5按下*/</span>LS164_BYTE(<span class="number">5</span>);&#125;</span><br><span class="line">    </span><br><span class="line">   <span class="keyword">return</span> (events ^ TestAPP_EVT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>下载，实验现象：按下按键灯亮灭交替，数码管显示按键编号</li></ol><h1>使用协议栈生成hex文件注意</h1><ol><li><p>配置项目工程，可以生成hex，之前在生成工程里面说过如何设置</p></li><li><p>在<code>f8w2530.xc</code>文件中，将下面两行的注释去掉</p></li></ol><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202311022154470.png" alt="image-20231024192040722"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>10 Z-Stack协议栈移植</title>
      <link href="/post/b23e3d7a.html"/>
      <url>/post/b23e3d7a.html</url>
      
        <content type="html"><![CDATA[<h1>一、下载Z-Stack协议栈源文件</h1><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252311009.png" alt="image-20231025152226655"></p><p>安装过程全部默认下一步即可，安装完成后会在C盘根目录下生成一个【Texas Instruments】文件夹</p><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252316299.png" alt="image-20231025152334686"></p><h1>二、删除一些不必要的文件</h1><ol><li>将【ZStack-CC2530-2.3.0-1.4.0】文件夹，复制到自己放置ZigBee工程的文件夹下</li><li>进入到【ZStack-CC2530-2.3.0-1.4.0】文件夹，进行文件删除</li><li>保留【components】和【documents】文件夹</li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252316193.png" alt="image-20231025152648846"></p><ol start="4"><li>删除完成后可以将【ZStack-CC2530-2.3.0-1.4.0】文件夹的命名进行更改，我这里改成了【test07】</li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252316908.png" alt="image-20231025153030134"></p><ol start="5"><li>进入【Projects】-【zstack】-【Samples】文件夹，保留里面的【GenericApp】文件夹</li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252316614.png" alt="image-20231025153416991"></p><h1>三、改名</h1><blockquote><p>这里根据自己的需求进行工程重命名，我这里命名为【TestAPP】</p></blockquote><ol><li>将【GenericApp】文件夹的名字改为【TestAPP】</li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252317857.png" alt="image-20231025153735691"></p><ol start="2"><li>进入该文件夹，里面的【Source】文件夹，用文本编辑器打开里面三个文件（VSCode、notpad++、sublime等），进行全文搜索替换，将【GenericApp】替换为【TestAPP】。<ul><li>这里以【GenericApp.c】为例，通过VSCode打开后，全文搜索替换</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252317858.png" alt="image-20231025154314433"></p><ol start="3"><li>将三个文件里面的内容替换完成后，将三个文件分别重命名为<ul><li>TestAPP.c</li><li>TestAPP.h</li><li>OSAL_TestAPP.c</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252317859.png" alt="image-20231025154529247"></p><ol start="4"><li>进入【CC2530DB】文件夹，将里面的三个文件内容重复上述替换操作。【直接右键该文件，通过VSCode打开即可】</li><li>文件内容替换完成后，将三个文件进行重命名<ul><li>TestAPP.ewd</li><li>TestAPP.ewp</li><li>TestAPP.eww</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252317860.png" alt="image-20231025154900995"></p><h1>四、测试</h1><ol><li>打开TestAPP.eww</li><li>出现如下提示，选择【是】</li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252317861.png" alt="image-20231025155031906"></p><ol start="3"><li>进入后，点击编译，不出现错误即可，可能会出现警告，这个不影响</li></ol><p><img src="https://raw.githubusercontent.com/lucasZyh/Personal-picture-bed/master/img/202310252317862.png" alt="image-20231025155136144"></p><blockquote><p>🎉恭喜你，移植成功！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>09抓包分析</title>
      <link href="/post/f16fb36e.html"/>
      <url>/post/f16fb36e.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>08简易无线通信</title>
      <link href="/post/b63b488b.html"/>
      <url>/post/b63b488b.html</url>
      
        <content type="html"><![CDATA[<h1>预备知识</h1><ul><li>Zigbee无线通信，需要高频的载波来提供发射效率，Zigbee模块之间要可以正常的收发，接收模块必须把接收频率设置和发射模块的载波频率一致。</li><li>Zigbee有27个载波可以进行通信，载波叫做信道（无线通信的通道）。这些载波的频率落在某些频率区段，我们把这些区段叫做频段。<ul><li>2.4G频段  16个信道</li><li>915M频段 896M频段  11个信道</li><li>但TI的所有支持Zigbee底层协议的芯片只能在2.4G频段的16个信道里进行通信，即11-26信道。</li></ul></li><li><strong>网络地址</strong>：在Zigb</li><li>ee无线局域网里，每一模块都一个在该网络里唯一的2个字节的地址，这个地址叫做网络地址，网络短地址。</li><li><strong>PANID</strong>：这是一个2个字节的编码，用来区别不同的Zigbee无线局域网，个域网ID.</li></ul><h1>代码分析</h1><blockquote><p>这里不在详细介绍，只给出关键配置代码的代码模板</p><p>对于数据发送接收的程序来说，基本的无线通信的基础配置是固定的，只需要知道里面需要自己每次更改的部分即可</p><p>将两个接收和发送的代码分别烧录到两个开发板中，实验现象是：发送板按下按键发送你设定的数字<code>SENDVAL</code>到接收板，接收板通过数码管显示该数字</p></blockquote><h2 id="发送数据">发送数据</h2><h3 id="分析">分析</h3><p><code>void halRfInit(void)</code>：无线通信初始化函数</p><p><code>void RFSend(char *pstr,char len)</code>：无线数据发送函数</p><p><code>__interrupt void RF_IRQ(void)</code>：无线通信中断函数</p><p><code>void RevRFProc()</code>：无线数据接收函数</p><h4 id="无线通信初始化函数">无线通信初始化函数</h4><blockquote><p>在这个函数中，需要修改的只有<code>FREQCTRL</code>和<code>PAN_ID1</code>两项的值</p></blockquote><p><img src="https://s2.loli.net/2023/10/15/SUnczgi8eACadpj.png" alt="image-20231010205943211"></p><p><img src="https://s2.loli.net/2023/10/15/JBcIjl8Sp4fYkrz.png" alt="image-20231010210142126"></p><p><img src="https://s2.loli.net/2023/10/15/fmGPNJVB4OTeLkt.png" alt="image-20231010210253727"></p><h4 id="无线数据发送函数">无线数据发送函数</h4><blockquote><p>可以直接看注释，这个函数基本不用改动，使用时直接掉这个函数就行，传入发送数组和数组长度即可</p></blockquote><p><img src="https://s2.loli.net/2023/10/15/vUX2PI7CqK8DaVt.png" alt="image-20231010210834002"></p><h4 id="中断函数">中断函数</h4><p><img src="https://s2.loli.net/2023/10/15/Rxrn2G6kTIuLBKj.png" alt="image-20231010211712457"></p><h4 id="发送数据包数组">发送数据包数组</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> SendPacket[]=&#123;<span class="number">0x0c</span>,<span class="number">0x61</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x20</span>,<span class="number">0xEF</span>,<span class="number">0xBE</span>,<span class="number">0x20</span>,<span class="number">0x50</span>,SENDVAL&#125;;</span><br></pre></td></tr></table></figure><ul><li>第一个字节0x0C含义，这个自己后面还有12个字节要发送，<strong>实际上是10（后面跟的）+2（默认自动添加的CRC 码）</strong></li><li>第5 6个字节表示的是PANID</li><li>第7 8个字节是无线模块目标设备的网络地址 0xBEEF</li><li>第9 10就是本地模块的网络地址</li><li>11 个字节是我们有用的数据</li><li>CRC码 12 13个字节 是硬件自动追加</li></ul><h4 id="主函数中的注意事项">主函数中的注意事项</h4><p><img src="https://s2.loli.net/2023/10/15/vTchX8WSY9tzVw6.png" alt="image-20231010213115722"></p><h3 id="发送数据模板代码">发送数据模板代码</h3><p>将两个接收和发送的代码分别烧录到两个开发板中，实验现象是：发送板按下按键发送你设定的数字<code>SENDVAL</code>到接收板，接收板通过数码管显示该数字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;74LS164_8LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SENDVAL 5</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> SendPacket[]=&#123;<span class="number">0x0c</span>,<span class="number">0x61</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x20</span>,<span class="number">0xEF</span>,<span class="number">0xBE</span>,<span class="number">0x20</span>,<span class="number">0x50</span>,SENDVAL&#125;;</span><br><span class="line"><span class="comment">//第一个字节0x0C含义，这个自己后面还有12个字节要发送</span></span><br><span class="line"><span class="comment">//第5 6个字节表示的是PANID</span></span><br><span class="line"><span class="comment">//第7 8个字节是无线模块目标设备的网络地址 0xBEEF</span></span><br><span class="line"><span class="comment">//第9 10就是本地模块的网络地址</span></span><br><span class="line"><span class="comment">//11 个字节是我们有用的数据</span></span><br><span class="line"><span class="comment">// CRC码 12 13个字节 是硬件自动追加</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> y,x;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Init32M</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   Delay();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">KeysIntCfg</span><span class="params">()</span></span><br><span class="line">&#123;<span class="comment">//Key3  Key4   Key5</span></span><br><span class="line">     </span><br><span class="line">     IEN2|=<span class="number">0x10</span>;<span class="comment">//开P1IE组中断</span></span><br><span class="line">     P1IEN|=<span class="number">0x02</span>;<span class="comment">//开Key3组内中断</span></span><br><span class="line">     PICTL|=<span class="number">0x02</span>;<span class="comment">//设置P1_1为下降沿 </span></span><br><span class="line">     EA=<span class="number">1</span>;      <span class="comment">//开总中断</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">halRfInit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    FRMCTRL0 |= <span class="number">0x60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recommended RX settings  </span></span><br><span class="line">    TXFILTCFG = <span class="number">0x09</span>;</span><br><span class="line">    AGCCTRL1 = <span class="number">0x15</span>;</span><br><span class="line">    FSCAL1 = <span class="number">0x00</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt  </span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;<span class="comment">//把射频接收中断打开</span></span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置信道</span></span><br><span class="line">    FREQCTRL =(<span class="number">11</span>+(<span class="number">25</span><span class="number">-11</span>)*<span class="number">5</span>);<span class="comment">//(MIN_CHANNEL + (channel - MIN_CHANNEL) * CHANNEL_SPACING);   </span></span><br><span class="line">                     <span class="comment">//设置载波为2475M</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置ID</span></span><br><span class="line">    PAN_ID0=<span class="number">0x07</span>;</span><br><span class="line">    PAN_ID1=<span class="number">0x20</span>; <span class="comment">//0x2007   </span></span><br><span class="line">    </span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送无线数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RFSend</span><span class="params">(<span class="type">char</span> *pstr,<span class="type">char</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> i;</span><br><span class="line">    RFST = <span class="number">0xEC</span>; <span class="comment">//确保接收是空的</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>; <span class="comment">//清接收标志位</span></span><br><span class="line">    <span class="keyword">while</span> (FSMSTAT1 &amp; <span class="number">0x22</span>);<span class="comment">//等待射频发送准备好</span></span><br><span class="line">    RFST = <span class="number">0xEE</span>;<span class="comment">//确保发送队列是空</span></span><br><span class="line">    RFIRQF1 &amp;= ~<span class="number">0x02</span>;<span class="comment">//清发送标志位</span></span><br><span class="line">    <span class="comment">//为数据发送做好准备工作</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">       RFD=pstr[i];</span><br><span class="line">    &#125;  <span class="comment">//循环的作用是把我们要发送的数据全部压到发送缓冲区里面</span></span><br><span class="line">    </span><br><span class="line">    RFST = <span class="number">0xE9</span>; <span class="comment">//这个寄存器一旦被设置为0xE9,发送缓冲区的数据就被发送出去</span></span><br><span class="line">    <span class="keyword">while</span>(!(RFIRQF1 &amp; <span class="number">0x02</span>) );<span class="comment">//等待发送完成</span></span><br><span class="line">    RFIRQF1 = ~<span class="number">0x02</span>;<span class="comment">//清发送完成标志</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   LS164_Cfg();<span class="comment">//74LS164控制数码管的初始化</span></span><br><span class="line">   Init32M(); <span class="comment">//主时钟晶振工作在32M </span></span><br><span class="line">   KeysIntCfg(); </span><br><span class="line">   </span><br><span class="line">   halRfInit();<span class="comment">//无线通信的初始化  初始化相关的寄存器，配置工作信道，和PANID</span></span><br><span class="line">   </span><br><span class="line">   SHORT_ADDR0=<span class="number">0x50</span>;</span><br><span class="line">   SHORT_ADDR1=<span class="number">0x20</span>;<span class="comment">//设置本模块地址  设置本模块的网络地址0x2050</span></span><br><span class="line">   <span class="comment">//大小端模式问题，</span></span><br><span class="line">  </span><br><span class="line">    LS164_BYTE(<span class="number">1</span>); </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=P1INT_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">Key3_ISR</span><span class="params">()</span> <span class="comment">//P1_1</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">if</span>(<span class="number">0x02</span> &amp; P1IFG)</span><br><span class="line">     &#123;</span><br><span class="line">         Delay();</span><br><span class="line">         <span class="keyword">if</span>(<span class="number">0</span>==P1_1)</span><br><span class="line">         &#123;           </span><br><span class="line">           P1DIR |=<span class="number">0X01</span>;</span><br><span class="line">           P1_0 ^=<span class="number">1</span>;</span><br><span class="line">           RFSend(SendPacket,<span class="number">11</span>);<span class="comment">//发送数据</span></span><br><span class="line">         &#125;     </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     P1IFG=<span class="number">0</span>;</span><br><span class="line">     P1IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=RF_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">RF_IRQ</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//这个是射频中断函数，当小灯模块接收到开关模块发送来的数据时，小灯模块的CPU就会进入中断函数执行</span></span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( RFIRQF0 &amp; <span class="number">0x40</span> )</span><br><span class="line">    &#123;            </span><br><span class="line">        RFIRQF0&amp;= ~<span class="number">0x40</span>;   <span class="comment">// Clear RXPKTDONE interrupt</span></span><br><span class="line">    &#125;</span><br><span class="line">    S1CON= <span class="number">0</span>;                   <span class="comment">// Clear general RF interrupt flag</span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="接收数据">接收数据</h2><h3 id="分析-2">分析</h3><p>初始化函数和发送数据的初始化函数一样，只需要把发送函数去掉，添加一个接收函数即可</p><blockquote><p>注意</p><ol><li>两相互通信的模块之间，初始化函数中的<strong>接收和发送的信道和PANID一定要一样</strong></li><li>接收工程的主函数中设置的<code>SHORT_ADDR</code>网络地址需要和发送的数据包中的第7、8两个字节所生成的网络地址一致</li></ol></blockquote><h4 id="中断函数-2">中断函数</h4><p><img src="https://s2.loli.net/2023/10/15/RFGrEiCO7KvaBTn.png" alt="image-20231010213214831"></p><h4 id="无线数据接收函数">无线数据接收函数</h4><p><img src="https://s2.loli.net/2023/10/15/4cDIt2RGjXyCL93.png" alt="image-20231010214105096"></p><h3 id="接收数据模板代码">接收数据模板代码</h3><p>将两个接收和发送的代码分别烧录到两个开发板中，实验现象是：发送板按下按键发送你设定的数字<code>SENDVAL</code>到接收板，接收板通过数码管显示该数字</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;74LS164_8LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SENDVAL 5</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> SendPacket[]=&#123;<span class="number">0x0c</span>,<span class="number">0x61</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x20</span>,<span class="number">0xEF</span>,<span class="number">0xBE</span>,<span class="number">0x20</span>,<span class="number">0x50</span>,SENDVAL&#125;;</span><br><span class="line"><span class="comment">//第一个字节0x0C含义，这个自己后面还有12个字节要发送</span></span><br><span class="line"><span class="comment">//第5 6个字节表示的是PANID</span></span><br><span class="line"><span class="comment">//第7 8个字节是无线模块目标设备的网络地址 0xBEEF</span></span><br><span class="line"><span class="comment">//第9 10就是本地模块的网络地址</span></span><br><span class="line"><span class="comment">//11 个字节是我们有用的数据</span></span><br><span class="line"><span class="comment">// CRC码 12 13个字节 是硬件自动追加</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> y,x;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Init32M</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   SLEEPCMD &amp;=<span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   Delay();</span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;=<span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">halRfInit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    FRMCTRL0 |= <span class="number">0x60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recommended RX settings  </span></span><br><span class="line">    TXFILTCFG = <span class="number">0x09</span>;</span><br><span class="line">    AGCCTRL1 = <span class="number">0x15</span>;</span><br><span class="line">    FSCAL1 = <span class="number">0x00</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// enable RXPKTDONE interrupt  </span></span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;<span class="comment">//把射频接收中断打开</span></span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置信道</span></span><br><span class="line">    FREQCTRL =(<span class="number">11</span>+(<span class="number">25</span><span class="number">-11</span>)*<span class="number">5</span>);<span class="comment">//(MIN_CHANNEL + (channel - MIN_CHANNEL) * CHANNEL_SPACING);   </span></span><br><span class="line">                     <span class="comment">//设置载波为2475M</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置ID</span></span><br><span class="line">    PAN_ID0=<span class="number">0x07</span>;</span><br><span class="line">    PAN_ID1=<span class="number">0x20</span>; <span class="comment">//0x2007   </span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//halRfRxInterruptConfig(basicRfRxFrmDoneIsr); </span></span><br><span class="line">    </span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接受无线数据</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RevRFProc</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">char</span> len;</span><br><span class="line"><span class="type">static</span> <span class="type">char</span>  ch;</span><br><span class="line"></span><br><span class="line">    len = ch = <span class="number">0</span>;</span><br><span class="line">    RFIRQM0 &amp;= ~<span class="number">0x40</span>;</span><br><span class="line">    IEN2 &amp;= ~<span class="number">0x01</span>;</span><br><span class="line">    EA = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    len = RFD;<span class="comment">//读第一个字节判断这一串数据后面有几个字节；</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (len &gt; <span class="number">0</span>) </span><br><span class="line">    &#123;<span class="comment">//只要后面还有数据那么就把他都从接受缓冲区取出来</span></span><br><span class="line">        ch=RFD;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">3</span> == len)</span><br><span class="line">        &#123;<span class="comment">//读取倒数第三个字节的数字，通过数码管显示</span></span><br><span class="line">           LS164_BYTE(ch);</span><br><span class="line">        &#125;</span><br><span class="line">        len--;</span><br><span class="line">     &#125;     </span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">    RFIRQM0 |= <span class="number">0x40</span>;</span><br><span class="line">    <span class="comment">// enable general RF interrupts</span></span><br><span class="line">    IEN2 |= <span class="number">0x01</span>;        </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">  LS164_Cfg();<span class="comment">//74LS164控制数码管的初始化</span></span><br><span class="line">  Init32M(); <span class="comment">//主时钟晶振工作在32M </span></span><br><span class="line">  halRfInit();</span><br><span class="line">   </span><br><span class="line">  SHORT_ADDR0=<span class="number">0xEF</span>;</span><br><span class="line">  SHORT_ADDR1=<span class="number">0xBE</span>;<span class="comment">//设置本模块地址  0xBEEF</span></span><br><span class="line">  </span><br><span class="line">  LS164_BYTE(<span class="number">2</span>); </span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=RF_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">RF_IRQ</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;<span class="comment">//这个是射频中断函数，当小灯模块接收到开关模块发送来的数据时，小灯模块的CPU就会进入中断函数执行</span></span><br><span class="line">    EA=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( RFIRQF0 &amp; <span class="number">0x40</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">        RevRFProc();</span><br><span class="line">             </span><br><span class="line">        RFIRQF0&amp;= ~<span class="number">0x40</span>;   <span class="comment">// Clear RXPKTDONE interrupt</span></span><br><span class="line">    &#125;</span><br><span class="line">    S1CON= <span class="number">0</span>;                   <span class="comment">// Clear general RF interrupt flag</span></span><br><span class="line">    RFST = <span class="number">0xEC</span>;<span class="comment">//清接收缓冲器</span></span><br><span class="line">    RFST = <span class="number">0xE3</span>;<span class="comment">//开启接收使能 </span></span><br><span class="line">    EA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07定时器</title>
      <link href="/post/19961c2.html"/>
      <url>/post/19961c2.html</url>
      
        <content type="html"><![CDATA[<h1>定时器资源</h1><p>CC2530有四个定时器TIM1~TIM4和休眠定时器</p><h2 id="TIM1">TIM1</h2><p>定时器1 是一个独立的16 位定时器，支持典型的定时/计数功能，比如输入捕获，输出比较和PWM 功能。定时器有五个独立的捕获/比较通道。每个通道定时器使用一个I/O 引脚。定时器用于范围广泛的控制和测量应用，可用的五个通道的正计数/倒计数模式将允许诸如电机控制应用的实现</p><ul><li>五个捕获/比较通道</li><li>上升沿、下降沿或任何边沿的输入捕获</li><li>设置、清除或切换输出比较</li><li>自由运行、模或正计数/倒计数操作</li><li>可被 1，8，32 或 128 整除的时钟分频器</li><li>在每个捕获/比较和最终计数上生成中断请求</li><li>DMA 触发功能</li></ul><h2 id="TIM3和TIM4">TIM3和TIM4</h2><p>定时器3 和4 是两个8 位的定时器。每个定时器有两个独立的比较通道，每个通道上使用一个I/O 引脚。</p><ul><li>两个捕获/比较通道</li><li>设置、清除或切换输出比较</li><li>时钟分频器，可以被 1，2，4，8，16，32，64，128 整除</li><li>在每次捕获/比较和最终计数事件发生时产生中断请求</li><li>DMA 触发功能</li></ul><h2 id="TIM2和休眠定时器">TIM2和休眠定时器</h2><p>定时器2 主要用于为802.15.4 CSMA-CA 算法提供定时，以及为802.15.4 MAC 层提供一般的计时功能。当定时器2 和休眠定时器一起使用时， 即使系统进入低功耗模式也会提供定时功能。定时器运行在CLKCONSTA.CLKSPD 指明的速度上。如果定时器2 和睡眠定时器一起使用，时钟速度必须设置为32 MHz，且必须使用一个外部32 kHz XOSC 获得精确结果。</p><ul><li>16 位定时器正计数提供的符号/帧周期，例如：16μs/320μs</li><li>可变周期可精确到 31.25ns</li><li>2×16 位定时器比较功能</li><li>24 位溢出计数</li><li>2×24 位溢出计数比较功能</li><li>帧首定界符捕捉功能</li><li>定时器启动/停止同步于外部 32kHz 时钟以及由睡眼定时器提供定时</li><li>比较和溢出产生中断</li><li>具有 DMA 触发功能</li><li>通过引入延迟可调整定时器值</li></ul><h1>定时器触发方式</h1><h2 id="基础知识">基础知识</h2><h3 id="定时器基础理论">定时器基础理论</h3><p><strong>（1）系统时钟频率</strong><br>时钟发生器会以恒定的时间间隔产生脉冲，这个间歇性的脉冲可以形象理解为芯片的心跳，时钟频率则是用来描述这个心跳的速率。大家通常用1s内时钟发生器产生的脉冲数量来描述时钟频率，例如“时钟频率10 MHz”表示1s内的心跳次数为10 000 000次。CC2530有两种时钟频率可供开发者使用：32MHz和16MHz。</p><p><strong>（2）分频系数</strong><br>分频是指将时钟频率降低为原来的1/N，也称为N分频。比如当时钟频率是16MHz的时候，那么2分频是8MHz。分频系数则是用1/N来表示，比如2分频的分频系数为：1/2。</p><p><strong>（3）系统时钟周期</strong><br>周期和频率的关系可以用公式表示： T = 1 / f，其中T为时钟周期，f为时钟频率。时钟周期和时钟频率成倒数关系。举个例子说明一下，时钟频率为16MHz时表示在1s内时钟发生器可以产生16 000 000个脉冲，而时钟周期则可以表示产生一个脉冲所需要的时间，即1 / 160 000 00s。</p><p><strong>（4）计数器</strong><br>计数器是定时器的核心，用于记录时钟发生器产生的脉冲数量。由于脉冲的时钟周期是恒定的，因此计算定时时间的公式是：t=nT，其中t为定时时间，n为计数次数，T为时钟周期</p><p><strong>（5）溢出</strong><br>由于计数器的范围是有限的，当计数次数超过最大值时就会产生溢出。例如当计数器的大小是16位时，那么计数范围是0~65535，因此计数次数超过65535后计数器就会产生溢出。在产生溢出后，计算器的值会从最大值变为0。</p><h3 id="定时原理">定时原理</h3><p>利用公式对频率和周期的关系作进一步的解释。我们利用f表示时钟频率，T来表示时钟周期，那么可以用此关系式来表示它们的关系：</p><ul><li>T = 1 / f （1）</li></ul><p>我们计时t秒后，假设此时计数器从0开始计数了N次（假设此时计数器没有溢出）。前面已经讲解过，时钟周期T表示心跳1次所需要时间，因此t与N的关系如下：</p><ul><li>t = N × T （2）</li></ul><p>接着，我们可以推导出：</p><ul><li>N = t / T （3）</li></ul><p>CC2530的默认系统时钟频率是16MHz（16000000Hz），其定时器1使用128分频，因此定时器的时钟频率是 16000000 / 128 Hz。</p><ul><li>根据公式（1）T = 1 / f 可以算出定时器1时钟周期为T = 128/16000000 秒。</li><li>在定时5秒的情况下（即t=5秒），根据公式（2）N = t / T，计数器的计数值N = 5 / (128/16000000) = 625000。</li></ul><h3 id="处理溢出">处理溢出</h3><p>当定时器溢出时会发生中断，此时寄存器IRCON的Bit1位会由原先的0被设置为1，因此我们只需要检测这个标志位即可判断是否发生了溢出，定时器1是一个16位定时器，每溢出一次计数65536次，所以定时5秒后将会溢出： 625000 / 65536 = 9.54，取整数，即9次。反过来，如果溢出了9次，我们可以大约第认为时间过了5秒。</p><h2 id="查询触发（以TIM1为例）">查询触发（以TIM1为例）</h2><h3 id="实现代码">实现代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initTimer1</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    P1SEL &amp;= ~<span class="number">0x01</span>;<span class="comment">//P1_0设置为通用I/O口</span></span><br><span class="line">    P1DIR |= <span class="number">0X01</span>;<span class="comment">//配置P1_0位输出</span></span><br><span class="line">    </span><br><span class="line">initTimer1();</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (!(IRCON &amp; <span class="number">0x02</span>)) <span class="keyword">continue</span>; <span class="comment">// Timer1 interrupt not pending</span></span><br><span class="line">        </span><br><span class="line">        IRCON &amp;= ~(<span class="number">0x02</span>); <span class="comment">// Clear timer1 interrupt flag</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (++Counter &lt; <span class="number">9</span>) <span class="keyword">continue</span>;  <span class="comment">// ~5 second</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">else</span> Counter = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        P1_0 = ~ P1_0;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">initTimer1</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">  T1CTL = <span class="number">0x0D</span>; <span class="comment">// Tick frequency/128, </span></span><br><span class="line">                <span class="comment">// Free-running, repeatedly count from 0x0000 to 0xFFFF</span></span><br><span class="line"></span><br><span class="line">  T1STAT= <span class="number">0x21</span>; <span class="comment">// T1 counter-overflow interrupt flag, writing a 1 has no effect.</span></span><br><span class="line">                <span class="comment">// T1 channel 0 interrupt flag, writing a 1 has no effect.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="相关寄存器">相关寄存器</h3><h4 id="T1CTL定时器-1-控制寄存器">T1CTL定时器 1 控制寄存器</h4><p><img src="https://s2.loli.net/2023/10/15/xKE6TH4B2tv3pRF.png" alt="image-20231014201132513"></p><h4 id="T1STAT-定时器-1-状态寄存器">T1STAT 定时器 1 状态寄存器</h4><p><img src="https://s2.loli.net/2023/10/15/DjcF8564x2rhnVf.png" alt="image-20231014201147911"></p><h4 id="中断标志寄存器">中断标志寄存器</h4><p><img src="https://s2.loli.net/2023/10/15/suDbLHtm8GOp5wA.png" alt="image-20231014201440093"></p><h2 id="中断触发（以TIM3为例）">中断触发（以TIM3为例）</h2><h3 id="实现代码-2">实现代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;74LS164_8LED.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> counter_g = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> y,x;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(y=<span class="number">1000</span>;y&gt;<span class="number">0</span>;y--)</span><br><span class="line">      <span class="keyword">for</span>(x=<span class="number">30</span>;x&gt;<span class="number">0</span>;x--);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">initTimer3</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    T3CTL = <span class="number">0xE8</span>;<span class="comment">//128分频 溢出中断屏蔽开</span></span><br><span class="line"></span><br><span class="line">    T3IE = <span class="number">1</span>;   <span class="comment">// 定时器3中断使能</span></span><br><span class="line">    EA = <span class="number">1</span>;       <span class="comment">// 中断总允许</span></span><br><span class="line"></span><br><span class="line">    T3CTL |= <span class="number">0x10</span>; <span class="comment">// 开启中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    initTimer3();</span><br><span class="line">    P1SEL &amp;= ~<span class="number">0x01</span>;<span class="comment">//P1_0设置为通用I/O口</span></span><br><span class="line">    P1DIR |= <span class="number">0X01</span>;<span class="comment">//配置P1_0位输出</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  Timer3 interrupt service function </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector = T3_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">Timer3_ISR</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// ~5s</span></span><br><span class="line">    <span class="keyword">if</span> (++counter_g == <span class="number">2441</span>) &#123;</span><br><span class="line">        counter_g = <span class="number">0</span>;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i &gt; <span class="number">10</span>) i = <span class="number">0</span>;</span><br><span class="line">        P1_0 = ~ P1_0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关寄存器-2">相关寄存器</h3><h4 id="T3CTL定时器3控制寄存器">T3CTL定时器3控制寄存器</h4><p><img src="https://s2.loli.net/2023/10/15/BTCHki2Vdm68Y4I.png" alt="image-20231014202000375"></p><h4 id="定时器3中断使能">定时器3中断使能</h4><p><img src="https://s2.loli.net/2023/10/15/dv6EsqpoGFr5Xeg.png" alt="image-20231014202039918"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06串口、时钟</title>
      <link href="/post/1e952c6f.html"/>
      <url>/post/1e952c6f.html</url>
      
        <content type="html"><![CDATA[<h1>预备知识</h1><ol><li><p>CC2530在正常运行的时候需要一个高频时钟信号和一个低频的时钟信号</p><p>高频时钟信号，主要供给CPU，保证程序的运行。</p><p>低频时钟信号，主要供给看门狗、睡眠定时器等偏上外设。</p></li><li><p>CC2530时钟信号的来源：</p><ul><li><p>高频信号有2个，芯片内部的16M RC电路；外接的32M石英晶振</p></li><li><p>低频信号也有2个来源，芯片内部的32K RC电路，外接的32.768K石英晶振。</p></li></ul></li><li><p>CC2530芯片默认上电的时候，是内部的2个RC电路作为高频和低频的时钟来源。</p><ul><li>如果使用串口，特别是无线通信的时候，必须要用32M的石英晶振作为高频时钟来源。</li></ul></li><li><p>高频时钟源特点：</p><ul><li><p>2高频时钟源可以同时起振产生高频时钟信号；</p></li><li><p>2个低频时钟源，某一时刻只能有1个起振，并且起振的这个时钟源供给CC2530.</p></li></ul></li></ol><h1>系统时钟转换</h1><blockquote><p>系统高频时钟源切换的步骤：</p><ol><li><p>让2个高频时钟源起振（SLEEPCMD）</p></li><li><p>等待目标时钟源振荡稳定（SLEEPSTA ）</p></li><li><p>延时一小段时间63us</p></li><li><p>不分频输出（CLKCONCMD  ）</p></li><li><p>选中目标高频时钟源作为系统主时钟（CLKCONCMD ）</p></li><li><p>确认一下当前工作的系统时钟是不是所选的高频时钟（CLKCONSTA）</p></li></ol></blockquote><h2 id="配置实现">配置实现</h2><blockquote><p>1、让SLEEPCMD的第2位为0；</p><p>2、SLEEPSTA寄存器的第6位为1表示32M 时钟源稳定</p><p>3、超过63微秒延时</p><p>4、把寄存器CLKCONCMD的低3位 设置为000，表示不分频输出</p><p>5、把寄存器CLKCONCMD的第6位 清0，设置32M作为系统主时钟</p><p>6、如果读CLKCONSTA这个寄存器的第6位为0，表示32M的时钟源已经作为了当前的系统主时钟，程序可以往下运行了。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Init32M</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   SLEEPCMD &amp;= <span class="number">0xFB</span>;<span class="comment">//1111 1011 开启2个高频时钟源</span></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">0</span>==(SLEEPSTA &amp; <span class="number">0x40</span>));<span class="comment">// 0100 0000 等待32M稳定</span></span><br><span class="line">   delayus();</span><br><span class="line">   CLKCONCMD &amp;= <span class="number">0xF8</span>;<span class="comment">//1111 1000 不分频输出</span></span><br><span class="line">   CLKCONCMD &amp;= <span class="number">0XBF</span>;<span class="comment">//1011 1111 设置32M作为系统主时钟</span></span><br><span class="line">   <span class="keyword">while</span>(CLKCONSTA &amp; <span class="number">0x40</span>); <span class="comment">//0100 0000 等待32M成功成为当前系统主时钟</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关寄存器">相关寄存器</h2><h3 id="SLEEPCMD寄存器">SLEEPCMD寄存器</h3><p><img src="https://s2.loli.net/2023/10/15/Z76iSMNoHEF14ga.png" alt="image-20231014110046294"></p><h3 id="SLEEPSTA寄存器">SLEEPSTA寄存器</h3><p><img src="https://s2.loli.net/2023/10/15/em6kidWb9ZJB2Ua.png" alt="image-20231014110331259"></p><h3 id="CLKCONCMD寄存器">CLKCONCMD寄存器</h3><p>系统时钟的源既可以用 16 MHzRC 振荡器，也可以采用 32 MHz晶振。时钟的控制使用CLKCONCMD寄存器执行</p><blockquote><p>PCON.IDLE在默认状态下处于供电模式</p><p>如果当进入供电模式（设置 PCON.IDLE）且 CLKCONCMD.OSC = 0 时，自动变为 32 MHz。</p><p>如果当进入供电模式设置了 PCON.IDLE 且 CLKCONCMD.OSC = 1，它继续运行在 16 MHz。</p></blockquote><p><img src="https://s2.loli.net/2023/10/15/Cr1xNLaBeSbTUKE.png" alt="image-20231014110623799"></p><h3 id="CLKCONSTA寄存器">CLKCONSTA寄存器</h3><p>CLKCONSTA 寄存器是一个只读的寄存器，用于获得当前时钟状态</p><p><img src="https://s2.loli.net/2023/10/15/hp2eIlgf8sq7HaV.png" alt="image-20231014111105250"></p><h1>串口通信</h1><h2 id="配置实现-2">配置实现</h2><blockquote><p>初始化配置：</p><ol><li><p>指定串口的IO位置;</p></li><li><p>相应IO配置成偏上外设功能:</p></li><li><p>8个数据位、1个停止位、无流控、无校验确立。</p></li><li><p>波特率:</p></li><li><p>开CPU中断、对应串口接收中断:</p></li></ol><p>中断配置：</p><ol><li>清除接收中断标志位</li><li>接收数据</li><li>等待发送完成</li><li>清除发送完成标志位</li></ol></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">USART_Init</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//串口0的备用位置1配置成波特率9600</span></span><br><span class="line">  PERCFG &amp;= <span class="number">0xFE</span>;       <span class="comment">//1111 1110 选中串口0的的备用位置1</span></span><br><span class="line"></span><br><span class="line">  P0SEL  |= <span class="number">0x0C</span>;       <span class="comment">//0000 1100 P0_2 p0_3为片上外设功能</span></span><br><span class="line">  </span><br><span class="line">  U0CSR |= <span class="number">0Xc0</span>;</span><br><span class="line">  </span><br><span class="line">  U0GCR = <span class="number">8</span>;</span><br><span class="line">  U0BAUD= <span class="number">59</span>;</span><br><span class="line"></span><br><span class="line">  EA = <span class="number">1</span>;</span><br><span class="line">  URX0IE = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector=URX0_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">USART0_INT</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    URX0IF=<span class="number">0</span>;<span class="comment">//串口0来数据的标志位，硬件会置1，我们软件要清0</span></span><br><span class="line">    ch=U0DBUF;<span class="comment">//从接受寄存器里取字节存入变量ch</span></span><br><span class="line">    </span><br><span class="line">    U0DBUF=ch;<span class="comment">//把变量ch里的值赋给串口0发送数据寄存器</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">0</span>==UTX0IF);<span class="comment">//等待发送完成</span></span><br><span class="line">    UTX0IF=<span class="number">0</span>;<span class="comment">//发送完成标志位，硬件置1，软件清0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关寄存器-2">相关寄存器</h2><h3 id="引脚映射">引脚映射</h3><p><img src="https://s2.loli.net/2023/10/15/YR8doQmgkzt1O4q.png" alt="image-20231014113243742"></p><p><img src="https://s2.loli.net/2023/10/15/GQawJz43nt7BT8o.png" alt="image-20231014113433811"></p><h3 id="PERCFG寄存器">PERCFG寄存器</h3><p><img src="https://s2.loli.net/2023/10/15/i9W87LQvVreUOqj.png" alt="image-20231014113548563"></p><h3 id="U0CSR寄存器">U0CSR寄存器</h3><p>U0CSR是USART0控制和状态寄存器，其各个位的作用如下：</p><p>（1）Bit[7]表示USART模式，值为0表示SPI模式，值为1表示UART模式。</p><p>（2）Bit[6]表示是否启用UART接收器，值为0表示禁用接收器，值为1表示启动接收器。</p><p>（3）Bit[5]表示SPI 主机或者从机模式，值为0表示SPI主模式，值为1表示SPI从模式。</p><p>（4）Bit[4]表示UART 帧的停止位错误状态，值为0表示无错误，值为1表示有错误。</p><p>（5）Bit[3]表示UART奇偶错误状态，值为0无错误，值为1表示有错误。</p><p>（6）Bit[2]表示传送字节状态，值为0表示没有收到字节，值为1表示准备好接收字节。</p><p>（7）Bit[1]表示传送字节状态，值为0表示字节没有被传送，值为1表示写到数据缓存寄存器的最后字节被传送。</p><p>（8）Bit[0]，USART传送/接收主动状态、在 SPI 从模式下该位等于从模式选择，0：USART 空闲 ，1：USART 忙碌。</p><p><img src="https://s2.loli.net/2023/10/15/eruv6VXPFlLThks.png" alt="image-20231014114722135"></p><h3 id="波特率配置">波特率配置</h3><p><img src="https://s2.loli.net/2023/10/15/RzDMI5vbtyCUo6Y.png" alt="image-20231014114757525"></p><h3 id="IEN0中断使能寄存器">IEN0中断使能寄存器</h3><p><img src="https://s2.loli.net/2023/10/15/nfzcHeaFubLwX32.png" alt="image-20231014115155885"></p><h3 id="其他中断相关寄存器">其他中断相关寄存器</h3><p>URX0IF是串口0 RX中断标志寄存器，1用于USART0接收中断标志位。</p><p><img src="https://s2.loli.net/2023/10/15/q5dnQrIWLx8oO4S.png" alt="image-20231014115710010"></p><p>UTX0IF是USART0的TX中断标志标志寄存器，值为0表示无中断未决，值为1表示中断未决。</p><p><img src="https://s2.loli.net/2023/10/15/aXP1CfGqNtwm427.png" alt="image-20231014115651003"></p><p>U0DBUF是USART0的缓存寄存器，用于接收或发送数据时的缓存。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05外部中断</title>
      <link href="/post/32098b11.html"/>
      <url>/post/32098b11.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>中断初始化配置步骤：</p><ol><li><p>IO口初始化配置</p></li><li><p>开启中断总允许EA</p></li><li><p>打开某个IO口的中断允许</p></li><li><p>打开IO口的某一位的中断允许</p></li><li><p>配置该位的中断触发方式</p></li></ol><p>中断函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector = PxINT_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> 函数名(<span class="type">void</span>)&#123;&#125;</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://s2.loli.net/2023/09/27/DsBgjyQCTIkolm9.png" alt="image-20230927151133992"></p><h1>中断配置寄存器</h1><h2 id="IENx中断使能寄存器">IENx中断使能寄存器</h2><p><img src="https://s2.loli.net/2023/09/27/5bJzVMLYXPsBaQe.png" alt="image-20230927151945997"></p><p><img src="https://s2.loli.net/2023/09/27/sz9St38drYcfwJL.png" alt="image-20230927151707935"></p><p><img src="https://s2.loli.net/2023/09/27/9T81qlsQHixCeoF.png" alt="image-20230927151729874"></p><blockquote><p>如果使能P0口中断，可直接使用<code>P0IE = 1</code>，但是使能P1/P2口中断，不能直接对单独的某一位进行操作，需要进行或操作开启，如<code>IEN2 |= 0x10; // 0001 0000 相当于P1IE=1</code></p></blockquote><h2 id="PxIEN-通用-I-O-中断">PxIEN 通用 I/O 中断</h2><p>通用 I/O 引脚设置为输入后，可以用于产生中断。中断可以设置在外部信号的上升或下降沿触发。P0、P1或 P2 端口都有中断使能位</p><p><img src="https://s2.loli.net/2023/09/27/mRaCQBN8H37xjkb.png" alt="image-20230927152159630"></p><h2 id="PICTL-中断边缘寄存器">PICTL 中断边缘寄存器</h2><p><img src="https://s2.loli.net/2023/09/27/Er8IYtsPJaTiAcb.png" alt="image-20230927152314064"></p><h2 id="PxIFG中断状态标志寄存器">PxIFG中断状态标志寄存器</h2><p>当中断条件发生在 I/O 引脚之一上面，P0-P2 中断标志寄存器 P0IFG、P1IFG 或 P2IFG 中相应的中断状态标志将设置为 1。不管引脚是否设置了它的中断使能位，中断状态标志都被设置。当中断已经执行，中断状态标志被清除，该标志写入 0。</p><p>【硬件置1，软件清0】</p><p><img src="https://s2.loli.net/2023/09/27/UKeM4kglxrsqWnC.png" alt="image-20230927152543051"></p><h2 id="IO口中断状态标志">IO口中断状态标志</h2><p><img src="https://s2.loli.net/2023/09/27/5Iobrwg4ASp3CBH.png" alt="image-20230927155024657"></p><p><img src="https://s2.loli.net/2023/09/27/Ib4xshSr3aUdVyc.png" alt="image-20230927155039070"></p><h1>中断服务函数</h1><p><code>#pragma vector = PxINT_VECTOR</code></p><p>PxINT_VECTOR：需要根据自己选择的中断口自行改动（0,1,2）</p><blockquote><p>其他部分不要改动</p></blockquote><p><code>__interrupt void 函数名(void)&#123;   //清除中断标志   PxIFG=0;   PxIF=0;&#125;</code></p><blockquote><p>自己根据需求编写函数名，然后根据打开的中断IO口，进行标志位清零</p></blockquote><h1>中断样例</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  </span><br><span class="line">   P0SEL &amp;= ~<span class="number">0x20</span>;<span class="comment">//P0_5设置为通用I/O口 1101 1111</span></span><br><span class="line">   P0DIR &amp;= ~<span class="number">0x20</span>;<span class="comment">//P0_5设置为输入</span></span><br><span class="line">   P0INP &amp;= ~<span class="number">0x20</span>;<span class="comment">//P0_5设置为上下拉</span></span><br><span class="line">   P2INP &amp;= ~<span class="number">0X20</span>;<span class="comment">//P0_5设置为上拉  </span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//1.打开中断总允许</span></span><br><span class="line">   EA=<span class="number">1</span>;</span><br><span class="line">   <span class="comment">//2.打开P0口中断允许</span></span><br><span class="line">   P0IE = <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">   P1IE如果要设置为1，不能直接用P1IE = 1，不能直接使用位操作</span></span><br><span class="line"><span class="comment">   应该使用 IEN2 |= 0x10; // 0001 0000 相当于P1IE=1</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//3.打开组内的某一位中断允许</span></span><br><span class="line">   P0IEN |= <span class="number">0x20</span>;<span class="comment">//P0_5中断打开 0010 0000</span></span><br><span class="line">   <span class="comment">//4.设置触发方式</span></span><br><span class="line">   PICTL |=<span class="number">0x01</span>;<span class="comment">//把P0这一组配置成下降沿触发</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> vector = P0INT_VECTOR</span></span><br><span class="line">__interrupt <span class="type">void</span> <span class="title function_">P0_ISR</span><span class="params">(<span class="type">void</span>)</span>&#123; <span class="comment">//P0_ISR为函数名，可自行定义</span></span><br><span class="line">   <span class="keyword">if</span>(P0IFG &amp; <span class="number">0x20</span>)<span class="comment">//判断P0_5是否发生中断</span></span><br><span class="line">   &#123;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//清除中断标志 </span></span><br><span class="line">   P0IFG=<span class="number">0</span>;</span><br><span class="line">   P0IF=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04基本IO口操作</title>
      <link href="/post/7ee0eaf2.html"/>
      <url>/post/7ee0eaf2.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>CC2530端口资源：三个端口，表示为 P0、P1 和 P2。P0 和 P1 是完全的 8 位端口，而 P2 仅有 5 位可用</p><p>CC2530的IO口的一些功能：</p><ol><li><p>通用IO口、外设IO口（定时器、USART、ADC）</p></li><li><p>输入引脚、输出引脚</p></li><li><p>当输入时，上拉、下拉、高阻态（三态）</p></li></ol><p>寄存器简略介绍：</p><ol><li><p>PxSEL 置0为通用I/O口，置1为专用功能</p></li><li><p>PxDIR 置0为输入模式，置1为输出模式</p></li><li><p>PxINP 置0为上/下拉模式，置1位三态模式（高阻态）</p><ul><li><p>1.对应P1INP和P0INP来说，0~7位均满足上述规则</p></li><li><p>2.对于P2INP来说，0 ~ 4位满足上述规则，5 ~ 7为专用功能，即5、6、7分别用来控制P0、P1、P2组端口的上下拉模式（0上拉、1下拉）</p></li></ul></li></ol></blockquote><h1>端口配置寄存器</h1><h2 id="PxSEL寄存器">PxSEL寄存器</h2><p>寄存器 PxSEL，其中 x 为端口的标号 0~2，用来设置端口的每个引脚为通用 I/O（0） 或者是外部设备I/O（1）。</p><blockquote><p>默认上电后为普通IO口上拉输入</p></blockquote><img src="https://s2.loli.net/2023/09/23/qaPclfu1OUJ29hw.png" alt="image-20230916220122903" style="zoom:80%;" /><p><img src="https://s2.loli.net/2023/09/23/Mg6nxRThp1mW7iO.png" alt="image-20230916220334606"></p><p>P2组只有5个IO口，但是P2_1和P2_2是用于下载程序用的，所以这两个IO不需要配置</p><p>因此P2SEL的低3位分别对应P2_0、P2_3 、P2_4</p><h2 id="PxDIR寄存器">PxDIR寄存器</h2><p>在任何时候，要改变一个端口引脚的方向，就使用寄存器 PxDIR 来设置每个端口引脚为输入或输出</p><p><img src="https://s2.loli.net/2023/09/23/A1ywNqUPOkLecEt.png" alt="image-20230916220858280"></p><blockquote><p>如果使用输出功能，则不需要使用PxINP寄存器</p></blockquote><h2 id="PxINP寄存器">PxINP寄存器</h2><p>设置通用IO端口的输入模式：上拉、下拉或三态（高阻态）</p><ol><li><p>选择输入端口是否为高阻态</p><ul><li><p>使用P0INP、P1INP以及P2INP的0~4位</p></li><li><p>需要注意的是，P1_0 和 P1_1 没有上拉/下拉功能</p></li></ul></li></ol><p><img src="https://s2.loli.net/2023/09/23/E7ox5wPZdumyAiV.png" alt="image-20230916221847315"></p><p><img src="https://s2.loli.net/2023/09/23/zJEhPkLuT63tfRn.png" alt="image-20230916221914713"></p><ol start="2"><li><p>如果选择了上下拉模式，使用P2INP的5~7位确定到底为上拉还是下拉</p><ul><li><p>P2_5：确定P0口</p></li><li><p>P2_6：确定P1口</p></li><li><p>P2_7：确定P2口</p></li></ul></li></ol><p><img src="https://s2.loli.net/2023/09/23/cqBEOy9gvVHfDTY.png" alt="image-20230916222013276"></p><h1>寄存器使用</h1><blockquote><p>对某一位置1，使用或运算【|】</p><p>对某一位置0，使用与运算【&amp;】</p></blockquote><p>例1：设置P1_0口为通用<strong>输出</strong>IO口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P1SEL &amp;= ~<span class="number">0x01</span>;   <span class="comment">//P1.0设置为通用I/O口</span></span><br><span class="line">P1DIR |= <span class="number">0x01</span>;    <span class="comment">//P1.0设置为输出</span></span><br></pre></td></tr></table></figure><p>例2：设置P0_6口为通用<strong>上拉输入</strong>IO口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">P0SEL &amp;= ~<span class="number">0x40</span>;<span class="comment">//P0.6设置为通用I/O口</span></span><br><span class="line"></span><br><span class="line">P0DIR &amp;= ~<span class="number">0x40</span>;<span class="comment">//P0.6设置为输入</span></span><br><span class="line"></span><br><span class="line">P0INP &amp;= ~<span class="number">0x40</span>;<span class="comment">//P0.6设置为上下拉模式</span></span><br><span class="line">P2INP &amp;= ~<span class="number">0x20</span>;<span class="comment">//P0.6设置为上拉输入</span></span><br></pre></td></tr></table></figure><p>例3：结合例1和例2来实现监测外部P0_6口的高低电平，高电平点亮LED灯（P1_0）</p><p>实验现象：拔出跳线帽灯亮，插上跳线帽灯灭</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  PxSEL 置0为通用I/O口，置1为专用功能</span></span><br><span class="line"><span class="comment">  PxDIR 置0为输入模式，置1为输出模式</span></span><br><span class="line"><span class="comment">  PxINP 置0为上/下拉模式，置1位三态模式（高阻态）</span></span><br><span class="line"><span class="comment">    1.对应P1INP和P0INP来说，0~7位均满足上述规则</span></span><br><span class="line"><span class="comment">    2.对于P2INP来说，0~4位满足上述规则，5~7为专用功能，</span></span><br><span class="line"><span class="comment">    即5、6、7分别用来控制P0、P1、P2组端口的上下拉模式（0上拉、1下拉）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//寄存器上电默认置0，即普通IO口上拉输入</span></span><br><span class="line">  P1SEL &amp;= ~<span class="number">0x01</span>;   <span class="comment">//P1.0设置为通用I/O口</span></span><br><span class="line">  P1DIR |= <span class="number">0x01</span>;    <span class="comment">//P1.0设置为输出</span></span><br><span class="line"></span><br><span class="line">  P0SEL &amp;= ~<span class="number">0x40</span>;<span class="comment">//P0.6设置为通用I/O口</span></span><br><span class="line">  P0DIR &amp;= ~<span class="number">0x40</span>;<span class="comment">//P0.6设置为输入</span></span><br><span class="line">  P0INP &amp;= ~<span class="number">0x40</span>;<span class="comment">//P0.6设置为上下拉模式</span></span><br><span class="line"></span><br><span class="line">  P2INP &amp;= ~<span class="number">0x20</span>;<span class="comment">//P0.6设置为上拉输入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(P0_6 == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="comment">//监测到高电平，点亮LED</span></span><br><span class="line">      P1_0 = <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//监测到低电平，熄灭LED</span></span><br><span class="line">      P1_0 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03新建ZigBee工程</title>
      <link href="/post/178dbf17.html"/>
      <url>/post/178dbf17.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>看本文之前，确保已经安装IAR及相应的驱动</p></blockquote><h1>一、新建工程</h1><ol><li>打开IAR软件</li><li>点击【Project】-【Create New Project】</li></ol><img src="https://s2.loli.net/2023/09/19/KFHdTB3yJ2DGwmg.png" alt="image-20230910135411008" style="zoom: 80%;" /><ol start="3"><li>选择【8051】-【空工程】，然后点击ok</li></ol><p><img src="https://s2.loli.net/2023/09/19/BasLMkA7YPeFQvH.png" alt="image-20230910135454306"></p><ol start="4"><li>将新建的工程存放到一个文件夹中，并给工程命名</li></ol><p><img src="https://s2.loli.net/2023/09/19/sq5FtlOySfpHKVJ.png" alt="image-20230910135750059"></p><p><img src="https://s2.loli.net/2023/09/19/Nr1C6OWqfISaF7G.png" alt="image-20230910140105601"></p><h1>二、新建文件</h1><ol><li>新建空白文件</li></ol><p><img src="https://s2.loli.net/2023/09/19/a4AgPeC6m7s1JoF.png" alt="image-20230910140151521"></p><ol start="2"><li>在空白文件界面中，按下Ctrl+S，或者点击左上角的保存选项</li><li>给保存的文件命名为***.c文件</li></ol><p><img src="https://s2.loli.net/2023/09/19/hqemDB6fRbW4QPU.png" alt="image-20230910140322936"></p><ol start="4"><li>右键点击工程，点击【Add Files】</li></ol><p><img src="https://s2.loli.net/2023/09/19/LuSB2KfJgWDyQ7j.png" alt="image-20230910140410063"></p><ol start="5"><li>选择刚才添加的文件，然后点击【打开】</li></ol><p><img src="https://s2.loli.net/2023/09/19/wegUrkmbaVcMxtR.png" alt="image-20230910140511204"></p><ol start="6"><li>左侧如下图所示则表添加成功</li></ol><p><img src="https://s2.loli.net/2023/09/19/mMZfxSulFJAThrD.png" alt="image-20230910140601036"></p><ol start="7"><li>打开刚才添加的.c文件，在里面输入以下代码，然后保存</li></ol><p><img src="https://s2.loli.net/2023/09/19/9Jwt1EeCPvZmlKy.png" alt="image-20230910140803273"></p><h1>三、编译</h1><ol><li>点击【编译】图标进行编译</li></ol><p><img src="https://s2.loli.net/2023/09/19/5nmgJ4eslKUBZVQ.png" alt="image-20230910140840550"></p><ol start="2"><li>输入工作空间的名称，这里命名为test_w，然后点击保存</li></ol><p><img src="https://s2.loli.net/2023/09/19/W2nBPldGy3oXujr.png" alt="image-20230910141005711"></p><ol start="3"><li>编译结果，0错误，0警告</li></ol><p><img src="https://s2.loli.net/2023/09/19/IW4zblucPHFhqrE.png" alt="image-20230910141030264"></p><h1>四、配置工程</h1><ol><li>右键工程，选择【options】。（右键工程，就是那个图标是蓝色方块的！！！）</li></ol><p><img src="https://s2.loli.net/2023/09/19/Qdn7bjRCMG9BzUq.png" alt="image-20230910141510578"></p><ol start="2"><li>打开【Device】后面的三个点</li></ol><p><img src="https://s2.loli.net/2023/09/19/aZkCPJ8ByUVhoQT.png" alt="image-20230910141704158"></p><ol start="3"><li>找到并打开【Texas Instruments】文件，然后找到并选择【CC2530F256.i51】</li></ol><p><img src="https://s2.loli.net/2023/09/19/RhOqwp3vxktuMS9.png" alt="image-20230910141756294"></p><p><img src="https://s2.loli.net/2023/09/19/bc8TL65jSuMUa7n.png" alt="image-20230910141852672"></p><ol start="4"><li>完成第3步后，界面应该如下所示</li></ol><p><img src="https://s2.loli.net/2023/09/19/tNuZ9sA8y7aiJT5.png" alt="image-20230910141948328"></p><ol start="5"><li>在【linker】选项卡的【output】子菜单下，勾选下图所示两个地方</li></ol><p><img src="https://s2.loli.net/2023/09/19/AoaG3lntx8LcM2B.png" alt="image-20230910142052720"></p><ol start="6"><li>在【Extra Output】子菜单下，进行如下图配置</li></ol><p><img src="https://s2.loli.net/2023/09/19/vginZIK8w3rTRp6.png" alt="image-20230910144351709"></p><ol start="7"><li>在【Debugger】选项卡下，仿真方式选择下图所示的，选择成功后，点击【OK】即可</li></ol><p><img src="https://s2.loli.net/2023/09/19/vsSYIiELrbpUQH6.png" alt="image-20230910142312245"></p><h1>五、测试代码</h1><ol><li>将如下代码粘到刚才test.c文件中</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iocc2530.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delay</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> i,j;</span><br><span class="line">     <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line">         <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">30</span>;j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">     P1DIR |=<span class="number">0X01</span>;</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       P1_0=<span class="number">0</span>;</span><br><span class="line">       delay();</span><br><span class="line">       P1_0=<span class="number">1</span>;</span><br><span class="line">       delay();</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>编译</li><li>下载</li></ol><p><img src="https://s2.loli.net/2023/09/19/yrKQjAE8WPlteZT.png" alt="image-20230910142853503"></p><ol start="4"><li>点击下图所示图标，让程序运行</li></ol><p><img src="https://s2.loli.net/2023/09/19/wYFh1L2aNzke7BH.png" alt="image-20230910142945959"></p><ol start="5"><li>看到开发板的灯闪烁即开发板正常</li></ol><p><img src="https://s2.loli.net/2023/09/19/PjaxuyWSJ2sHh5v.png" alt="image-20230910143303992"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02驱动安装</title>
      <link href="/post/43a8b3f1.html"/>
      <url>/post/43a8b3f1.html</url>
      
        <content type="html"><![CDATA[<h1>仿真器驱动</h1><ol><li>右键此电脑，选择【管理】-【设备管理器】</li><li>在其他设备中找到改驱动，鼠标右键，点击更新驱动程序</li></ol><p><img src="https://s2.loli.net/2023/09/19/AzT8VQNd7BybqgK.png" alt="image-20230910105314679"></p><ol start="3"><li>选择【浏览我的电脑移查找驱动程序】</li></ol><p><img src="https://s2.loli.net/2023/09/19/E8zMht64VPWnCdT.png" alt="image-20230910105524061"></p><ol start="4"><li>浏览路径，选择下图所示文件夹</li></ol><p><img src="https://s2.loli.net/2023/09/19/g3S9WJMsnLiDBlP.png" alt="image-20230910105620505"></p><ol start="5"><li>勾选包含子文件夹，点击下一步进行安装</li></ol><p><img src="https://s2.loli.net/2023/09/19/lAyJYHS9ifsB5FV.png" alt="image-20230910105634876"></p><ol start="6"><li>安装成功效果</li></ol><p><img src="https://s2.loli.net/2023/09/19/BnYSXLtu2qCT1DI.png" alt="image-20230910105709389"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01IAR-8051安装</title>
      <link href="/post/5fe4c01.html"/>
      <url>/post/5fe4c01.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>新版安装教程：<a href="https://zhuanlan.zhihu.com/p/535315364?utm_id=0">IAR EW for 8051 简介与安装</a></p><p>新版软件注册：<a href="https://zhuanlan.zhihu.com/p/535068284?">IAR EW for 8051 软件注册 - 知乎</a></p><p>这个新版的我也放到网盘里面了，自己自行选择安装</p></blockquote><h1>一、下载IAR-8051</h1><p>链接：<a href="https://pan.baidu.com/s/1mYwSQvSjAiSzltrEbK3yAw?pwd=43cd">https://pan.baidu.com/s/1mYwSQvSjAiSzltrEbK3yAw?pwd=43cd</a><br>提取码：43cd</p><h1>二、安装IAR-8051</h1><ol><li><p><strong>以管理员身份运行</strong><code>EW8051-EV-8103-Web.exe</code></p></li><li><p>一路全选next，只到下图所示页面，其中的name和company随意填，license从注册机中获得</p></li></ol><p><img src="https://s2.loli.net/2023/09/12/DkT3OdAcoIqr428.png" alt="image-20230909195331146"></p><ol start="3"><li>以管理员身份运行注册机【关闭电脑声音…】</li><li>将生成的license复制到安装界面中，然后点击<code>next</code></li></ol><p><img src="https://s2.loli.net/2023/09/12/gSO7lhcQMKTvwYt.png" alt="image-20230909195548498"></p><ol start="5"><li>将license key复制到安装界面对位置，然后就可以关闭注册机了</li></ol><p><img src="https://s2.loli.net/2023/09/12/pRGcH6QXua7fd9Z.png" alt="image-20230909195745559"></p><ol start="6"><li>安装界面继续下一步，可以在下图所示界面更改安装路径</li></ol><p><img src="https://s2.loli.net/2023/09/12/7x3dwJLCoVIhABp.png" alt="image-20230909200001465"></p><ol start="7"><li><p>继续下一步，知道安装成功</p></li><li><p>安装成功后，不会创建桌面快捷方式，这时需要到开始菜单栏中找到， 然后直接拖到桌面即可</p></li></ol><p><img src="https://s2.loli.net/2023/09/12/sUi26Z5ryexGo3S.png" alt="image-20230909200334131"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ZigBee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266连接阿里云</title>
      <link href="/post/ce10d9fe.html"/>
      <url>/post/ce10d9fe.html</url>
      
        <content type="html"><![CDATA[<h1>一、注册、登录阿里云</h1><h2 id="1-注册账号、登录阿里云">1.注册账号、登录阿里云</h2><p>具体过程略…</p><h2 id="2-打开控制台">2.打开控制台</h2><img src="https://s2.loli.net/2023/04/09/9dAl4priOTnE5Sz.png" alt="image-20230307185032886" style="zoom: 80%;" /><h2 id="3-搜索物联网平台">3.搜索物联网平台</h2><p><img src="https://s2.loli.net/2023/04/09/7GuJUXHTgId4Yqp.png" alt="image-20230307185137833"></p><h2 id="4-进入物联网平台，开通公共实例">4.进入物联网平台，开通公共实例</h2><img src="https://s2.loli.net/2023/04/09/Z4nWeQvtjIwYk3c.png" alt="image-20230307185320814" style="zoom:60%;" /><h1>二、创建产品、添加设备</h1><h2 id="1-创建产品">1.创建产品</h2><p>（1）开通后，进入公共实例，在设备管理菜单下找到产品，然后点击创建产品</p><p><img src="https://s2.loli.net/2023/04/09/pTRJS7FHIoKb3rk.png" alt="image-20230307185657292"></p><p>（2）在新建产品页面，输入【产品名称】、所属品类选择【自定义品类】、WiFi方式连接，其他选项默认</p><img src="https://s2.loli.net/2023/04/09/yD4JwAouXUNY6Rn.png" alt="image-20230307185903632" style="zoom:80%;" /><p>（3）点击确定-&gt;查看产品详情</p><img src="https://s2.loli.net/2023/04/09/sdOPpRCbiNhFjvU.png" alt="image-20230307191927072" style="zoom: 50%;" /><h2 id="2-添加功能模块">2.添加功能模块</h2><p>（1）点击【查看产品详情】后进入新页面，找到并点击【功能定义】</p><img src="https://s2.loli.net/2023/04/09/N8lvgBZSGejwPr4.png" alt="image-20230307192351475" style="zoom: 60%;" /><p>（2）点击编辑草稿</p><img src="https://s2.loli.net/2023/04/09/ZsqbUiIMlYCXaH8.png" alt="image-20230307192425929" style="zoom:50%;" /><p>（3）点击【添加自定义功能】</p><img src="https://s2.loli.net/2023/04/09/PwYZumlaDjAN15T.png" alt="image-20230307192509801" style="zoom:50%;" /><p>（4）这里以“开关”为例进行操作</p><img src="https://s2.loli.net/2023/04/09/K2dakWxHCyjU3Gh.png" alt="image-20230307192802758" style="zoom: 80%;" /><img src="https://s2.loli.net/2023/04/09/8RbXzuna76k5pY9.png" alt="image-20230307193026959" style="zoom:67%;" /><p><img src="https://s2.loli.net/2023/04/09/C6hqlQNpAHW48BZ.png" alt="image-20230307193123189"></p><p>（5）添加成功后如果需要其他功能，继续点击【添加自定义功能】添加其他功能</p><p><img src="https://s2.loli.net/2023/04/09/8vXHiGoZCRxwyj6.png" alt="image-20230307193229212"></p><p>（6）确定需要功能添加完后，点击【发布上线】</p><img src="https://s2.loli.net/2023/04/09/SA4QgrpiLHRsnBe.png" alt="image-20230307195523577" style="zoom:67%;" /><p><img src="https://s2.loli.net/2023/04/09/r278Bgn6tXhqx39.png" alt="image-20230307195557383"></p><h2 id="3-添加设备">3.添加设备</h2><p>（1）在左侧导航栏找到【设备】，点击进入</p><p><img src="https://s2.loli.net/2023/04/09/1wGB4JoSq69fLEY.png" alt="image-20230307195637816"></p><p>（2）点击【添加设备】，输入信息</p><img src="https://s2.loli.net/2023/04/09/1EqwtXveSilLg7W.png" alt="image-20230307195814858" style="zoom: 67%;" /><p>（3）点击【确定】后，在下个窗口继续点击【完成】</p><img src="https://s2.loli.net/2023/04/09/6Yux1aPNkm7ZBDR.png" alt="image-20230307195921928" style="zoom:67%;" /><p>（4）添加成功后如下图所示</p><p><img src="https://s2.loli.net/2023/04/09/qMA86LFTayPvD9n.png" alt="image-20230307200142453"></p><h1>三、ESP8266固件烧录</h1><blockquote><p>烧录所需资源</p><p>链接：<a href="https://pan.baidu.com/s/1TsdqrG8J2jgWOyJGn-KJrw?pwd=u3il">https://pan.baidu.com/s/1TsdqrG8J2jgWOyJGn-KJrw?pwd=u3il</a><br>提取码：u3il</p></blockquote><p><img src="https://s2.loli.net/2023/04/09/Mkc6LSexz5tqBn1.png" alt="image-20230307200620751"></p><h2 id="1-打开烧录工具进行烧录">1.打开烧录工具进行烧录</h2><img src="https://s2.loli.net/2023/04/09/wXMaqFEJjiN6epR.png" alt="image-20230307201314854" style="zoom:50%;" /><p><img src="https://s2.loli.net/2023/04/09/bqVaClF3xpUdXy8.png" alt="image-20230307201307109"></p><p>先点击【ERASE】,等完成后，再点击【START】进行烧录</p><p>烧录实际可能比较慢，耐心等待进度条跑完</p><blockquote><p>出现提示弹出显示<code>3-run stub fail</code>，可能事端口选择错误或波特率错误（115200与1152000注意）</p></blockquote><h2 id="2-打开串口助手测试">2.打开串口助手测试</h2><p>通过安信可的调试工具，发送单独的AT指令，查看回显数据，判断是否正常</p><p><img src="https://s2.loli.net/2023/06/09/kPvpUIZLjhw91RY.png" alt="image-20230609212125573"></p><h1>四、实现代码</h1><h2 id="参数获取">参数获取</h2><p>程序里面需要获取的参数如下图所示</p><p><img src="https://s2.loli.net/2023/06/09/PKzUp5w3OXb2tiT.png" alt="image-20230609213334729"></p><p>MQTT参数：获取方式如下图所示，找到对应的设备，复制参数</p><p><img src="https://s2.loli.net/2023/06/09/bsmeJNLkIXOyd8p.png" alt="image-20230609213455599"></p><p>topic：获取方式如下图所示，其中<code>$&#123;deviceName&#125;</code>需要替换为设备名称（记住是设备名称而不是产品名称）</p><p><img src="https://s2.loli.net/2023/06/09/qEzhw7FPKBv1nca.png" alt="image-20230609213619158"></p><p>标识符：在创建产品时，添加功能时写的标识符</p><p><img src="https://s2.loli.net/2023/06/09/mepdlJog5szaN49.png" alt="image-20230609213814028"></p><h2 id="示例代码">示例代码</h2><p><a href="https://github.com/lucasZyh/CSDN_Share/tree/master/ESP8266%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91">ESP8266连接阿里云</a></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YOLOv5入门</title>
      <link href="/post/8f7af20d.html"/>
      <url>/post/8f7af20d.html</url>
      
        <content type="html"><![CDATA[<h1>模型检测</h1><h2 id="关键参数">关键参数</h2><p>weights:训练好的模型文件</p><p><img src="https://s2.loli.net/2023/08/04/oa26WxRbpOulsjd.png" alt="image-20230803192833654"></p><p>source: 检测的目标，可以是单张图片、文件夹、屏幕或者摄像头等</p><p><img src="https://s2.loli.net/2023/08/04/vDXuewdCyjgbOmT.png" alt="image-20230803192903522"></p><p>conf-thres: 置信度闯值，越低框越多，越高框越少</p><p>iou-thres: IOU闻值，越低框越少，越少框越多</p><h2 id="torch-hub检测方法">torch.hub检测方法</h2><h3 id="安装Jupyter">安装Jupyter</h3><p>命令行输入以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple jupyterlab</span><br><span class="line">conda install ipykernel</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/04/ujOibdkeUm7Kty5.png" alt="image-20230803193551027"></p><p>激活环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m ipykernel install --name yolov5</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/04/2tCvNBxlIfuSEcw.png" alt="image-20230803200817611"></p><h3 id="新建Jupyter文件">新建Jupyter文件</h3><p><code>hub_detect.ipynb</code></p><p><img src="https://s2.loli.net/2023/08/04/JU7yYPvfcjkCtAI.png" alt="image-20230803193329230"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"></span><br><span class="line"><span class="comment">#Model</span></span><br><span class="line">model = torch.hub.load(<span class="string">&quot;./&quot;</span>,<span class="string">&quot;yolov5s&quot;</span>,source= <span class="string">&quot;local&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Images</span></span><br><span class="line">img = <span class="string">&quot;./data/images/zidane.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inference</span></span><br><span class="line">results = model(img)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Results</span></span><br><span class="line">results.show()</span><br></pre></td></tr></table></figure><blockquote><p>注意运行环境，在下yolov5</p><p><img src="https://s2.loli.net/2023/08/04/PDQeNRkM8dFsgxW.png" alt="image-20230803200936030"></p></blockquote><h1>数据集构建</h1><p>视频放在data02文件夹下</p><h2 id="抽取视频帧">抽取视频帧</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment">#%%</span></span><br><span class="line"><span class="comment"># 打开视频文件</span></span><br><span class="line">video = cv2.VideoCapture(<span class="string">&quot;./BVN.mp4&quot;</span>)</span><br><span class="line"><span class="comment"># 读取一帧</span></span><br><span class="line">ret, frame = video.read()</span><br><span class="line"></span><br><span class="line">plt.imshow(frame)</span><br><span class="line"></span><br><span class="line">plt.imshow(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))</span><br><span class="line"></span><br><span class="line">video = cv2.VideoCapture(<span class="string">&quot;./BVN.mp4&quot;</span>)</span><br><span class="line">num = <span class="number">0</span>         <span class="comment"># 计数器</span></span><br><span class="line">save_step = <span class="number">30</span>  <span class="comment"># 间隔帧</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ret, frame = video.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    num += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> num % save_step == <span class="number">0</span>:</span><br><span class="line">        cv2.imwrite(<span class="string">&quot;./images/&quot;</span> + <span class="built_in">str</span>(num) + <span class="string">&quot;.jpg&quot;</span>, frame)</span><br></pre></td></tr></table></figure><h2 id="安装标准工具labelimg">安装标准工具labelimg</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple labelimg</span><br></pre></td></tr></table></figure><h2 id="使用labelimg">使用labelimg</h2><ul><li><p>终端输入<code>labelimg</code></p></li><li><p>打开需要标注的文件夹<code>images</code></p></li></ul><p><img src="https://s2.loli.net/2023/08/04/SVpb4JK6nEjwWIX.png" alt="image-20230803225027177"></p><ul><li>设置保存路径</li></ul><p><img src="https://s2.loli.net/2023/08/04/E9HwMChfKo3dn4W.png" alt="image-20230803225658417"></p><ul><li>点击下图的标志，将保存格式改为YOLO</li></ul><p><img src="https://s2.loli.net/2023/08/04/dsUTL6XtZC3IirM.png" alt="image-20230803225332505"></p><ul><li>开启自动保存</li></ul><p><img src="https://s2.loli.net/2023/08/04/OEzagWBwFb5qf7K.png" alt="image-20230803225752233"></p><ul><li>开始标注，鼠标右键点击<code>Create RectBox</code></li></ul><p><img src="https://s2.loli.net/2023/08/04/JUP8kFAmwOGd2pB.png" alt="image-20230803225938948"></p><ul><li>框出两个人物，并命名</li></ul><p><img src="https://s2.loli.net/2023/08/04/b8LkISMJe7ZQXw1.png" alt="image-20230803230054984"></p><ul><li><p>切换下一张图片，继续标准（快捷键A下一张，D下一张，W创建RectBox）</p></li><li><p>标准完成后，文件夹内容如图所示</p></li></ul><p><img src="https://s2.loli.net/2023/08/04/ODVJFfdLhPxI23M.png" alt="image-20230803232028650"></p><h1>模型训练</h1><h2 id="调整文件命名">调整文件命名</h2><blockquote><p>命名严格一致，不能改</p></blockquote><p><img src="https://s2.loli.net/2023/08/04/QswFx3GkNUIHfAg.png" alt="image-20230803232326057"></p><h2 id="文件调整">文件调整</h2><p><img src="https://s2.loli.net/2023/08/04/82gMhXWpPmydfnq.png" alt="image-20230803232806766"></p><p><img src="https://s2.loli.net/2023/08/04/hqfRsaSo1dZ7e4P.png" alt="image-20230803232740636"></p><h2 id="设置yaml文件">设置yaml文件</h2><ol><li>复制coco128.yaml文件，并命名为bvn.yaml</li></ol><p><img src="https://s2.loli.net/2023/08/04/QMdqW9HFkzmosDS.png" alt="image-20230803233606669"></p><ol start="2"><li>修改bvn.yaml</li></ol><p><img src="https://s2.loli.net/2023/08/04/vKNTynGoRDBzMW1.png" alt="image-20230803234334745"></p><ol start="3"><li><a href="http://xn--train-3u3h158j.py">修改train.py</a></li></ol><blockquote><p>文件名改为bvn</p><p>workers设置为1</p></blockquote><p><img src="https://s2.loli.net/2023/08/04/DHg4owjKM35iGch.png" alt="image-20230803233922856"></p><p><img src="https://s2.loli.net/2023/08/04/4lCWrEm28wVQnUB.png" alt="image-20230804002329930"></p><ol start="4"><li><a href="http://xn--train-tj4o143b.py">运行train.py</a>，训练模型</li></ol><blockquote><p>中间肯能需要下载一写东西，比较慢，慢慢等（可以挂个梯子）</p><p>报错，查看下面的报错解决</p></blockquote><p><img src="https://s2.loli.net/2023/08/04/vh3uyWaTC1Z4JtS.png" alt="image-20230804010009222"></p><h2 id="报错解决">报错解决</h2><h3 id="页面文件太小，无法完成操作">页面文件太小，无法完成操作</h3><p>训练过程中，发生下图所示的报错，同时pycharm崩溃</p><p><img src="https://s2.loli.net/2023/08/04/bTvj4G2wRXO8LWH.png" alt="image-20230804000941294"></p><h4 id="1-更改虚拟内存">1. 更改虚拟内存</h4><ol><li>进入高级系统设置，应该都会进，就不说过程了</li></ol><p><img src="https://s2.loli.net/2023/08/04/l5NcLKCW3j7BmRM.png" alt="image-20230804002758867"></p><ol start="2"><li>设置虚拟内存大小</li></ol><p><img src="https://s2.loli.net/2023/08/04/348O1HEboWalQZx.png" alt="image-20230804003012617"></p><h4 id="2-减小占用内容大小">2. 减小占用内容大小</h4><ol><li>新建一个fixNvPe.py程序</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Simple script to disable ASLR and make .nv_fatb sections read-only</span></span><br><span class="line"><span class="comment"># Requires: pefile  ( python -m pip install pefile )</span></span><br><span class="line"><span class="comment"># Usage:  fixNvPe.py --input path/to/*.dll</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> pefile</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">args</span>):</span><br><span class="line">    failures = []</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> glob.glob( args.<span class="built_in">input</span>, recursive=args.recursive ):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n---\nChecking <span class="subst">&#123;file&#125;</span>...&quot;</span>)</span><br><span class="line">        pe = pefile.PE(file, fast_load=<span class="literal">True</span>)</span><br><span class="line">        nvbSect = [ section <span class="keyword">for</span> section <span class="keyword">in</span> pe.sections <span class="keyword">if</span> section.Name.decode().startswith(<span class="string">&quot;.nv_fatb&quot;</span>)]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nvbSect) == <span class="number">1</span>:</span><br><span class="line">            sect = nvbSect[<span class="number">0</span>]</span><br><span class="line">            size = sect.Misc_VirtualSize</span><br><span class="line">            aslr = pe.OPTIONAL_HEADER.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE</span><br><span class="line">            writable = <span class="number">0</span> != ( sect.Characteristics &amp; pefile.SECTION_CHARACTERISTICS[<span class="string">&#x27;IMAGE_SCN_MEM_WRITE&#x27;</span>] )</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;Found NV FatBin! Size: <span class="subst">&#123;size/<span class="number">1024</span>/<span class="number">1024</span>:<span class="number">0.2</span>f&#125;</span>MB  ASLR: <span class="subst">&#123;aslr&#125;</span>  Writable: <span class="subst">&#123;writable&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> (writable <span class="keyword">or</span> aslr) <span class="keyword">and</span> size &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;- Modifying DLL&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> args.backup:</span><br><span class="line">                    bakFile = <span class="string">f&quot;<span class="subst">&#123;file&#125;</span>_bak&quot;</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;- Backing up [<span class="subst">&#123;file&#125;</span>] -&gt; [<span class="subst">&#123;bakFile&#125;</span>]&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> os.path.exists( bakFile ):</span><br><span class="line">                        <span class="built_in">print</span>( <span class="string">f&quot;- Warning: Backup file already exists (<span class="subst">&#123;bakFile&#125;</span>), not modifying file! Delete the &#x27;bak&#x27; to allow modification&quot;</span>)</span><br><span class="line">                        failures.append( file )</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        shutil.copy2( file, bakFile)</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="built_in">print</span>( <span class="string">f&quot;- Failed to create backup! [<span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>], not modifying file!&quot;</span>)</span><br><span class="line">                        failures.append( file )</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                <span class="comment"># Disable ASLR for DLL, and disable writing for section</span></span><br><span class="line">                pe.OPTIONAL_HEADER.DllCharacteristics &amp;= ~pefile.DLL_CHARACTERISTICS[<span class="string">&#x27;IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE&#x27;</span>]</span><br><span class="line">                sect.Characteristics = sect.Characteristics &amp; ~pefile.SECTION_CHARACTERISTICS[<span class="string">&#x27;IMAGE_SCN_MEM_WRITE&#x27;</span>]</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    newFile = <span class="string">f&quot;<span class="subst">&#123;file&#125;</span>_mod&quot;</span></span><br><span class="line">                    <span class="built_in">print</span>( <span class="string">f&quot;- Writing modified DLL to [<span class="subst">&#123;newFile&#125;</span>]&quot;</span>)</span><br><span class="line">                    pe.write( newFile )</span><br><span class="line">                    pe.close()</span><br><span class="line">                    <span class="built_in">print</span>( <span class="string">f&quot;- Moving modified DLL to [<span class="subst">&#123;file&#125;</span>]&quot;</span>)</span><br><span class="line">                    os.remove( file )</span><br><span class="line">                    shutil.move( newFile, file )</span><br><span class="line">                <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                    <span class="built_in">print</span>( <span class="string">f&quot;- Failed to write modified DLL! [<span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>]&quot;</span>)</span><br><span class="line">                    failures.append( file )</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n\nDone!&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(failures) &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;***WARNING**** These files needed modification but failed: &quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> failure <span class="keyword">in</span> failures:</span><br><span class="line">            <span class="built_in">print</span>( <span class="string">f&quot; - <span class="subst">&#123;failure&#125;</span>&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parseArgs</span>():</span><br><span class="line">    parser = argparse.ArgumentParser( description=<span class="string">&quot;Disable ASLR and make .nv_fatb sections read-only&quot;</span>, formatter_class=argparse.ArgumentDefaultsHelpFormatter )</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--input&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;Glob to parse&quot;</span>, default=<span class="string">&quot;*.dll&quot;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--backup&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;Backup modified files&quot;</span>, default=<span class="literal">True</span>, required=<span class="literal">False</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--recursive&#x27;</span>, <span class="string">&#x27;-r&#x27;</span>, default=<span class="literal">False</span>, action=<span class="string">&#x27;store_true&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;Recurse into subdirectories&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> parser.parse_args()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">###############################</span></span><br><span class="line"><span class="comment"># program entry point</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    args = parseArgs()</span><br><span class="line">    main( args )</span><br></pre></td></tr></table></figure><ol start="2"><li>安装pefile</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pefile</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/04/5v7gKUi8cCFQLr3.png" alt="image-20230804001137635"></p><ol start="3"><li>终端运行fixNvPe.py文件</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python fixNvPe.py --<span class="built_in">input</span> E:\kaifa\Anaconda3\envs\yolov5\lib\site-packages\torch\lib\cudnn_adv_infer64_8.dll</span><br></pre></td></tr></table></figure><blockquote><p>intput后面的路径，就是报错那里，后面给的路径</p></blockquote><p>出现下图所示表示执行完毕</p><p><img src="https://s2.loli.net/2023/08/04/imrNnT25YyKS83f.png" alt="image-20230804001547119"></p><h3 id="RuntimeError-CUDA-out-of-memory">RuntimeError: CUDA out of memory.</h3><p>解决方式：</p><p>换小模型</p><p><img src="https://s2.loli.net/2023/08/04/qudTk1fUhEmOjxF.png" alt="image-20230804004234793"></p><h3 id="AttributeError-‘FreeTypeFont’-object-has-no-attribute-‘getsize’">AttributeError: ‘FreeTypeFont’ object has no attribute ‘getsize’</h3><p><img src="https://s2.loli.net/2023/08/04/btrcFHJz51nxl9S.png" alt="image-20230804004739957"></p><p>这是因为安装了新版本的 <a href="https://so.csdn.net/so/search?q=Pillow&amp;spm=1001.2101.3001.7020">Pillow</a> (10)，<code>pip install tf-models-official</code>删除了该<code>getsize </code>功能，降级到 Pillow 9.5 解决了该问题</p><p>解决方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple Pillow==<span class="number">9.5</span></span><br></pre></td></tr></table></figure><h2 id="查看日志">查看日志</h2><p>终端输入<code>tensorboard --logdir runs</code></p><p><img src="https://s2.loli.net/2023/08/04/1jNKYVU8PBZpWXH.png" alt="image-20230804010221749"></p><h2 id="训练效果检测">训练效果检测</h2><p>命令行输入以下命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py  --weights runs/train/exp/weights/best.pt --source data02/BVN.mp4 --view-img</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/04/OoCkfYQMpARDU6P.png" alt="image-20230804011029138"></p><p><img src="https://s2.loli.net/2023/08/04/gWlLAaukw9dyIix.png" alt="image-20230804011220424"></p><p><img src="https://s2.loli.net/2023/08/04/y3FRg8LYm4Tw9vt.png" alt="image-20230804011303814"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLOv5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YOLOv5可视化界面</title>
      <link href="/post/10c40159.html"/>
      <url>/post/10c40159.html</url>
      
        <content type="html"><![CDATA[<h1>Pyside6可视化界面</h1><h2 id="安装Pyside6">安装Pyside6</h2><p>激活之前的虚拟环境<code>yolov5</code></p><p>在该环境的终端输入以下命令</p><p><img src="https://s2.loli.net/2023/08/05/RGhTCl3SOt9B6ap.png" alt="image-20230804130702828"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyside6</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/05/fYo59MEDgvq6enx.png" alt="image-20230804130800817"></p><p>输入<code>where python</code>找到当前使用的Python的路径</p><p><img src="https://s2.loli.net/2023/08/05/gkTOwcj7NyJimG3.png" alt="image-20230804130822697"></p><p>找到该路径下的designer.exe文件（/Lib/site-packages/PySide6/designer.exe），然后发送到桌面创建快捷方式</p><p><img src="https://s2.loli.net/2023/08/05/AXG2JFcD8CSnWdB.png" alt="image-20230804131040967"></p><h2 id="UI设计">UI设计</h2><ol><li>打开designer</li><li>选择Main Window</li></ol><p><img src="https://s2.loli.net/2023/08/05/xjB2ctbUlWIyRVJ.png" alt="image-20230804135928424"></p><ol start="3"><li>移除菜单栏</li></ol><p><img src="https://s2.loli.net/2023/08/05/Q2DSYpf5gAycdL6.png" alt="image-20230804140001249"></p><ol start="4"><li>拖两个label个一个line进来</li></ol><p><img src="https://s2.loli.net/2023/08/05/UjpDL1efzQB8xNV.png" alt="image-20230804140218860"></p><ol start="5"><li>拖两个button进入，并进行命名</li></ol><p><img src="https://s2.loli.net/2023/08/05/JQ8ftFZNDTyXY9M.png" alt="image-20230804140548127"></p><ol start="6"><li>调整界面，填写两个label里面文件，将界面调小一些</li></ol><p><img src="https://s2.loli.net/2023/08/05/ygaid3Ke7z8A9nr.png" alt="image-20230804140817179"></p><ol start="7"><li>居中对齐，同时勾选scaledContents</li></ol><p><img src="https://s2.loli.net/2023/08/05/KxRVdLBOiGfuscJ.png" alt="image-20230804140925757"></p><ol start="8"><li>元素名称更改</li></ol><p><img src="https://s2.loli.net/2023/08/05/yxNVSJDbWOvlXiH.png" alt="image-20230804141119743"></p><ol start="9"><li>Ctrl+S保存，保存到上一部分训练数据集的文件内</li></ol><p><img src="https://s2.loli.net/2023/08/05/wTciaE3nUed8HlK.png" alt="image-20230804141230616"></p><h2 id="设置Pyside6-uic-工具">设置Pyside6-uic 工具</h2><ol><li>在当前虚拟环境的Python路径下，打开<code>Scripts</code>文件夹夹，找到<code>pyside6-uic.exe</code>，记住当前路径</li></ol><p><img src="https://s2.loli.net/2023/08/05/3a8dDX64EvSLCFI.png" alt="image-20230804133419243"></p><ol start="2"><li>创建工具</li></ol><p><img src="https://s2.loli.net/2023/08/05/xfcuTwi6q5YUBdH.png" alt="image-20230804133534319"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">名称：PyUic(可自己定义)</span><br><span class="line">程序：E:\kaifa\Anaconda3\envs\yolov5\Scripts\pyside6-uic.exe</span><br><span class="line">实参：$FileName$ -o $FileNameWithoutExtension$.py</span><br><span class="line">工作目录： $FileDir$</span><br></pre></td></tr></table></figure><ol start="3"><li>使用该工具</li></ol><p>先在pycharm中打开刚才生成的ui文件</p><blockquote><p>双击打不开的话，把文件拖到右边就可以打开了</p></blockquote><p><img src="https://s2.loli.net/2023/08/05/NY2nSZXbVcuGW4q.png" alt="image-20230804141619914"></p><p>然后在【工具】选项卡下的【external tools】下，点击【PyUic】（这个名称是你刚才自己设计的）</p><p><img src="https://s2.loli.net/2023/08/05/eBaTxXCFcnNSsjL.png" alt="image-20230804133624645"></p><p>如果生成了相同文件名的.py文件，即说明设置成功</p><p><img src="https://s2.loli.net/2023/08/05/yLXeOFkUBvS3Zqa.png" alt="image-20230804141836515"></p><h2 id="编写运行程序">编写运行程序</h2><h3 id="创建模板文件base-ui-py">创建模板文件base_ui.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QPixmap, QImage</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication, QFileDialog</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> main_window <span class="keyword">import</span> Ui_MainWindow <span class="comment">#main_windows是刚才生成的ui对用的Python文件名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert2QImage</span>(<span class="params">img</span>):</span><br><span class="line">    height, width, channel = img.shape</span><br><span class="line">    <span class="keyword">return</span> QImage(img, width, height, width * channel, QImage.Format_RGB888)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(QMainWindow, Ui_MainWindow):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">    window = MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure><p>编译运行，弹出窗口说明成功</p><h3 id="编写内部具体功能的代码">编写内部具体功能的代码</h3><p>讲解视频：<a href="https://www.bilibili.com/video/BV1dP411f7kX/?share_source=copy_web&amp;vd_source=08ffec12a130bb99e9aac8670b5b9c2f&amp;t=740">YOLOv5 Pyside6可视化界面</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QPixmap, QImage</span><br><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QMainWindow, QApplication, QFileDialog</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QTimer</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> main_window <span class="keyword">import</span> Ui_MainWindow  <span class="comment"># main_windows是刚才生成的ui对用的Python文件名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert2QImage</span>(<span class="params">img</span>):</span><br><span class="line">    height, width, channel = img.shape</span><br><span class="line">    <span class="keyword">return</span> QImage(img, width, height, width * channel, QImage.Format_RGB888)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(QMainWindow, Ui_MainWindow):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, self).__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.model = torch.hub.load(<span class="string">&quot;./&quot;</span>, <span class="string">&quot;custom&quot;</span>, path=<span class="string">&quot;runs/train/exp/weights/best.pt&quot;</span>, source=<span class="string">&quot;local&quot;</span>)</span><br><span class="line">        self.video = <span class="literal">None</span></span><br><span class="line">        self.timer = QTimer()</span><br><span class="line">        self.timer.setInterval(<span class="number">1</span>)</span><br><span class="line">        self.bind_slots()  <span class="comment"># 绑定槽函数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">image_pred</span>(<span class="params">self, file_path</span>): <span class="comment"># 图片检测</span></span><br><span class="line">        results = self.model(file_path) </span><br><span class="line">        image = results.render()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> convert2QImage(image)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open_image</span>(<span class="params">self</span>): <span class="comment"># 打开图片</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;点击了检测图片按钮&quot;</span>)</span><br><span class="line">        self.timer.stop()  <span class="comment"># 停止视频检测</span></span><br><span class="line">        file_path = QFileDialog.getOpenFileName(self, <span class="built_in">dir</span>=<span class="string">&quot;./data02/images/train&quot;</span>, <span class="built_in">filter</span>=<span class="string">&quot;*.jpg;*.png;*.jpeg&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> file_path[<span class="number">0</span>]:</span><br><span class="line">            file_path = file_path[<span class="number">0</span>]</span><br><span class="line">            qimage = self.image_pred(file_path)</span><br><span class="line">            self.<span class="built_in">input</span>.setPixmap(QPixmap(file_path))</span><br><span class="line">            self.output.setPixmap(QPixmap.fromImage(qimage))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">video_pred</span>(<span class="params">self</span>):  <span class="comment"># 视频检测</span></span><br><span class="line">        ret, frame = self.video.read()</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">            self.timer.stop()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)</span><br><span class="line">            self.<span class="built_in">input</span>.setPixmap(QPixmap.fromImage(convert2QImage(frame)))</span><br><span class="line">            results = self.model(frame)</span><br><span class="line">            image = results.render()[<span class="number">0</span>]</span><br><span class="line">            self.output.setPixmap(QPixmap.fromImage(convert2QImage(image)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">open_video</span>(<span class="params">self</span>):  <span class="comment"># 打开视频</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;点击了检测视频！&quot;</span>)</span><br><span class="line">        file_path = QFileDialog.getOpenFileName(self, <span class="built_in">dir</span>=<span class="string">&quot;./data02&quot;</span>, <span class="built_in">filter</span>=<span class="string">&quot;*.mp4&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> file_path[<span class="number">0</span>]:</span><br><span class="line">            file_path = file_path[<span class="number">0</span>]</span><br><span class="line">            self.video = cv2.VideoCapture(file_path)</span><br><span class="line">            self.timer.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bind_slots</span>(<span class="params">self</span>):  <span class="comment"># 绑定槽函数</span></span><br><span class="line">        self.det_image.clicked.connect(self.open_image)</span><br><span class="line">        self.det_video.clicked.connect(self.open_video)</span><br><span class="line">        self.timer.timeout.connect(self.video_pred)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line"></span><br><span class="line">    window = MainWindow()</span><br><span class="line">    window.show()</span><br><span class="line"></span><br><span class="line">    app.<span class="built_in">exec</span>()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>Gradio搭建Web GUI</h1><h2 id="安装Gradio">安装Gradio</h2><p>激活之前的虚拟环境<code>yolov5</code></p><p>在该环境的终端输入以下命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple gradio</span><br></pre></td></tr></table></figure><h2 id="实现">实现</h2><p>新建<code>gradio_demo.py</code>文件</p><p>输入图片、输出图片、预测函数</p><blockquote><p>Gradio不支持实时检测</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> gradio <span class="keyword">as</span> gr</span><br><span class="line"></span><br><span class="line">model = torch.hub.load(<span class="string">&quot;./&quot;</span>, <span class="string">&quot;custom&quot;</span>, path=<span class="string">&quot;runs/train/exp/weights/best.pt&quot;</span>, source=<span class="string">&quot;local&quot;</span>)</span><br><span class="line"></span><br><span class="line">title = <span class="string">&quot;基于Gradio的YOLOv5演示项目&quot;</span></span><br><span class="line"></span><br><span class="line">desc = <span class="string">&quot;这是一个基于Gradio的YOLOv5演示项目，非常简洁，非常方便！&quot;</span></span><br><span class="line"></span><br><span class="line">base_conf, base_iou = <span class="number">0.25</span>, <span class="number">0.45</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">det_image</span>(<span class="params">img, conf_thres, iou_thres</span>):</span><br><span class="line">    model.conf = conf_thres</span><br><span class="line">    model.iou = iou_thres</span><br><span class="line">    <span class="keyword">return</span> model(img).render()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gr.Interface(</span><br><span class="line">    inputs=[<span class="string">&quot;image&quot;</span>, gr.Slider(minimum=<span class="number">0</span>, maximum=<span class="number">1</span>, value=base_conf), gr.Slider(minimum=<span class="number">0</span>, maximum=<span class="number">1</span>, value=base_iou)],</span><br><span class="line">    outputs=[<span class="string">&quot;image&quot;</span>],</span><br><span class="line">    fn=det_image,</span><br><span class="line">    title=title,</span><br><span class="line">    description=desc,</span><br><span class="line">    live=<span class="literal">True</span>,</span><br><span class="line">    examples=[[<span class="string">&quot;./data02/images/train/30.jpg&quot;</span>, base_conf, base_iou],</span><br><span class="line">              [<span class="string">&quot;./data02/images/train/60.jpg&quot;</span>, <span class="number">0.3</span>, base_iou]]</span><br><span class="line">).launch(share=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>如果想发布到网上，设置share=True参数，但是运行的时候会因为网络原因，报出下面的错误，可以通过提示的网址下载对应文件，重命名后放到相应的目录下，重新运行</p><p><img src="https://s2.loli.net/2023/08/05/wGCSU2gfdpMVLE1.png" alt="image-20230804221752389"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLOv5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YOLOv5环境配置</title>
      <link href="/post/740e640d.html"/>
      <url>/post/740e640d.html</url>
      
        <content type="html"><![CDATA[<h1>0 安装Anaconda和pycharm</h1><p>略…</p><h1>1 创建YOLOv5虚拟环境</h1><ol><li>找到安装好的Anaconda，打开Anaconda Prompt</li></ol><p><img src="https://s2.loli.net/2023/08/04/cIxaj96ok3PnHKr.png" alt="image-20230803101924719"></p><ol start="2"><li>在命令面板中输入一下代码</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n yolov5 python=<span class="number">3.8</span></span><br></pre></td></tr></table></figure><ol start="3"><li>输入y</li></ol><p><img src="https://s2.loli.net/2023/08/04/LwPa3iHYZW5VfMh.png" alt="image-20230803102327811"></p><ol start="4"><li>出现下图表示创建完成</li></ol><p><img src="https://s2.loli.net/2023/08/04/vuSCEOUj9rbmtkG.png" alt="image-20230803102701943"></p><ol start="5"><li>输入<code>activate yolov5</code>激活环境（该窗口不要关闭）</li></ol><p><img src="https://s2.loli.net/2023/08/07/saScyDgdxXbCvht.png" alt="image-20230803102913344"></p><h1>2 安装pytorch</h1><h2 id="2-1-查看电脑支持CUDA版本">2.1 查看电脑支持CUDA版本</h2><ol><li>电脑桌面右键，打开<code>NVIDIA控制面板</code></li></ol><p><img src="https://s2.loli.net/2023/08/07/mB2GzjK8UwEuMO4.png" alt="image-20230803104408122"></p><ol start="2"><li>在【帮助】菜单拦下，打开【系统信息】</li></ol><p><img src="https://s2.loli.net/2023/08/07/9omOnGSiL453zDh.png" alt="image-20230803104654479"></p><ol start="3"><li>在【组件】窗口，查看自己的CUDA支持版本</li></ol><blockquote><p>我这里最高支持11.4版本</p></blockquote><p><img src="https://s2.loli.net/2023/08/07/2VIYca8vbSEnzJM.png" alt="image-20230803104745264"></p><h2 id="2-2-下载pytorch">2.2 下载pytorch</h2><ol><li>进入<a href="https://pytorch.org/">PyTorch官网</a>，选择适合自己的版本</li></ol><blockquote><p>需要说明一下，30系列显卡，必须安装11以上的版本，10版本不再支持</p></blockquote><p><img src="https://s2.loli.net/2023/08/07/CEAJZv1g8X3PWIh.png" alt="image-20230803105038763"></p><ol start="2"><li>这里我选择安装11.3版本</li></ol><p><img src="https://s2.loli.net/2023/08/07/Xzv1tQO9V7cueHC.png" alt="image-20230803105338301"></p><ol start="3"><li>在开始之前，先将pip下载切换为国内镜像（在 pip install 后面添加 -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple%EF%BC%89">https://pypi.tuna.tsinghua.edu.cn/simple）</a></li></ol><blockquote><p>这里选择<a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/">清华源</a>，临时镜像，如果需要换成永久的，可以进清华源的官网根据提示进行切换</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple torch==<span class="number">1.12</span><span class="number">.1</span>+cu113 torchvision==<span class="number">0.13</span><span class="number">.1</span>+cu113 torchaudio==<span class="number">0.12</span><span class="number">.1</span> --extra-index-url https://download.pytorch.org/whl/cu113</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/07/jQ1T9Nhlbygqpie.png" alt="image-20230803113738501"></p><ol start="5"><li>内容有点大，耐心等待安装完成</li></ol><blockquote><p>出现successfully表示安装成功</p></blockquote><p><img src="https://s2.loli.net/2023/08/07/acS2lyI6Mq1TFHx.png" alt="image-20230803114212772"></p><h1>3 下载yolov5源码</h1><p>GitHub地址：<a href="https://github.com/ultralytics/yolov5">YOLOv5</a></p><blockquote><p>国内GitHub访问慢，可以使用Watt Toolkit软件进行加速（这个不是梯子，免费的，加速功能强大）</p></blockquote><ol><li>进入GitHub后，在右侧找到<code>releases</code>，进入下载zip(下载的v7)</li></ol><p><img src="https://s2.loli.net/2023/08/07/SQwKlC5j7py2rHx.png" alt="image-20230803120019909"></p><p><img src="https://s2.loli.net/2023/08/07/GA2z9jOvRSTp58q.png" alt="image-20230803120109208"></p><ol start="2"><li>找一个文件夹，将下载的压缩包解压出来</li></ol><p><img src="https://s2.loli.net/2023/08/07/1fiDqH9ANCIEXBp.png" alt="image-20230803120318830"></p><h1>4 PyCharm部署运行</h1><ol><li>用PyCharm打开刚才解压出来的文件夹</li></ol><p><img src="https://s2.loli.net/2023/08/07/PwvMJhXaZRl7YxK.png" alt="image-20230803122534135"></p><ol start="2"><li>先不创建虚拟环境，进入后手动添加环境</li></ol><p><img src="https://s2.loli.net/2023/08/07/SFpRwrnB5gLVO6K.png" alt="image-20230803122501998"></p><p><img src="https://s2.loli.net/2023/08/07/Y68pM7Lc4PFGkhi.png" alt="image-20230803171522945"></p><p><img src="https://s2.loli.net/2023/08/07/ZKjb9lxw8TvNB5d.png" alt="image-20230803171544230"></p><p><img src="https://s2.loli.net/2023/08/07/3hXgqnfO2s5r1Q7.png" alt="image-20230803171746039"></p><ol start="3"><li>打开<code>requirements.txt</code>文件，将下图所示的部分进行修改</li></ol><p><img src="https://s2.loli.net/2023/08/08/NFDpHfES3sGa8Kr.png" alt="image-20230803122939899"></p><ol start="4"><li>在 PyCharm打开终端，输入<code>activate yolov5</code>激活环境</li></ol><p><img src="https://s2.loli.net/2023/08/08/LyBAmdjfVx936Eq.png" alt="image-20230803123134358"></p><p><img src="https://s2.loli.net/2023/08/08/5WGn4ZDwVLX7mbh.png" alt="image-20230803123159927"></p><ol start="5"><li>安装依赖环境</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple  -r requirements.txt </span><br></pre></td></tr></table></figure><blockquote><p>安装过程中，会出现一堆warring，这个不用管</p></blockquote><p>出现下图所示内容代表安装成功</p><p><img src="https://s2.loli.net/2023/08/08/slCTn9wmutEhMVI.png" alt="image-20230803123654906"></p><ol start="6"><li>运行测试</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python detect.py</span><br></pre></td></tr></table></figure><p>到下图这一步，下载较慢，这时可以将下载地址复制下来，在浏览器上下载</p><p><img src="https://s2.loli.net/2023/08/08/d1E3cofIl2FTDS5.png" alt="image-20230803123957619"></p><p>输入Ctrl+C，结束命令行下载任务</p><p><img src="https://s2.loli.net/2023/08/08/JewrKEIBymhvXx2.png" alt="image-20230803124314690"></p><p>将刚才下载的文件放到文件夹下，然后在pycharm命令行中重新执行<code>python detect.py</code></p><p><img src="https://s2.loli.net/2023/08/08/pfbGe6kLyvaUdZH.png" alt="image-20230803124412661"></p><p>出现下图信息，表示环境搭建成功</p><p><img src="https://s2.loli.net/2023/08/08/pa4IsBnG81LMgNW.png" alt="image-20230803124535603"></p><p>打开runs文件夹夹，监测效果如图所示</p><p><img src="https://s2.loli.net/2023/08/08/ogXMku6E5L9JFBz.png" alt="image-20230803124711601"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> YOLOv5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV4环境配置</title>
      <link href="/post/bbd80310.html"/>
      <url>/post/bbd80310.html</url>
      
        <content type="html"><![CDATA[<h1>0.安装mingw64</h1><p>官网链接：<a href="https://sourceforge.net/projects/mingw-w64/files/">mingw</a></p><ol><li>安装红框标记下载免安装版本，解压可用。<br><img src="https://s2.loli.net/2023/08/20/cNEkPleyd89sAUY.png" alt="image-20230809214627758"></li><li>将解压后的mingw64\bin添加到path环境变量</li><li>cmd中输入gcc -v，出现下图所示即配置成功</li></ol><p><img src="https://s2.loli.net/2023/08/20/ixmHhQJftpv6qzw.png" alt="image-20230809214807503"></p><h1>1.下载OpenCV源码</h1><h2 id="源码下载">源码下载</h2><p>官网：<a href="https://opencv.org/releases/">Releases - OpenCV</a></p><p><img src="https://s2.loli.net/2023/08/20/K4yZDadeU1BtbhO.png" alt="image-20230808164909641"></p><p>运行下载好的exe文件，指定一下源码的存放路径</p><p>下载好的源码如下图所示</p><p><img src="https://s2.loli.net/2023/08/20/AExOUKPMi3Xrb7B.png" alt="image-20230808165216872"></p><h2 id="扩展文件下载">扩展文件下载</h2><p>下载官网：<a href="https://github.com/opencv/opencv_contrib/tags">Tags · opencv/opencv_contrib (github.com)</a></p><p>下载后解压放到OpenCV路径下</p><p><img src="https://s2.loli.net/2023/08/20/9QIF5YJEknUtsyH.png" alt="image-20230809230948205"></p><h1>2.安装CMAKE</h1><blockquote><p>已经编译好的OpenCV源码：<a href="https://pan.baidu.com/s/1NF5PElfjJT49pnpqgQy3zg?pwd=ksz0">https://pan.baidu.com/s/1NF5PElfjJT49pnpqgQy3zg?pwd=ksz0</a></p><p>如果使用我编译好的，直接跳到4.5，去配置环境变量，然后进入clion进行测试</p><p>使用的是mingw-build文件夹，可以删除除VS-build文件夹</p><p>VS-build文件夹是使用VS进行build的，那个如果不使用可以删掉（VS-build），vsbuild的文件有十几个G</p></blockquote><p>官网：<a href="https://cmake.org/download/">Download | CMake</a></p><p><img src="https://s2.loli.net/2023/08/20/SWCEMPk3Gpomgyr.png" alt="image-20230808170430046"></p><p>运行安装文件，中间需要勾选添加环境变量</p><p><img src="https://s2.loli.net/2023/08/20/Al7PhcsgeHzCqaU.png" alt="image-20230808170627223"></p><p>更改安装路径</p><p><img src="https://s2.loli.net/2023/08/20/h5bmfnTNxCiZP4U.png" alt="image-20230808170701742"></p><h1>3.ckame编译OpenCV</h1><ol><li>在OpenCV源码路径下新建一个 mingw-build文件夹</li><li>将build/bin目录下opencv_videoio_ffmpeg470_64.dll文件拷贝至sources/3rdparty/ffmpeg目录下</li><li>打卡cmake，如下图所示，选择文件路径</li></ol><p><img src="https://s2.loli.net/2023/08/20/dk4YhUVC2MRc1la.png" alt="image-20230808171506788"></p><ol start="4"><li>点击configure，在弹出的窗口中选择Mingw Makefile，编译器默认的就行</li></ol><p><img src="https://s2.loli.net/2023/08/20/YpOVqK9MG41rC7B.png" alt="image-20230808223910146"></p><ol start="5"><li>当第一次编译完后，出现红色背景的内容，勾选下图所示内容，然后继续点击configure</li></ol><p><img src="https://s2.loli.net/2023/08/20/v7RSTm6ytVQJoXd.png" alt="image-20230809211613677"></p><p><img src="https://s2.loli.net/2023/08/20/cMtibLHhljmVUDJ.png" alt="image-20230808231857217"></p><p><img src="https://s2.loli.net/2023/08/20/6L5JhU3CcnXEq8b.png" alt="image-20230809231055252"></p><ol start="6"><li>多次点击configure，直到没有红色出现</li></ol><blockquote><p>中间可能在下载时会报错</p><p>FFMPEG: Download failed: 28;“Timeout was reached”</p><p>解决方式：</p><ol><li><p>将下载链接复制下来，输入到浏览器中进行下载</p></li><li><p>打开opencv的source文件夹下的.cache文件夹中</p></li><li><p>复制没下载成功的文件的名，将在网页下载成功的文件重命名为刚才复制对的名</p></li><li><p>将重命名后的文件放到.cache文件夹下的各个文件夹中，将原始文件进行替换【确实文件放置位置的方法：下载链接中有对应的文件夹名】</p></li><li><p>重新点击configure</p></li></ol></blockquote><p><img src="https://s2.loli.net/2023/08/20/sCeU3YTlO6mohKX.png" alt="image-20230808235948300"></p><ol start="7"><li>点击generator</li></ol><p><img src="https://s2.loli.net/2023/08/20/GQj4gbXfpSmvC3u.png" alt="image-20230809000016173"></p><h1>4.安装编译文件</h1><ol><li>进入mingw-build文件夹</li><li>在路径上输入cmd，然后回车（建议直接以管理员身份运行，普通方式运行可能会出现一些报错）</li></ol><p><img src="https://s2.loli.net/2023/08/20/FQifILKvgpkPzSD.png" alt="image-20230809000210918"></p><p><img src="https://s2.loli.net/2023/08/20/7dv8fxglTS5oXqi.png" alt="image-20230809000229036"></p><ol start="3"><li>输入<code>mingw32-make -j 16</code></li></ol><blockquote><p>报错解决：</p><ol><li>如果出现 <code>error: 'recursive_mutex' in namespace 'std' does not name a type</code>，则重新下载posix版的mingw64 ，然后再在cmake中重新编译OpenCV源码</li><li>如果出现 <code>undefined reference to _Unwind_Resume'</code>之类的，以管理员身份运行cmd，重新编译</li></ol><p><img src="https://s2.loli.net/2023/08/20/xDGWoYhBgq8jeLi.png" alt="image-20230809213424554"></p><ol start="3"><li>出现之类<code>Anaconda3-/hdf5</code>的报错，不使用Anaconda3的Python环境更换其他Python环境或者直接不使用Python环境（直接在path环境变中先删除Anaconda的Python配置，更换为其他的Python或者不配置Python），重新用cmake进行编译，然后再在cmd运行</li></ol><p><img src="https://s2.loli.net/2023/08/20/xmuR8DXnTkWErPz.png" alt="image-20230810110217317"></p></blockquote><p><img src="https://s2.loli.net/2023/08/20/teaWBvmYCS5H31l.png" alt="image-20230809213446910"></p><ol start="4"><li>输入<code>mingw32-make install</code></li></ol><p><img src="https://s2.loli.net/2023/08/20/fSUetK7YzkpB3jN.png" alt="image-20230809213644437"></p><ol start="5"><li>添加环境变量，将mingw-build\bin目录添加到系统环境变量</li></ol><p><img src="https://s2.loli.net/2023/08/20/Y5P2WQiXMRasO7N.png" alt="image-20230809221112296"></p><h1>5.Clion配置使用</h1><ol><li>新建一个项目</li><li>将下面的内容复制到<code>CMakeLists.txt</code>中</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(OpenCV_DIR E:/kaifa/C/opencv/mingw-build/<span class="keyword">install</span>) <span class="comment">#这里刚才编译的OpenCV的路径</span></span><br><span class="line"><span class="keyword">find_package</span>(OpenCV REQUIRED)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(OpenCVtest <span class="variable">$&#123;OpenCV_LIBS&#125;</span>) <span class="comment">#OpenCVtest是你的项目名称</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/08/20/JNUQpa2SBcERWDq.png" alt="image-20230809215512469"></p><ol start="3"><li>运行main.cpp文件</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;iostream&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Mat img = <span class="built_in">imread</span>(<span class="string">&quot;E:/C-Project/OpenCVtest/1.jpg&quot;</span>);</span><br><span class="line">    cout &lt;&lt; img.<span class="built_in">type</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (img.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Error&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">imshow</span>(<span class="string">&quot;Lena&quot;</span>, img);</span><br><span class="line">    <span class="built_in">waitKey</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>弹出图片则表示环境配置成功</li></ol>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为云CodeArts产品体验</title>
      <link href="/post/515df8ac.html"/>
      <url>/post/515df8ac.html</url>
      
        <content type="html"><![CDATA[<h1>一、软件开发生产线使用流程</h1><h2 id="1-1-前提条件">1.1 前提条件</h2><ol><li>拥有已实名认证的帐号。若没有，请先<a href="https://support.huaweicloud.com/usermanual-account/account_id_001.html">注册帐号</a>并完成<a href="https://support.huaweicloud.com/usermanual-account/account_auth_00001.html">实名认证</a>。</li><li>已<a href="https://support.huaweicloud.com/usermanual-devcloud/devcloud_01_0002.html">购买软件开发生产线</a>。</li><li>若需要向主机中部署应用，则需要准备一台具有弹性IP的主机，可以使用已有主机，也可以<a href="https://support.huaweicloud.com/qs-ecs/ecs_02_0009.html">购买华为云弹性云服务器</a>。</li></ol><blockquote><p>我这里没有免费ESC的体验资格，所以就购买了一个按需计费的</p></blockquote><table><thead><tr><th style="text-align:center">配置分类</th><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">基础配置</td><td style="text-align:center">计费模式</td><td style="text-align:center">选择“按需计费”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">CPU架构</td><td style="text-align:center">选择“x86计算”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">规格</td><td style="text-align:center">选择“通用计算型”、2核4G或以上规格</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">镜像</td><td style="text-align:center">选择“公共镜像 &gt; CentOS &gt; CentOS 7.6 64bit(40GB)”</td></tr><tr><td style="text-align:center">网络配置</td><td style="text-align:center">弹性公网IP</td><td style="text-align:center">选择“现在购买”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">公网带宽</td><td style="text-align:center">选择“按宽带计费”</td></tr><tr><td style="text-align:center">高级配置</td><td style="text-align:center">登录凭证</td><td style="text-align:center">选择“密码”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">密码</td><td style="text-align:center">输入自定义密码</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/06/30/bndT9MP7xABJe8N.png" alt="image-20230630160417714"></p><p><img src="https://s2.loli.net/2023/06/30/BhVlLRa6oEnj7uH.png" alt="image-20230630160836924"></p><p><img src="https://s2.loli.net/2023/06/30/LV8suYEkeltcO4a.png" alt="image-20230630161021376"></p><h2 id="1-2-配置项目">1.2 配置项目</h2><p>需求管理服务是使用软件开发生产线各服务的基础，首先需要创建项目、添加项目成员，然后可以根据项目规划添加工作项</p><p>1.创建项目。</p><p><a href="https://support.huaweicloud.com/usermanual-devcloud/devcloud_01_0000.html">登录软件开发生产线</a>，单击“新建项目”。</p><p><img src="https://s2.loli.net/2023/06/30/c2NnbmYsh4ufpHq.png" alt="image-20230630162402124"></p><p>选择项目类型，输入项目名称，单击“确定”。</p><p><img src="https://s2.loli.net/2023/06/30/QnarZ2Bu1E7Rmzl.png" alt="image-20230630162421014"></p><p>2.添加项目成员</p><ul><li>进入已创建的项目，单击导航栏“设置 &gt; 通用设置 &gt; 成员管理”。</li><li>在页面右上角选择“添加成员”，或者“通过链接邀请”。</li><li>其中，添加成员的方式有从本企业用户添加、从其他项目导入用户、邀请其他企业用户，请根据实际情况选择。</li></ul><p><img src="https://s2.loli.net/2023/06/30/QAjoneIvc4rG2JY.png" alt="image-20230630162510315"></p><p>3.创建工作项</p><ul><li>进入已创建的项目，单击导航栏“工作”，选择“工作项”页签。</li><li>单击“新建”，选择工作项类型，根据实际情况输入工作项标题、优先级、处理人等信息。</li></ul><h2 id="1-3-配置代码仓库">1.3 配置代码仓库</h2><p>1.安装并配置Git客户端。（如果已经有了，请省略）</p><p>通过<a href="https://git-scm.com/download/win">Git官网</a>下载安装包，并使用默认配置安装Git客户端到本地电脑。</p><ul><li>运行Git Bash，Git Bash中输入以下命令行配置用户名和邮箱。</li></ul><p><code>git config  --global user.name &quot;您的名字&quot; git config  --global user.email &quot;您的邮箱&quot; </code></p><ul><li>输入以下命令行，生成一对SSH密钥。生成的密钥通常保存在“~/.ssh/id_rsa.pub”中。</li></ul><p><code>ssh-keygen -t rsa -C &quot;您的邮箱&quot; </code></p><ul><li>输入以下命令可显示密钥内容。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>2.创建代码仓库</p><ul><li>进入已创建的项目，单击导航栏“代码 &gt; 代码托管”</li><li>根据需要选择普通新建、按模板新建或导入外部仓库，按照页面提示输入仓库名称等基本信息，单击“确定”</li><li>代码仓库创建成功后，在仓库里列表页面单击仓库名称，可查看仓库内的文件。</li></ul><p>3.克隆/推送代码</p><ul><li><p>单击页面右上角用户名，在下拉列表中选择“个人设置”。</p></li><li><p>单击导航“代码托管 &gt; SSH密钥管理”。</p></li><li><p>单击“添加SSH密钥”，输入标题，将负责<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_1000.html#devcloud_qs_1000__li1168425195810">安装并配置Git客户端</a>中生成的密钥粘贴到文本框中，勾选同意声明，单击“确定”。</p></li><li><p>返回代码托管服务页面，单击待克隆的仓库名称，进入仓库。</p></li><li><p>单击“克隆/下载”，复制仓库SSH下载链接。</p></li><li><p>运行Git Bash，输入以下命令行，克隆云端仓库到本地。</p><p><code>git clone 您仓库的SSH下载链接 </code></p></li><li><p>在本地完成代码的编辑后，在Git Bash中依次输入以下命令行，保存代码并推送到代码仓库。</p><p><code>git add . git commit -m &quot;您对本次提交备注的信息&quot; git push origin master </code></p></li><li><p>返回代码仓库，即可查看更新后的文件。</p></li></ul><h2 id="1-4配置流水线">1.4配置流水线</h2><p><a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_1000.html#section3">软件开发生产线使用流程_软件开发生产线 CodeArts_快速入门_华为云 (huaweicloud.com)</a></p><h1>二、使用软件开发生产线快速搭建项目（ECS篇）</h1><h2 id="2-1-准备工作">2.1 准备工作</h2><ol><li>拥有已实名认证的帐号。若没有，请先<a href="https://support.huaweicloud.com/usermanual-account/account_id_001.html">注册帐号</a>并完成<a href="https://support.huaweicloud.com/usermanual-account/account_auth_00001.html">实名认证</a>。</li><li>已<a href="https://support.huaweicloud.com/usermanual-devcloud/devcloud_01_0002.html">购买软件开发生产线</a>。</li><li>已<a href="https://support.huaweicloud.com/qs-ecs/ecs_02_0009.html">购买弹性云服务器</a>，购买时的必要配置可参考下表，表中未列出的配置可根据实际情况选择。完成购买后，参考<a href="https://support.huaweicloud.com/usermanual-ecs/zh-cn_topic_0030878383.html">配置安全组规则</a>添加端口22及8080的入方向规则。</li></ol><p>配置安全规则</p><p><img src="https://s2.loli.net/2023/06/30/frKV6yXBk9m3D8C.png" alt="image-20230630164029128"></p><p><img src="https://s2.loli.net/2023/06/30/O9NtKMdJXAjgU6R.png" alt="image-20230630164044649"></p><p><img src="https://s2.loli.net/2023/06/30/pqmV5PkbQRjFZuv.png" alt="image-20230630164111459"></p><p><img src="https://s2.loli.net/2023/06/30/CtxyYkcg2WjHln5.png" alt="image-20230630164134014"></p><blockquote><p>源地址需要改成   IP地址  不然后面访问不成这个端口</p></blockquote><p><img src="https://s2.loli.net/2023/06/30/3sb94tqAPWmwuL2.png" alt="image-20230630172322604"></p><h2 id="2-2-新建项目">2.2 新建项目</h2><p>项目是使用软件开发生产线各服务的基础，创建项目后才能完成后续操作</p><ol><li><a href="https://support.huaweicloud.com/usermanual-devcloud/devcloud_01_0000.html">登录软件开发生产线</a>，单击“新建项目”</li><li>选择“Scrum”，输入项目名称“Demo”，单击“确定”</li></ol><h2 id="2-3-新建代码仓库">2.3 新建代码仓库</h2><p>代码仓库用于项目代码的版本管理，本文使用服务内置的模板“Java Web Demo”创建代码仓库</p><p>1.单击导航栏“代码 &gt; 代码托管”，进入代码托管服务</p><p>2.单击页面“普通新建”旁边的<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001489703685.png" alt="img">，选择“按模板新建”</p><p><img src="https://s2.loli.net/2023/06/30/NjSTr2GVgxb567p.png" alt="image-20230630164419415"></p><p>3.选择模板“Java Web Demo”，单击“下一步”</p><p><img src="https://s2.loli.net/2023/06/30/efWxt8jFXdACMy2.png" alt="image-20230630164502762"></p><p>4.输入代码仓库名称“Web-Demo”，单击“确定”</p><p><img src="https://s2.loli.net/2023/06/30/8RyzJvrFWICLo5l.png" alt="image-20230630164524378"></p><h2 id="2-4检查代码">2.4检查代码</h2><p>通过代码检查服务，可以对代码进行静态检查，管控代码质量</p><p>1.单击导航栏“代码 &gt; 代码检查”，进入代码检查。页面中显示自动创建的任务“Web-Demo-codecheck”。</p><p>2.单击任务所在行的“立即执行”启动任务</p><p><img src="https://s2.loli.net/2023/06/30/YqyerSREDCTUwV8.png" alt="image-20230630164619157"></p><p>3.当页面中显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001507516328.png" alt="img">时，表示任务执行成功。单击任务名称，进入任务的“概览”页面查看检查结果</p><p>若任务执行失败，请参考<a href="https://support.huaweicloud.com/codecheck_faq/codecheck_02_0002.html">代码检查常见问题</a>排查处理</p><h2 id="2-5-构建并归档软件包">2.5 构建并归档软件包</h2><p>通过编译构建服务，可将软件的源代码编译成目标文件，并把配置文件和资源文件等打包并归档到软件发布库中</p><p>1.单击导航栏“持续交付 &gt; 编译构建”，进入编译构建服务。页面中显示自动创建的任务“Web-Demo-cloudbuild”</p><p>2.单击任务所在行的<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001494026818.png" alt="img">启动任务。若出现弹窗，请确认参数设置准确后，单击“确定”</p><p><img src="https://s2.loli.net/2023/06/30/UeqTiJ9Nmy1fBcz.png" alt="image-20230630165010082"></p><p>3.当页面中显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001166942986.png" alt="img">时，表示任务执行成功。单击任务名称，进入构建历史页面，在列表中找到最新一次构建的构建编号，记录该编号。若构建失败，请参考<a href="https://support.huaweicloud.com/codeci_faq/codeci_faq_0012.html">编译构建常见问题</a>排查处理</p><p><img src="https://s2.loli.net/2023/06/30/9hz7V5oUQNs3SXC.png" alt="image-20230630165246919"></p><p><img src="https://s2.loli.net/2023/06/30/3qk9gCcU8nR4ZSA.png" alt="image-20230630165303473"></p><p>4.单击导航栏“制品仓库 &gt; 软件发布库”，进入软件发布库。在与项目名称同名的仓库中，依次进入与构建任务同名的文件夹、与构建编号同名的文件夹，即可找到生成的软件包“demoapp.jar”</p><p><img src="https://s2.loli.net/2023/06/30/zqTyO687dRCBKsH.png" alt="image-20230630165404465"></p><h2 id="2-6-部署构建包">2.6 部署构建包</h2><p>通过部署服务，可将软件发布库中的软件包部署到虚拟机，并启动运行</p><p>1.配置目标主机</p><ul><li>单击导航栏“设置 &gt; 通用设置 &gt; 基础资源管理”</li></ul><p><img src="https://s2.loli.net/2023/06/30/Qw1lAYR4Mo9pTtc.png" alt="image-20230630165604451"></p><ul><li>单击“新建主机集群”，输入集群名称“hosts”、选择操作系统“Linux”、关闭**“使用代理机接入”**开关，单击“保存”</li></ul><p><img src="https://s2.loli.net/2023/06/30/YWsC61pbBD4GFmV.png" alt="image-20230630165642273"></p><ul><li>单击“新增目标主机”，在弹框中配置以下信息，勾选同意声明后，单击“添加”</li></ul><table><thead><tr><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">主机名</td><td style="text-align:center">输入自定义主机名称。为了方便辨认，可与在<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0001.html#devcloud_qs_0001__section1339018509168">准备工作</a>中购买的ECS的名称保持一致。</td></tr><tr><td style="text-align:center">IP</td><td style="text-align:center">输入在<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0001.html#devcloud_qs_0001__section1339018509168">准备工作</a>中购买的ECS的IP。</td></tr><tr><td style="text-align:center">用户名</td><td style="text-align:center">输入“root”。</td></tr><tr><td style="text-align:center">密码</td><td style="text-align:center">输入在<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0001.html#devcloud_qs_0001__section1339018509168">准备工作</a>中购买的ECS时设置的密码。</td></tr><tr><td style="text-align:center">ssh端口</td><td style="text-align:center">输入“22”。</td></tr></tbody></table><ul><li>页面显示一条主机记录，当“连通性验证”列的值显示为“成功”，表示主机添加完成。若主机添加失败，请参考<a href="https://support.huaweicloud.com/deployman_faq/deployman_faq_0000.html">部署-常见问题-主机管理</a>排查。</li></ul><p><img src="https://s2.loli.net/2023/06/30/fJExNiUmrc6sLgV.png" alt="image-20230630165945513"></p><p>2.单击导航栏“持续交付 &gt; 部署”，进入部署服务。页面中显示自动创建的应用“Web-Demo-deploy”</p><p>3.单击<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001477191292.png" alt="img">，在下列表中选择“编辑”，进入编辑页面。</p><p><img src="https://s2.loli.net/2023/06/30/odKN6BC7zca5xml.png" alt="image-20230630170129449"></p><p>4.选择“环境管理”页签，配置主机环境。</p><p><img src="https://s2.loli.net/2023/06/30/LOu1N2gZYrpReBb.png" alt="image-20230630170247299"></p><ul><li>单击“新建环境”，输入环境名称“host-group”、选择资源类型“主机”、操作系统“Linux”，单击“保存”。</li><li>列表中新增一条环境记录，单击环境名称，在滑出的窗口中选择“资源列表”页签。</li><li>单击“导入主机”，在弹框中的下拉列表中选择创建的主机集群，并在列表中勾选主机，单击“导入”。</li><li>页面提示导入成功，关闭此窗口。</li></ul><p><img src="https://s2.loli.net/2023/06/30/vOkfZ5sta8mNcAM.png" alt="image-20230630170431052"></p><p>5.选择“参数设置”页签，参考下表配置参数。</p><table><thead><tr><th style="text-align:center">参数名</th><th style="text-align:center">参数值</th></tr></thead><tbody><tr><td style="text-align:center">host_group</td><td style="text-align:center">选择之前添加的环境名称“host-group”。</td></tr><tr><td style="text-align:center">package_url</td><td style="text-align:center">无需此参数，单击对应行<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001507836144.png" alt="img">删除。</td></tr><tr><td style="text-align:center">service_port</td><td style="text-align:center">输入“8080”。</td></tr><tr><td style="text-align:center">package_name</td><td style="text-align:center">输入“demoapp”。</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/06/30/3AOMYTW4uZrQd2B.png" alt="image-20230630170606085"></p><p>6.选择“部署步骤”页签，配置部署步骤</p><ul><li>停止SpringBoot服务：首次执行时，由于目标主机上还未有服务，执行该步骤会失败，因此不勾选“启用”选项。</li></ul><p><img src="https://s2.loli.net/2023/06/30/lAFsJ9GpIHZQYUn.png" alt="image-20230630171102278"></p><ul><li>安装JDK：修改jdk版本为“openjdk-1.8.0”。</li><li>选择部署来源：参考下表进行配置。</li></ul><table><thead><tr><th style="text-align:center">配置项</th><th style="text-align:center">值</th></tr></thead><tbody><tr><td style="text-align:center">选择源类型</td><td style="text-align:center">选择“构建任务”。</td></tr><tr><td style="text-align:center">请选择构建任务</td><td style="text-align:center">选择“Web-Demo-cloudbuild”。</td></tr><tr><td style="text-align:center">下载到主机的部署目录</td><td style="text-align:center">输入“/usr/local/${package_name}/”。</td></tr></tbody></table><p><img src="https://s2.loli.net/2023/06/30/6hWy2alV38pbkIE.png" alt="image-20230630171233086"></p><ul><li>URL健康测试：此步骤可有可无，根据需要选择是否启用（本文不勾选“启用”选项）。</li></ul><p>7.单击“保存并部署”。</p><p>若出现弹窗，请确认参数设置准确后，单击“确定”。待页面显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001485284372.png" alt="img">。若部署失败，请参照<a href="https://support.huaweicloud.com/deployman_faq/deployman_faq_00002.html">部署常见问题</a>排查</p><p><img src="https://s2.loli.net/2023/06/30/JpM9hUgxBsl3jrC.png" alt="image-20230630171429595"></p><p>8.查看部署结果</p><p>打开一个新的浏览器页面，输入访问地址“<a href="http://IP:8080/test%E2%80%9D%EF%BC%8C%E5%85%B6%E4%B8%AD%E2%80%9CIP%E2%80%9D%E4%B8%BA%5B%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C%5D(https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0001.html#devcloud_qs_0001__section1339018509168)%E4%B8%AD%E8%B4%AD%E4%B9%B0%E7%9A%84ECS%E7%9A%84IP">http://IP:8080/test”，其中“IP”为[准备工作](https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0001.html#devcloud_qs_0001__section1339018509168)中购买的ECS的IP</a></p><p>若出现以下访问结果，表示部署成功</p><p><img src="https://s2.loli.net/2023/06/30/Ds3wXafchJ4GUoe.png" alt="image-20230630172835329"></p><h2 id="2-7-配置流水线">2.7 配置流水线</h2><p>通过流水线可以将代码检查、编译构建、部署等任务串联起来，当代码发生改变时，自动触发流水线执行，实现持续交付</p><p>1.单击导航栏“持续交付 &gt; 流水线”，进入流水线服务。在“流水线”页面中显示自动创建的流水线“Web-Demo-pipeline”</p><p>2.单击<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001507996000.png" alt="img">，在下拉列表中选择“编辑”。</p><p>3.选择“任务编排”页签，配置流水线。</p><ul><li>本文暂不涉及接口测试，因此需要将接口测试任务从流水线中移除。单击任务“apitest”对应<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001505663349.png" alt="img">，在弹框中单击“确定”</li></ul><p><img src="https://s2.loli.net/2023/06/30/Rp5ZrfMyLuoEBqD.png" alt="image-20230630173502800"></p><ul><li>单击任务“deploy”，关联构建任务选择“cloudbuild”，其它配置项的值与<code>2.6部署构建包</code>中的参数设置保持一致</li></ul><p><img src="https://s2.loli.net/2023/06/30/fh9lATOLwHbxZBS.png" alt="image-20230630173547412"></p><p>4.选择“执行计划”页签，勾选“代码提交时触发”，在分支过滤下拉列表中勾选分支“master”</p><p><img src="https://s2.loli.net/2023/06/30/Oj1bMBGD3s2Sw6f.png" alt="image-20230630173719977"></p><p>5.单击“保存”，退出编辑</p><p>6.进入部署服务，编辑部署步骤，在“停止SpringBoot服务”中勾选“启用”</p><p><img src="https://s2.loli.net/2023/06/30/IzomeKdU6OQkDgf.png" alt="image-20230630173800715"></p><p>7.进入代码仓库，搜索并打开文件“TestController.java”。单击<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001212200723.png" alt="img">，将“hello world”修改为“hello world again”，输入提交信息后单击“确定”。</p><p><img src="https://s2.loli.net/2023/06/30/TSc7XxqwR9EG4WN.png" alt="image-20230630173958823"></p><p><img src="https://s2.loli.net/2023/06/30/wL9mN2y7OPliFvz.png" alt="image-20230630174059782"></p><p>8.返回流水线页面，可看到流水线正在运行中。当页面显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001455867782.png" alt="img">时，重新访问页面“<a href="http://IP:8080/test%E2%80%9D%EF%BC%8C%E8%AE%BF%E9%97%AE%E7%BB%93%E6%9E%9C%E5%B0%86%E5%8F%98%E4%B8%BA%E4%B8%8B%E5%9B%BE%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9">http://IP:8080/test”，访问结果将变为下图显示内容</a></p><p><img src="https://s2.loli.net/2023/06/30/G7ol8sJkwXyHZ2h.png" alt="image-20230630184255341"></p><h2 id="2-8-释放资源">2.8 释放资源</h2><ol><li>删除项目。<ul><li>进入项目“设置 &gt; 通用设置 &gt; 基本信息”页面。</li><li>单击“删除项目”，在弹框中输入项目名称，单击“删除”。</li></ul></li><li>删除ECS。<ul><li>登录<a href="https://console.huaweicloud.com/ecm/?region&amp;locale=zh-cn#/ecs/manager/vmList">弹性云服务器控制台</a>。在列表中找到待删除的ECS，单击“更多”，在下拉列表中选择“删除”。</li><li>勾选弹框中的所有选项，单击“是”。</li></ul></li></ol><h1>三、使用软件开发生产线快速搭建项目（CCE篇）</h1><h2 id="3-1-准备工作">3.1 准备工作</h2><p>1.拥有已实名认证的帐号。若没有，请先<a href="https://support.huaweicloud.com/usermanual-account/account_id_001.html">注册华为帐号并开通华为云</a>并完成<a href="https://support.huaweicloud.com/usermanual-account/account_auth_00001.html">实名认证</a></p><p>2.已<a href="https://support.huaweicloud.com/usermanual-devcloud/devcloud_01_0002.html">购买软件开发生产线</a></p><p>3.已<a href="https://support.huaweicloud.com/qs-cce/cce_qs_0008.html">购买CCE集群</a>，购买时的必要配置请参考下表，表中未列出的配置保持默认即可</p><p>集群购买</p><table><thead><tr><th style="text-align:center">配置分类</th><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">基础配置</td><td style="text-align:center">计费模式</td><td style="text-align:center">选择“按需计费”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">集群版本</td><td style="text-align:center">建议选择最新版本。</td></tr><tr><td style="text-align:center">网络配置</td><td style="text-align:center">网络模型</td><td style="text-align:center">选择“VPC网络”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">容器网段</td><td style="text-align:center">勾选“自动设置网段”。</td></tr></tbody></table><blockquote><p>集群创建时间稍微有一些长，大概5分钟左右</p></blockquote><p>节点配置</p><p>单击创建的集群，进入集群控制台。在左侧菜单栏选择节点管理，单击右上角“创建节点”，在弹出的页面中配置节点的参数。</p><table><thead><tr><th style="text-align:center">配置分类</th><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">计算配置</td><td style="text-align:center">计费模式</td><td style="text-align:center">选择“按需计费”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">节点类型</td><td style="text-align:center">选择“弹性云服务器-虚拟机”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">节点规格</td><td style="text-align:center">选择2核8G及以上规格即可。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">容器引擎</td><td style="text-align:center">选择“Docker”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">操作系统</td><td style="text-align:center">选择“公共镜像 &gt; CentOS 7.6”</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">登录方式</td><td style="text-align:center">选择“密码”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">密码</td><td style="text-align:center">输入自定义密码。</td></tr><tr><td style="text-align:center">网络配置</td><td style="text-align:center">节点IP</td><td style="text-align:center">选择“随机分配”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">弹性公网IP</td><td style="text-align:center">选择“暂不使用”。</td></tr></tbody></table><p>4.已在容器镜像服务中<a href="https://support.huaweicloud.com/usermanual-swr/swr_01_0014.html#section1">创建组织</a>，本文中创建的组织名称为“web-demo”（这里需要自己随便取一个，我取的是yh-demo）</p><ul><li>登录<a href="https://console.huaweicloud.com/swr/#/swr/dashboard">容器镜像服务控制台</a>。</li><li>单击控制台左上角的<img src="https://support.huaweicloud.com/usermanual-swr/zh-cn_image_0000001453972201.png" alt="img">，选择区域和项目。</li><li>在左侧导航栏单击“组织管理”，进入组织管理页面。</li><li>单击页面右上角的“创建组织”按钮，在弹框中填写“组织名称”，然后单击“确定”</li></ul><h2 id="3-2-新建项目">3.2 新建项目</h2><p>项目是使用软件开发生产线各服务的基础，创建项目后才能完成后续操作</p><ol><li><a href="https://support.huaweicloud.com/usermanual-devcloud/devcloud_01_0000.html">登录软件开发生产线</a>，单击“新建项目”</li><li>选择“Scrum”，输入项目名称“Demo”，单击“确定”</li></ol><h2 id="3-3-新建代码仓库">3.3 新建代码仓库</h2><p>代码仓库用于项目代码的版本管理，本文使用服务内置的模板“Java Web Demo”创建代码仓库。</p><ol><li>单击导航栏“代码 &gt; 代码托管”，进入代码托管服务</li><li>单击页面“普通新建”旁边的<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001489703685.png" alt="img">，选择“按模板新建”<br><img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001507568786.png" alt="img"></li><li>选择模板“Java Web Demo”，单击“下一步”</li><li>输入代码仓库名称“Web-Demo”，单击“确定”</li></ol><h2 id="3-4-准备Dockerfile">3.4 准备Dockerfile</h2><p>Dockerfile是用于构建镜像的文本文件，其中包含了构建镜像所需的指令和说明。了解Dockerfile更详细说明，请参见<a href="https://docs.docker.com/engine/reference/builder/">Docker官网</a></p><ol><li><p>单击仓库名称，进入代码仓库</p></li><li><p>单击文件列表上方“新建”，在下拉列表中选择“新建文件”<br><img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001558689849.png" alt="img"></p></li><li><p>输入文件名Dockerfile，文件详情输入以下命令行</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>-alpine</span><br><span class="line"><span class="keyword">ADD</span><span class="language-bash"> target /demo</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> ./target/demoapp.jar /demo</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>,<span class="string">&quot;-jar&quot;</span>,<span class="string">&quot;/demo/demoapp.jar&quot;</span>]</span></span><br></pre></td></tr></table></figure></li><li><p>输入备注信息，单击“确定”</p></li></ol><h2 id="3-5-构建并推送镜像">3.5 构建并推送镜像</h2><p>通过编译构建任务将软件的源代码编译成镜像，并把镜像推送归档到容器镜像服务（SWR）中</p><ol><li><p>单击导航栏“持续交付 &gt; 编译构建”，进入编译构建服务。</p></li><li><p>单击“新建任务”，配置任务信息。</p><ul><li><p>基本信息：配置以下信息，单击“下一步”</p><table><thead><tr><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">任务名称</td><td style="text-align:center">输入自定义名称（本文中为“Web-Demo-docker”）。</td></tr><tr><td style="text-align:center">源码源</td><td style="text-align:center">选择“Repo”。</td></tr><tr><td style="text-align:center">源码仓库</td><td style="text-align:center">选择“Web-Demo”。</td></tr><tr><td style="text-align:center">分支</td><td style="text-align:center">选择“master”。</td></tr></tbody></table></li><li><p>构建模板：选择“空白构建模板”，单击“下一步”。</p></li></ul></li><li><p>配置构建步骤。</p><ul><li>单击“点击添加构建步骤”，在步骤列表中找到“Maven构建”，单击“添加”。</li></ul><p><img src="https://s2.loli.net/2023/07/01/aNGIY6yo2jgfCMi.png" alt="image-20230701140220916"></p><ul><li>单击“添加步骤”，在步骤列表中找到“制作镜像并推送到SWR仓库”，单击“添加”。</li></ul><p><img src="https://s2.loli.net/2023/07/01/xkZHrQKXRj5oeSh.png" alt="image-20230701140257267"></p><ul><li><p>参照下表配置步骤“制作镜像并推送到SWR仓库”（表中未涉及的字段保持默认配置即可）。</p><table><thead><tr><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">组织</td><td style="text-align:center">输入在<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0002.html#devcloud_qs_0002__section1339018509168">准备工作</a>中创建的组织名称“web-demo”（我的是yh-demo）。</td></tr><tr><td style="text-align:center">镜像标签</td><td style="text-align:center">v1.0.0</td></tr></tbody></table></li></ul></li><li><p>完成配置，单击“新建并执行”。当页面中显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001480544013.png" alt="img">时，表示任务执行成功。若构建失败，请参考<a href="https://support.huaweicloud.com/codeci_faq/codeci_02_0001.html">编译构建常见问题</a>排查处理</p></li><li><p>登录<a href="https://console.huaweicloud.com/swr/#/swr/dashboard">容器镜像服务控制台</a>，在页面左侧导航栏中选择“我的镜像”。页面中有一条镜像名称为“demo”，所属组织为“web-demo”的记录。单击镜像名称查看详情，镜像版本为“v1.0.0”。</p></li></ol><p><img src="https://s2.loli.net/2023/07/01/yGVBLljuvg98QcH.png" alt="image-20230701143951984"></p><h2 id="3-6-创建负载">3.6 创建负载</h2><p>在云容器引擎（CCE）中创建无状态负载（Deployment），用于加载运行demo镜像</p><ol><li><p>登录<a href="https://console.huaweicloud.com/cce/">云容器引擎控制台</a>，单击在<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0002.html#devcloud_qs_0002__section1339018509168">准备工作</a>中购买的集群，进入详情页</p></li><li><p>在页面左侧导航选择“工作负载”，单击“创建负载”，参考下表完成配置，单击“创建工作负载”。</p><table><thead><tr><th style="text-align:center">配置分类</th><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">基本信息</td><td style="text-align:center">负载类型</td><td style="text-align:center">选择“无状态负载”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">负载名称</td><td style="text-align:center">自定义，本文中为“web-demo”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">实例数量</td><td style="text-align:center">选择“1”。</td></tr><tr><td style="text-align:center">容器配置</td><td style="text-align:center">镜像名称</td><td style="text-align:center">单击“选择镜像”，在弹框中勾选“demo”，单击“确定”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">更新策略</td><td style="text-align:center">勾选“总是拉取镜像”。</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">镜像版本</td><td style="text-align:center">选择“v1.0.0”。</td></tr><tr><td style="text-align:center">高级配置</td><td style="text-align:center">升级策略</td><td style="text-align:center">升级方式选择“替换升级”。</td></tr></tbody></table></li></ol><p><img src="https://s2.loli.net/2023/07/01/IJNOeUnGT2CxFfl.png" alt="image-20230701144634577"></p><p><img src="https://s2.loli.net/2023/07/01/rG3R2AqtHfXMKZy.png" alt="image-20230701144648328"></p><ol start="3"><li><p>页面提示创建成功，单击“查看工作负载详情”，返回负载详情页面，实例列表中显示一条记录。</p><p>当该记录的状态为“运行中”时，选择“访问方式”页签，单击“创建”，参考下表完成创建服务配置，单击“确定”若实例状态异常，请参考<a href="https://support.huaweicloud.com/cce_faq/cce_faq_00029.html">工作负载异常</a>排查处理</p><table><thead><tr><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">Service名称</td><td style="text-align:center">自定义，本文中为“web-demo”。</td></tr><tr><td style="text-align:center">访问类型</td><td style="text-align:center">选择“负载均衡”。</td></tr><tr><td style="text-align:center">服务亲和</td><td style="text-align:center">选择“集群级别”。</td></tr><tr><td style="text-align:center">负载均衡器</td><td style="text-align:center">选择“共享型 &gt; 自动创建”，自定义实例名称（本文中为“web-demo-test”），勾选已阅读须知。</td></tr><tr><td style="text-align:center">端口配置</td><td style="text-align:center">协议：TCP      容器端口：8080      服务端口：8080</td></tr></tbody></table></li><li><p>列表中显示一条记录，当服务名称出显示为<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001507895400.png" alt="img">时，将鼠标悬浮在访问类型下的负载均衡器名称处，在弹窗中复制公网地址。</p><p><img src="https://s2.loli.net/2023/07/01/XZjRPQOa23N7i1S.png" alt="image-20230701145133718"></p></li><li><p>打开新的浏览器页面，输入“<a href="http://IP:8080/test%E2%80%9D%EF%BC%8C%E5%85%B6%E4%B8%ADIP%E4%B8%BA%E4%B8%8A%E4%B8%80%E6%AD%A5%E4%B8%AD%E5%A4%8D%E5%88%B6%E7%9A%84%E5%85%AC%E7%BD%91%E5%9C%B0%E5%9D%80%E3%80%82">http://IP:8080/test”，其中IP为上一步中复制的公网地址。</a></p><p>若出现以下访问结果，表示镜像部署并运行成功。<br><img src="https://s2.loli.net/2023/07/01/gyHBjAfrPQlXkJh.png" alt="image-20230701145210760"></p></li></ol><h2 id="3-7-部署镜像">3.7 部署镜像</h2><p>通过在部署服务中创建应用，将镜像部署自动化。</p><ol><li><p>返回软件开发生产线页面，单击导航栏“持续交付 &gt; 部署”，进入部署服务。单击“新建应用”，输入应用名称（本文中为“web-demo-k8s”），单击“下一步”</p></li><li><p>选择“空白模板”，单击“确定”</p></li><li><p>在步骤列表中搜索并添加步骤“Kubernetes快速部署(CCE集群)”，参考下表完成步骤配置</p><p><img src="https://s2.loli.net/2023/07/01/uaX7U9dgpwMmNfy.png" alt="image-20230701145803497"></p><table><thead><tr><th>配置项</th><th>配置建议</th></tr></thead><tbody><tr><td>区域</td><td>选择集群所在的区域。</td></tr><tr><td>集群名称</td><td>选择<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0002.html#devcloud_qs_0002__section1339018509168">准备工作</a>中购买的集群名称。</td></tr><tr><td>命名空间名称</td><td>本文中选择“default”。</td></tr><tr><td>工作负载名称</td><td>选择“web-demo”。</td></tr><tr><td>容器名称</td><td>选择<a href="https://support.huaweicloud.com/qs-devcloud/devcloud_qs_0002.html#devcloud_qs_0002__li45646505213">创建负载</a>时，容器配置部分的容器名称。</td></tr></tbody></table></li><li><p>单击“保存并部署”。当页面显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001635876081.png" alt="img">时，表示测试通过。若部署失败，请参照<a href="https://support.huaweicloud.com/deployman_faq/deployman_faq_00002.html">部署常见问题</a>排查</p></li></ol><h2 id="3-8-配置流水线实现自动化更新镜像部署">3.8 配置流水线实现自动化更新镜像部署</h2><p>通过配置流水线，将代码仓库、构建、部署串联起来，当代码仓库中发生代码提交动作时，可以自动触发流水线的执行，实现持续交付</p><ol><li><p>单击导航栏“持续交付 &gt; 流水线”，进入流水线服务</p></li><li><p>单击“新建流水线”，配置流水线</p><ul><li><p>基本信息：配置以下信息，单击“下一步”</p><table><thead><tr><th>配置项</th><th>配置建议</th></tr></thead><tbody><tr><td>名称</td><td>输入“pipeline-web-demo”。</td></tr><tr><td>流水线源</td><td>选择“Repo”。</td></tr><tr><td>代码库名称</td><td>选择“Web-Demo”。</td></tr><tr><td>默认分支</td><td>选择“master”。</td></tr></tbody></table></li><li><p>模板：选择“空模板”，单击“确定”。</p></li></ul></li><li><p>配置工作流。</p><ul><li><p>单击“阶段_1”后的<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001456724536.png" alt="img">，在“编辑阶段”窗口中输入阶段名称“构建”，单击“确定”<br><img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001506517109.png" alt="点击放大"></p></li><li><p>单击“新建任务”在“新建任务”窗口中，单击“Build构建”插件后的“添加”。</p><p><img src="https://s2.loli.net/2023/07/01/eC8LFfhNdn7WIMg.png" alt="image-20230701150348882"></p></li><li><p>参考下表配置任务信息，单击“确定”</p><table><thead><tr><th style="text-align:center">配置项</th><th style="text-align:center">配置建议</th></tr></thead><tbody><tr><td style="text-align:center">名称</td><td style="text-align:center">输入自定义名称（本文中保持默认值）。</td></tr><tr><td style="text-align:center">请选择需要调用的任务</td><td style="text-align:center">选择“Web-Demo-docker”。</td></tr><tr><td style="text-align:center">仓库</td><td style="text-align:center">选择“Web-Demo”。</td></tr></tbody></table></li><li><p>单击“新建阶段”，并修改阶段名称为“部署”。</p></li><li><p>单击“新建任务”，添加插件“Deploy部署”。</p></li><li><p>选择调用任务“web-demo-k8s”、关联构建任务选择之前设置的任务名称。</p></li></ul><p><img src="https://s2.loli.net/2023/07/01/8mZeWfMFAQpBtGD.png" alt="image-20230701150816794"></p></li><li><p>选择“执行计划”页签，勾选“代码提交时触发”，在分支过滤下拉列表中勾选分支“master”，单击“保存”。</p><p><img src="https://s2.loli.net/2023/07/01/glBVJk5CGWp4t8X.png" alt="image-20230701150839774"></p></li><li><p>进入代码仓库，搜索并打开文件“TestController.java”。</p><p>单击<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001212200723.png" alt="img">，将“hello world”修改为“hello world again”，输入提交信息后单击“确定”。<br><img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001362390781.png" alt="点击放大"></p></li><li><p>返回流水线页面，可看到流水线正在运行中。当页面显示<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001455867782.png" alt="img">时，重新访问页面“<a href="http://IP:8080/test%E2%80%9D%EF%BC%8C%E8%AE%BF%E9%97%AE%E7%BB%93%E6%9E%9C%E5%B0%86%E5%8F%98%E4%B8%BA%E4%B8%8B%E5%9B%BE%E6%98%BE%E7%A4%BA%E5%86%85%E5%AE%B9%E3%80%82%E8%8B%A5%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%EF%BC%8C%E8%AF%B7%E4%BA%8E%E6%89%A7%E8%A1%8C%E5%A4%B1%E8%B4%A5%E5%A4%84%E6%A3%80%E6%9F%A5%E5%A4%B1%E8%B4%A5%E5%8E%9F%E5%9B%A0%EF%BC%8C%E6%88%96%E5%8F%82%E7%85%A7%5B%E6%B5%81%E6%B0%B4%E7%BA%BF%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%5D(https://support.huaweicloud.com/pipeline_faq/pipeline_faq_0001.html)%E6%8E%92%E6%9F%A5%E5%A4%84%E7%90%86%E3%80%82">http://IP:8080/test”，访问结果将变为下图显示内容。若任务执行失败，请于执行失败处检查失败原因，或参照[流水线常见问题](https://support.huaweicloud.com/pipeline_faq/pipeline_faq_0001.html)排查处理。</a></p></li></ol><img src="https://s2.loli.net/2023/07/01/5ilcofGA96hyvTe.png" alt="image-20230701151144391" style="zoom:50%;" /><h2 id="3-9-释放资源">3.9 释放资源</h2><ol><li>删除项目。<ul><li>进入项目“设置 &gt; 通用设置 &gt; 基本信息”页面。</li><li>单击“删除项目”，在弹框中输入项目名称，单击“删除”。</li></ul></li><li>删除组织与镜像。<ul><li>登录<a href="https://console.huaweicloud.com/swr/#/swr/dashboard">容器镜像服务控制台</a>。</li><li>在“我的镜像”页面中，勾选本文中创建的镜像，单击“删除”。在弹框中单击“确定”。</li><li>在“组织管理”页面中，单击待删除组织的名称，进入详情页。单击“删除”，在弹框中单击“确定”。</li></ul></li><li>删除集群。<ul><li>登录<a href="https://console.huaweicloud.com/cce/">云容器引擎控制台</a>。在列表中找到待删除的集群，单击<img src="https://support.huaweicloud.com/qs-devcloud/zh-cn_image_0000001480904333.png" alt="img">。</li><li>勾选弹框中的所有选项，单击“是”。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 华为云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为云ModelArts产品体验</title>
      <link href="/post/5e280544.html"/>
      <url>/post/5e280544.html</url>
      
        <content type="html"><![CDATA[<h1>免费体验：一键完成商超商品识别模型部署</h1><h2 id="一、工作准备">一、工作准备</h2><h3 id="1-1-注册账号、实名认证">1.1 注册账号、实名认证</h3><p>已注册华为帐号并开通华为云，进行了实名认证，且在使用ModelArts前检查帐号状态，帐号不能处于欠费或冻结状态。</p><h3 id="1-2-配置委托访问授权">1.2 配置委托访问授权</h3><p>ModelArts使用过程中涉及到OBS、SWR、IEF等服务交互，首次使用ModelArts需要用户配置委托授权，允许访问这些依赖服务</p><p>1.使用华为云帐号登录<a href="https://console.huaweicloud.com/modelarts">ModelArts管理控制台</a>，在左侧导航栏单击“全局配置”，进入“全局配置”页面，单击“添加授权”。</p><p><img src="https://s2.loli.net/2023/06/29/ZNXhYy65EwpMjFB.png" alt="image-20230629172729116"></p><p>2.在“访问授权”页面，选择需要授权的“用户名”，选择新增委托及其对应的权限“普通用户”，并勾选“我已经详细阅读并同意《ModelArts服务声明》”，然后单击“创建”。</p><p><img src="https://s2.loli.net/2023/06/29/jDXyi8MIG7fb1Lu.png" alt="image-20230629172840221"></p><h2 id="二、订阅模型">二、订阅模型</h2><p>商超商品识别的模型共享在AI Gallery中。您可以前往AI Gallery，免费订阅此模型。</p><h3 id="2-1在AI-Gallery搜索模型。">2.1在AI Gallery搜索模型。</h3><p>方式一：单击<a href="https://developer.huaweicloud.com/develop/aigallery/model/detail?id=07113ee5-e0d5-4dfa-86d3-5ee190dc2623">商超商品识别模型链接</a>，进入模型详情页。</p><p>方式二：在ModelArts管理控制台的左侧菜单栏，单击**“AI Gallery”**进入AI Gallery。选择“资产集市 &gt; 模型”，搜索“商超商品识别”，单击名称进入模型详情页。</p><h3 id="2-2完成模型订阅。">2.2完成模型订阅。</h3><p>在模型详情页，单击“订阅”，阅读并勾选同意《数据安全与隐私风险承担条款》 和 《华为云AI Gallery服务协议》，单击“继续订阅”。</p><p>订阅模型完成后，页面的“订阅”按钮显示为“已订阅”。</p><p><img src="https://s2.loli.net/2023/06/29/WLzdGwEkts7NVQ1.png" alt="image-20230629173128566"></p><h3 id="3-3进入ModelArts控制台的订阅列表。">3.3进入ModelArts控制台的订阅列表。</h3><p>在模型详情页，单击“前往控制台”。在弹出的“选择云服务区域”页面选择ModelArts所在的云服务区域，单击“确定”跳转至ModelArts控制台的“AI应用管理 &gt; AI应用 &gt; 我的订阅”页面。</p><p><img src="https://s2.loli.net/2023/06/29/DO5qWhmjLXkl2pw.png" alt="image-20230629173211920"></p><p>在“我的订阅”列表，单击模型名称前面的<img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001398734474.png" alt="img">，当订阅模型的版本列表的状态显示为“就绪”时表示模型可以使用。</p><p><img src="https://s2.loli.net/2023/06/29/uZcOVmb5YiR7Flr.png" alt="image-20230629173301068"></p><h2 id="三、使用订阅模型部署在线服务">三、使用订阅模型部署在线服务</h2><p>模型订阅成功后，可将此模型部署为在线服务。</p><p>1.在“AI应用管理 &gt; AI应用 &gt; 我的订阅”页面，单击模型名称前面的<img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001398734498.png" alt="img">，在展开的版本列表中单击“部署 &gt; 在线服务”跳转至部署页面。</p><p><img src="https://s2.loli.net/2023/06/29/cPFSuON9zwIMbj3.png" alt="image-20230629173415045"></p><p>2.在部署页面，参考如下说明填写关键参数。</p><blockquote><ul><li>“名称”：自定义一个在线服务的名称，也可以使用默认值，此处以“商超商品识别服务”为例。</li><li>“资源池”：选择“公共资源池”。</li><li>“AI应用来源”和“选择AI应用及版本”：会自动选择订阅模型。</li><li>“计算节点规格”：在下拉框中选择“限时免费”资源，勾选并阅读免费规格说明。</li><li>其他参数可使用默认值。</li></ul></blockquote><p><img src="https://s2.loli.net/2023/06/29/bP8A76pzogItLMn.png" alt="image-20230629173712608"></p><p><img src="https://s2.loli.net/2023/06/29/l95IcgQ3vLwWeFy.png" alt="image-20230629173722554"></p><p>3.参数配置完成后，单击“下一步”，确认规格参数后，单击“提交”启动在线服务的部署。</p><p><img src="https://s2.loli.net/2023/06/29/aXpW4VBS3UJGA8t.png" alt="image-20230629173820438"></p><p>4.进入“部署上线 &gt; 在线服务”页面，等待服务服务状态变为“运行中”时，表示服务部署成功。预计时长4分钟左右</p><p><img src="https://s2.loli.net/2023/06/29/g6nFxfvM4B3Czb2.png" alt="image-20230629174418145"></p><h2 id="四、预测结果">四、预测结果</h2><p>1.在线服务部署完成后，单击服务名称进入服务详情。</p><p>2.在“预测”页签，单击“上传”，上传一个测试图片，单击“预测”查看预测结果。此处提供一个样例图片供预测使用。</p><p><img src="https://s2.loli.net/2023/06/29/ljtbpR2xgmyVvCn.png" alt="image-20230629174518154"></p><p><img src="https://s2.loli.net/2023/06/29/yi913VNKDxWTHOQ.png" alt="image-20230629174834950"></p><p><img src="C:/Users/yuan_hao/Desktop/zh-cn_image_0000001449294477.jpg" alt="img"></p><p>3.预测结果</p><p><img src="https://s2.loli.net/2023/06/29/GWKMmU7ia8PIRrA.png" alt="image-20230629174628871"></p><h2 id="五、清理资源">五、清理资源</h2><p>体验结束后，建议暂停或删除服务，避免占用资源，造成资源浪费。</p><ul><li>停止在线服务：在在线服务列表，单击对应服务操作列的“更多 &gt; 停止”。</li><li>删除在线服务：在在线服务列表，单击对应服务操作列的“更多 &gt; 删除”。</li></ul><h1>一键运行Notebook实现工地钢筋盘点</h1><h2 id="一、工作准备-2">一、工作准备</h2><p>同上，略</p><h2 id="二、一键运行Notebook">二、一键运行Notebook</h2><p>1.单击案例链接<a href="https://developer.huaweicloud.com/develop/aigallery/notebook/detail?id=b6df84d8-6b8a-4f44-a530-721d8d150965">基于计算机视觉的钢筋条数检测</a>，进入案例详情页。</p><p>2.单击详情页右侧的“Run in ModelArts”。</p><p>3.系统自动进入ModelArts的JupyterLab页面，如果未登录华为云，根据提示登录。</p><p>4.登录后在页面右上角会提示正在与ModelArts连接中，请等待连接完成。</p><p>5.在右侧的资源管理窗口，推荐切换为限时免费的GPU规格进行训练，可以提升训练效率。</p><p><img src="https://s2.loli.net/2023/06/29/PoxtH9bvyBSDJGL.png" alt="image-20230629184802447"></p><p>6.资源切换完成后，即可以了解该案例的内容步骤并运行。</p><p>7.单击ipynb文件右侧的“No Kernel”,在弹出的“Select Kernel”页面选择AI框架。</p><p>8.反复单击导航栏的<img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001398734538.png" alt="img">，逐步运行每个步骤；也可以一键运行该案例的所有步骤</p><p>单步运行按钮<br><img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001449454329.png" alt="img"></p><p>一键运行所有步骤<br><img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001398734534.png" alt="img"></p><p>运行时，右上角圆圈的空心圆表示未开始或者运行完成，实心圆<img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001449574189.png" alt="img">表示代码正在运行。<br><img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001449214181.png" alt="img"></p><p>9.在第9步的训练环节，共迭代训练25次，每次耗时60秒，共25分钟，请耐心等待。</p><p><img src="https://s2.loli.net/2023/06/29/6JGdcfFwCBh4eND.png" alt="image-20230629184817824"></p><ol start="10"><li></li></ol><p><img src="https://s2.loli.net/2023/06/29/9fnWI3qXulNsAQM.png" alt="image-20230629193241221"></p><h1>垃圾分类（使用新版自动学习实现图像分类）</h1><h2 id="一、准备工作">一、准备工作</h2><p>1.注册华为帐号并开通华为云、实名认证</p><p>2.创建OBS桶</p><p>登录<a href="https://console.huaweicloud.com/console/?region=cn-east-3#/obs/manager/buckets">OBS管理控制台</a>，在桶列表页面右上角单击“创建桶”，创建OBS桶。例如，创建名称为“c-flowers”的OBS桶。</p><p><img src="https://s2.loli.net/2023/06/29/P2iXMNOVjl8Ypv7.png" alt="image-20230629212047300"></p><blockquote><p>在ModelArts中选择OBS路径时，找不到已创建的OBS桶？</p><p>原因是已创建的OBS桶和使用的ModelArts服务不在同一个区域。</p><p>注意下图中的区域要和ModelArts一致</p></blockquote><p><img src="https://s2.loli.net/2023/06/29/4CVFuvK2MY7jtho.png" alt="image-20230629212908194"></p><h2 id="二、准备训练数据集">二、准备训练数据集</h2><p>1.进入<a href="https://developer.huaweicloud.com/develop/aigallery/home.html">AI Gallery</a>，在“资产集市”&gt;“数据”中的“数据集”页面找到<a href="https://developer.huaweicloud.com/develop/aigallery/dataset/detail?id=8a60ab2d-dcc0-40bb-968f-c0b6c374af3a">8类常见生活垃圾图片数据集</a>，单击右侧“下载”。</p><p><img src="https://s2.loli.net/2023/06/29/qPD3tZ4LkarETns.png" alt="image-20230629213327466"></p><p><img src="https://s2.loli.net/2023/06/29/GEVyrJQmvwZkTfA.png" alt="image-20230629213334365"></p><p>2.选择对应的云服务区域例如：华北-北京四，需要确保您选择的区域与您的管理控制台所在的区域一致。</p><p><img src="https://s2.loli.net/2023/06/29/LqmS2UhvBucGTrI.png" alt="image-20230629213400448"></p><p>3.进入“下载详情”页面，填写下述参数。</p><blockquote><ul><li>下载方式：ModelArts数据集。</li><li>目标区域：华北-北京四。</li><li>数据类型：图片。</li><li>数据集输出位置：选择您的OBS路径的空目录</li><li>数据集输入位置：选择您的OBS路径</li><li>名称：自定义</li></ul></blockquote><p><img src="https://s2.loli.net/2023/06/29/edmKykYJwPVMIzi.png" alt="image-20230629213618695"></p><p>4.完成参数填写，单击“确定”，自动跳转至AI Gallery个人中心“我的下载”页签，等待5分钟左右下载完成，进入“目标位置”可以在对象存储服务（OBS）中查看数据集储存位置。</p><p><img src="https://s2.loli.net/2023/06/29/FCOKfUngENwy4V6.png" alt="image-20230629214211252"></p><h2 id="三、配置委托访问授权">三、配置委托访问授权</h2><p>ModelArts使用过程中涉及到OBS、SWR、IEF等服务交互，首次使用ModelArts需要用户配置委托授权，允许访问这些依赖服务。</p><p>这个之前已经配置过了，所以只需要将已有委托加入即可</p><h2 id="四、创建新版自动学习图像分类项目">四、创建新版自动学习图像分类项目</h2><p>1.进入<a href="https://console.huaweicloud.com/modelarts">ModelArts管理控制台</a>，在左侧导航栏选择“自动学习”</p><p>2.进入新版自动学习页面后，单击选择“图像分类”创建项目。完成参数填写：</p><blockquote><ul><li>计费模式：按需计费。</li><li>名称：自定义您的项目名称。</li><li>描述：自定义描述您的项目详情。</li><li>数据集：单击下拉框选择从AI Gallery下载好的数据集（下拉框展示的数据集为您名下按照时间顺序创建的的所有数据集，此处选择您最近创建的数据集即为从AI Gallery下载好的数据集）。</li><li>输出路径：选择您的OBS文件夹下的路径。</li><li>训练规格：单击下拉框选择训练规格。</li></ul></blockquote><p><img src="https://s2.loli.net/2023/06/29/Aa4t3BQYfe9jC72.png" alt="image-20230629214525706"></p><p><img src="https://s2.loli.net/2023/06/29/pP4g6t5njazi3E2.png" alt="image-20230629214647345"></p><p>3.参数填写完成，单击“创建项目”，即可跳转到新版自动学习的运行总览页面。</p><p><img src="https://s2.loli.net/2023/06/29/pD7yVYe3CEBATSd.png" alt="image-20230629214739805"></p><h2 id="五、运行工作流">五、运行工作流</h2><blockquote><p>项目完成创建之后，会自动跳转到新版自动学习的运行总览页面。同时您的工作流会自动从数据标注节点开始运行。</p></blockquote><p>1.在数据标注节点，待数据标注节点变为橘色即为“等待操作”状态。</p><p>2.单击“继续运行”工作流会自动从数据标注节点依次运行到服务部署节点。该段时间不需要用户做任何操作。</p><p><img src="https://s2.loli.net/2023/06/29/lZy3CrzDQ6Npx28.png" alt="image-20230629214932122"></p><p>3.当工作流运行到“服务部署”节点，状态会变为“等待输入”，您需要填写您的输入参数：</p><blockquote><ul><li>AI应用：默认为您的自动学习项目名称。</li><li>选择AI应用版本：系统默认，无需再选择。</li><li>资源池：默认选择“公共资源池”，您也可以根据您的需求选择相应的专属资源池。</li><li>计算节点规格：根据您的实际需求选择相应的规格，不同规格的配置费用不同，本案例使用的规格为[限时免费]CPU：1核4GB。</li><li>分流（100%）：默认为100。</li><li>节点个数：默认为1。</li><li>是否自动停止：为了避免资源浪费，建议您打开该开关，根据您的需求，选择自动停止时间。</li></ul></blockquote><p><img src="https://s2.loli.net/2023/06/29/D62UOMWctQoLymK.png" alt="image-20230629220222045"></p><p>4.参数填写完毕之后，单击运行状况右边的“继续运行”，单击确认弹窗中的“确定”即可继续完成工作流的运行。</p><h2 id="六、预测分析">六、预测分析</h2><blockquote><p>运行完成的工作流会自动部署相应的在线服务，您只需要在相应的服务详情页面进行预测即可。</p></blockquote><p>1.在服务部署节点单击“实例详情”或者在管理控制台，选择“部署上线&gt;在线服务”即可进入在线服务详情页。</p><p><img src="https://s2.loli.net/2023/06/29/uYWMD1dzPBwog7X.png" alt="image-20230629221205325"></p><p>2.在服务详情页，单击选择“预测”页签。</p><p><img src="https://s2.loli.net/2023/06/29/aU6XBsgF2pfzNCD.png" alt="image-20230629221354203"></p><p>3.上传一张需要预测的图片，单击预测，即可在右边的预测结果显示区查看您的预测结果。</p><p><img src="https://s2.loli.net/2023/06/29/DRki9FtQr64deXy.png" alt="image-20230629221413841"></p><h2 id="七、清除相应资源">七、清除相应资源</h2><blockquote><p>在完成预测之后，建议关闭服务，以免产生不必要的计费。</p></blockquote><p>1.停止运行服务</p><p>返回在线服务，在对应的服务名称，单击选择操作列的“更多&gt;停止”，停止该服务</p><p><img src="https://s2.loli.net/2023/06/29/X2rZCtEuf1oSszM.png" alt="image-20230629222048036"></p><p>2.清除OBS中的数据</p><ol><li>在控制台左侧导航栏的服务列表<img src="https://support.huaweicloud.com/qs-modelarts/figure/zh-cn_image_0000001548886429.png" alt="img">，选择“对象存储服务OBS”,进入OBS服务详情页面。</li><li>在左侧导航栏选择“桶列表”，在列表详情，找到自己创建的OBS桶，进入OBS桶详情。<br><img src="https://s2.loli.net/2023/06/29/6mSKiTPRXoVuMe3.png" alt="img"></li><li>在桶的详情页，左侧导航栏选择“对象”，在右侧“名称”列选中不需要的存储对象，单击上方的“删除”或者在操作列单击“更多”,选择“删除”，即可删除相应的存储对象。<br><img src="https://s2.loli.net/2023/06/29/Gut2QUrK83gl7wN.png" alt="img"><br><img src="https://s2.loli.net/2023/06/29/2iBRVac9MgPzXOf.png" alt="img"></li></ol><h1>使用自定义算法构建模型（手写数字识别）</h1><h2 id="一、前提条件">一、前提条件</h2><p>已注册华为帐号并开通华为云，且在使用ModelArts前检查帐号状态，帐号不能处于欠费或冻结状态。</p><h2 id="二、准备训练数据">二、准备训练数据</h2><p>本案例使用的数据是MNIST数据集，您可以从<a href="http://yann.lecun.com/exdb/mnist/">MNIST官网</a>下载数据集至本地，以下4个文件均要下载。（需要翻出去）</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1jhfLx3PRU1c9zqZX74tJmQ?pwd=o261">https://pan.baidu.com/s/1jhfLx3PRU1c9zqZX74tJmQ?pwd=o261</a><br>提取码：o261</p></blockquote><p><img src="https://s2.loli.net/2023/06/29/W4Zr3kzdOw2cYl7.png" alt="image-20230629223046971"></p><blockquote><p>“train-images-idx3-ubyte.gz”：训练集的压缩包文件。训练集，共包含60000个样本。<br>“train-labels-idx1-ubyte.gz”：训练集标签的压缩包文件。训练集标签，共包含60000个样本的类别标签。<br>“t10k-images-idx3-ubyte.gz”：验证集的压缩包文件。验证集，共包含10000个样本。<br>“t10k-labels-idx1-ubyte.gz”：验证集标签的压缩包文件。验证集标签，共包含10000个样本的类别标签。</p></blockquote><h2 id="三、准备训练文件和推理文件">三、准备训练文件和推理文件</h2><blockquote><p>三个文件：<a href="http://train.py">train.py</a>、customize_service.py、config.json</p><p>文件类型改为UTF-8</p></blockquote><p><a href="http://train.py">train.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># base on https://github.com/pytorch/examples/blob/main/mnist/main.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> IO, <span class="type">Union</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.optim <span class="keyword">as</span> optim</span><br><span class="line"><span class="keyword">from</span> torchvision <span class="keyword">import</span> datasets, transforms    </span><br><span class="line"><span class="keyword">from</span> torch.optim.lr_scheduler <span class="keyword">import</span> StepLR</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">32</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">        self.dropout1 = nn.Dropout(<span class="number">0.25</span>)</span><br><span class="line">        self.dropout2 = nn.Dropout(<span class="number">0.5</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">9216</span>, <span class="number">128</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">128</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = F.relu(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = F.relu(x)</span><br><span class="line">        x = F.max_pool2d(x, <span class="number">2</span>)</span><br><span class="line">        x = self.dropout1(x)</span><br><span class="line">        x = torch.flatten(x, <span class="number">1</span>)</span><br><span class="line">        x = self.fc1(x)</span><br><span class="line">        x = F.relu(x)</span><br><span class="line">        x = self.dropout2(x)</span><br><span class="line">        x = self.fc2(x)</span><br><span class="line">        output = F.log_softmax(x, dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型训练，设置模型为训练模式，加载训练数据，计算损失函数，执行梯度下降</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train</span>(<span class="params">args, model, device, train_loader, optimizer, epoch</span>):</span><br><span class="line">    model.train()</span><br><span class="line">    <span class="keyword">for</span> batch_idx, (data, target) <span class="keyword">in</span> <span class="built_in">enumerate</span>(train_loader):</span><br><span class="line">        data, target = data.to(device), target.to(device)</span><br><span class="line">        optimizer.zero_grad()</span><br><span class="line">        output = model(data)</span><br><span class="line">        loss = F.nll_loss(output, target)</span><br><span class="line">        loss.backward()</span><br><span class="line">        optimizer.step()</span><br><span class="line">        <span class="keyword">if</span> batch_idx % args.log_interval == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Train Epoch: &#123;&#125; [&#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)]\tLoss: &#123;:.6f&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                epoch, batch_idx * <span class="built_in">len</span>(data), <span class="built_in">len</span>(train_loader.dataset),</span><br><span class="line">                <span class="number">100.</span> * batch_idx / <span class="built_in">len</span>(train_loader), loss.item()))</span><br><span class="line">            <span class="keyword">if</span> args.dry_run:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型验证，设置模型为验证模式，加载验证数据，计算损失函数和准确率</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">model, device, test_loader</span>):</span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line">    test_loss = <span class="number">0</span></span><br><span class="line">    correct = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> torch.no_grad():</span><br><span class="line">        <span class="keyword">for</span> data, target <span class="keyword">in</span> test_loader:</span><br><span class="line">            data, target = data.to(device), target.to(device)</span><br><span class="line">            output = model(data)</span><br><span class="line">            test_loss += F.nll_loss(output, target, reduction=<span class="string">&#x27;sum&#x27;</span>).item()</span><br><span class="line">            pred = output.argmax(dim=<span class="number">1</span>, keepdim=<span class="literal">True</span>)</span><br><span class="line">            correct += pred.eq(target.view_as(pred)).<span class="built_in">sum</span>().item()</span><br><span class="line"></span><br><span class="line">    test_loss /= <span class="built_in">len</span>(test_loader.dataset)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\nTest set: Average loss: &#123;:.4f&#125;, Accuracy: &#123;&#125;/&#123;&#125; (&#123;:.0f&#125;%)\n&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">        test_loss, correct, <span class="built_in">len</span>(test_loader.dataset),</span><br><span class="line">        <span class="number">100.</span> * correct / <span class="built_in">len</span>(test_loader.dataset)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pytorch mnist</span></span><br><span class="line"><span class="comment"># https://github.com/pytorch/vision/blob/v0.9.0/torchvision/datasets/mnist.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_int</span>(<span class="params">b: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(codecs.encode(b, <span class="string">&#x27;hex&#x27;</span>), <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_maybe_compressed_file</span>(<span class="params">path: <span class="type">Union</span>[<span class="built_in">str</span>, IO]</span>) -&gt; <span class="type">Union</span>[IO, gzip.GzipFile]:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Return a file object that possibly decompresses &#x27;path&#x27; on the fly.</span></span><br><span class="line"><span class="string">       Decompression occurs when argument `path` is a string and ends with &#x27;.gz&#x27; or &#x27;.xz&#x27;.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(path, torch._six.string_classes):</span><br><span class="line">        <span class="keyword">return</span> path</span><br><span class="line">    <span class="keyword">if</span> path.endswith(<span class="string">&#x27;.gz&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> gzip.<span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> path.endswith(<span class="string">&#x27;.xz&#x27;</span>):</span><br><span class="line">        <span class="keyword">return</span> lzma.<span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SN3_PASCALVINCENT_TYPEMAP = &#123;</span><br><span class="line">    <span class="number">8</span>: (torch.uint8, np.uint8, np.uint8),</span><br><span class="line">    <span class="number">9</span>: (torch.int8, np.int8, np.int8),</span><br><span class="line">    <span class="number">11</span>: (torch.int16, np.dtype(<span class="string">&#x27;&gt;i2&#x27;</span>), <span class="string">&#x27;i2&#x27;</span>),</span><br><span class="line">    <span class="number">12</span>: (torch.int32, np.dtype(<span class="string">&#x27;&gt;i4&#x27;</span>), <span class="string">&#x27;i4&#x27;</span>),</span><br><span class="line">    <span class="number">13</span>: (torch.float32, np.dtype(<span class="string">&#x27;&gt;f4&#x27;</span>), <span class="string">&#x27;f4&#x27;</span>),</span><br><span class="line">    <span class="number">14</span>: (torch.float64, np.dtype(<span class="string">&#x27;&gt;f8&#x27;</span>), <span class="string">&#x27;f8&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_sn3_pascalvincent_tensor</span>(<span class="params">path: <span class="type">Union</span>[<span class="built_in">str</span>, IO], strict: <span class="built_in">bool</span> = <span class="literal">True</span></span>) -&gt; torch.Tensor:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Read a SN3 file in &quot;Pascal Vincent&quot; format (Lush file &#x27;libidx/idx-io.lsh&#x27;).</span></span><br><span class="line"><span class="string">       Argument may be a filename, compressed filename, or file object.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># read</span></span><br><span class="line">    <span class="keyword">with</span> open_maybe_compressed_file(path) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    <span class="comment"># parse</span></span><br><span class="line">    magic = get_int(data[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line">    nd = magic % <span class="number">256</span></span><br><span class="line">    ty = magic // <span class="number">256</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="number">1</span> &lt;= nd &lt;= <span class="number">3</span></span><br><span class="line">    <span class="keyword">assert</span> <span class="number">8</span> &lt;= ty &lt;= <span class="number">14</span></span><br><span class="line">    m = SN3_PASCALVINCENT_TYPEMAP[ty]</span><br><span class="line">    s = [get_int(data[<span class="number">4</span> * (i + <span class="number">1</span>): <span class="number">4</span> * (i + <span class="number">2</span>)]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(nd)]</span><br><span class="line">    parsed = np.frombuffer(data, dtype=m[<span class="number">1</span>], offset=(<span class="number">4</span> * (nd + <span class="number">1</span>)))</span><br><span class="line">    <span class="keyword">assert</span> parsed.shape[<span class="number">0</span>] == np.prod(s) <span class="keyword">or</span> <span class="keyword">not</span> strict</span><br><span class="line">    <span class="keyword">return</span> torch.from_numpy(parsed.astype(m[<span class="number">2</span>], copy=<span class="literal">False</span>)).view(*s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_label_file</span>(<span class="params">path: <span class="built_in">str</span></span>) -&gt; torch.Tensor:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        x = read_sn3_pascalvincent_tensor(f, strict=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">assert</span>(x.dtype == torch.uint8)</span><br><span class="line">    <span class="keyword">assert</span>(x.ndimension() == <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> x.long()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_image_file</span>(<span class="params">path: <span class="built_in">str</span></span>) -&gt; torch.Tensor:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        x = read_sn3_pascalvincent_tensor(f, strict=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">assert</span>(x.dtype == torch.uint8)</span><br><span class="line">    <span class="keyword">assert</span>(x.ndimension() == <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_archive</span>(<span class="params">from_path, to_path</span>):</span><br><span class="line">    to_path = os.path.join(to_path, os.path.splitext(os.path.basename(from_path))[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(to_path, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> out_f, gzip.GzipFile(from_path) <span class="keyword">as</span> zip_f:</span><br><span class="line">        out_f.write(zip_f.read())</span><br><span class="line"><span class="comment"># --- pytorch mnist</span></span><br><span class="line"><span class="comment"># --- end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># raw mnist 数据处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert_raw_mnist_dataset_to_pytorch_mnist_dataset</span>(<span class="params">data_url</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    raw</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#123;data_url&#125;/</span></span><br><span class="line"><span class="string">        train-images-idx3-ubyte.gz</span></span><br><span class="line"><span class="string">        train-labels-idx1-ubyte.gz</span></span><br><span class="line"><span class="string">        t10k-images-idx3-ubyte.gz</span></span><br><span class="line"><span class="string">        t10k-labels-idx1-ubyte.gz</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    processed</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#123;data_url&#125;/</span></span><br><span class="line"><span class="string">        train-images-idx3-ubyte.gz</span></span><br><span class="line"><span class="string">        train-labels-idx1-ubyte.gz</span></span><br><span class="line"><span class="string">        t10k-images-idx3-ubyte.gz</span></span><br><span class="line"><span class="string">        t10k-labels-idx1-ubyte.gz</span></span><br><span class="line"><span class="string">        MNIST/raw</span></span><br><span class="line"><span class="string">            train-images-idx3-ubyte</span></span><br><span class="line"><span class="string">            train-labels-idx1-ubyte</span></span><br><span class="line"><span class="string">            t10k-images-idx3-ubyte</span></span><br><span class="line"><span class="string">            t10k-labels-idx1-ubyte</span></span><br><span class="line"><span class="string">        MNIST/processed</span></span><br><span class="line"><span class="string">            training.pt</span></span><br><span class="line"><span class="string">            test.pt</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    resources = [</span><br><span class="line">        <span class="string">&quot;train-images-idx3-ubyte.gz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;train-labels-idx1-ubyte.gz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;t10k-images-idx3-ubyte.gz&quot;</span>,</span><br><span class="line">        <span class="string">&quot;t10k-labels-idx1-ubyte.gz&quot;</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    pytorch_mnist_dataset = os.path.join(data_url, <span class="string">&#x27;MNIST&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    raw_folder = os.path.join(pytorch_mnist_dataset, <span class="string">&#x27;raw&#x27;</span>)</span><br><span class="line">    processed_folder = os.path.join(pytorch_mnist_dataset, <span class="string">&#x27;processed&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    os.makedirs(raw_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    os.makedirs(processed_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Processing...&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> resources:</span><br><span class="line">        extract_archive(os.path.join(data_url, f), raw_folder)</span><br><span class="line"></span><br><span class="line">    training_set = (</span><br><span class="line">        read_image_file(os.path.join(raw_folder, <span class="string">&#x27;train-images-idx3-ubyte&#x27;</span>)),</span><br><span class="line">        read_label_file(os.path.join(raw_folder, <span class="string">&#x27;train-labels-idx1-ubyte&#x27;</span>))</span><br><span class="line">    )</span><br><span class="line">    test_set = (</span><br><span class="line">        read_image_file(os.path.join(raw_folder, <span class="string">&#x27;t10k-images-idx3-ubyte&#x27;</span>)),</span><br><span class="line">        read_label_file(os.path.join(raw_folder, <span class="string">&#x27;t10k-labels-idx1-ubyte&#x27;</span>))</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(processed_folder, <span class="string">&#x27;training.pt&#x27;</span>), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        torch.save(training_set, f)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(processed_folder, <span class="string">&#x27;test.pt&#x27;</span>), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        torch.save(test_set, f)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Done!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 定义可以接收的训练作业运行参数</span></span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;PyTorch MNIST Example&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--data_url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">False</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;mnist dataset path&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--train_url&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, default=<span class="literal">False</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;mnist model path&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--batch-size&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">64</span>, metavar=<span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;input batch size for training (default: 64)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--test-batch-size&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1000</span>, metavar=<span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;input batch size for testing (default: 1000)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--epochs&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">14</span>, metavar=<span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;number of epochs to train (default: 14)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--lr&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>, default=<span class="number">1.0</span>, metavar=<span class="string">&#x27;LR&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;learning rate (default: 1.0)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--gamma&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>, default=<span class="number">0.7</span>, metavar=<span class="string">&#x27;M&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;Learning rate step gamma (default: 0.7)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--no-cuda&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, default=<span class="literal">False</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;disables CUDA training&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--dry-run&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, default=<span class="literal">False</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;quickly check a single pass&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--seed&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">1</span>, metavar=<span class="string">&#x27;S&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;random seed (default: 1)&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--log-interval&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, default=<span class="number">10</span>, metavar=<span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;how many batches to wait before logging training status&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;--save-model&#x27;</span>, action=<span class="string">&#x27;store_true&#x27;</span>, default=<span class="literal">True</span>,</span><br><span class="line">                        <span class="built_in">help</span>=<span class="string">&#x27;For Saving the current Model&#x27;</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    use_cuda = <span class="keyword">not</span> args.no_cuda <span class="keyword">and</span> torch.cuda.is_available()</span><br><span class="line"></span><br><span class="line">    torch.manual_seed(args.seed)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置使用 GPU 还是 CPU 来运行算法</span></span><br><span class="line">    device = torch.device(<span class="string">&quot;cuda&quot;</span> <span class="keyword">if</span> use_cuda <span class="keyword">else</span> <span class="string">&quot;cpu&quot;</span>)</span><br><span class="line"></span><br><span class="line">    train_kwargs = &#123;<span class="string">&#x27;batch_size&#x27;</span>: args.batch_size&#125;</span><br><span class="line">    test_kwargs = &#123;<span class="string">&#x27;batch_size&#x27;</span>: args.test_batch_size&#125;</span><br><span class="line">    <span class="keyword">if</span> use_cuda:</span><br><span class="line">        cuda_kwargs = &#123;<span class="string">&#x27;num_workers&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">                       <span class="string">&#x27;pin_memory&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">                       <span class="string">&#x27;shuffle&#x27;</span>: <span class="literal">True</span>&#125;</span><br><span class="line">        train_kwargs.update(cuda_kwargs)</span><br><span class="line">        test_kwargs.update(cuda_kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义数据预处理方法</span></span><br><span class="line">    transform=transforms.Compose([</span><br><span class="line">        transforms.ToTensor(),</span><br><span class="line">        transforms.Normalize((<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))</span><br><span class="line">        ])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将 raw mnist 数据集转换为 pytorch mnist 数据集</span></span><br><span class="line">    convert_raw_mnist_dataset_to_pytorch_mnist_dataset(args.data_url)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分别创建训练和验证数据集</span></span><br><span class="line">    dataset1 = datasets.MNIST(args.data_url, train=<span class="literal">True</span>, download=<span class="literal">False</span>,</span><br><span class="line">                       transform=transform)</span><br><span class="line">    dataset2 = datasets.MNIST(args.data_url, train=<span class="literal">False</span>, download=<span class="literal">False</span>,</span><br><span class="line">                       transform=transform)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分别构建训练和验证数据迭代器</span></span><br><span class="line">    train_loader = torch.utils.data.DataLoader(dataset1, **train_kwargs)</span><br><span class="line">    test_loader = torch.utils.data.DataLoader(dataset2, **test_kwargs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 初始化神经网络模型并拷贝模型到计算设备上</span></span><br><span class="line">    model = Net().to(device)</span><br><span class="line">    <span class="comment"># 定义训练优化器和学习率策略，用于梯度下降计算</span></span><br><span class="line">    optimizer = optim.Adadelta(model.parameters(), lr=args.lr)</span><br><span class="line">    scheduler = StepLR(optimizer, step_size=<span class="number">1</span>, gamma=args.gamma)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 训练神经网络，每一轮进行一次验证</span></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, args.epochs + <span class="number">1</span>):</span><br><span class="line">        train(args, model, device, train_loader, optimizer, epoch)</span><br><span class="line">        test(model, device, test_loader)</span><br><span class="line">        scheduler.step()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 保存模型与适配 ModelArts 推理模型包规范</span></span><br><span class="line">    <span class="keyword">if</span> args.save_model:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在 train_url 训练参数对应的路径内创建 model 目录</span></span><br><span class="line">        model_path = os.path.join(args.train_url, <span class="string">&#x27;model&#x27;</span>)</span><br><span class="line">        os.makedirs(model_path, exist_ok = <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 按 ModelArts 推理模型包规范，保存模型到 model 目录内</span></span><br><span class="line">        torch.save(model.state_dict(), os.path.join(model_path, <span class="string">&#x27;mnist_cnn.pt&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 拷贝推理代码与配置文件到 model 目录内</span></span><br><span class="line">        the_path_of_current_file = os.path.dirname(__file__)</span><br><span class="line">        shutil.copyfile(os.path.join(the_path_of_current_file, <span class="string">&#x27;infer/customize_service.py&#x27;</span>), os.path.join(model_path, <span class="string">&#x27;customize_service.py&#x27;</span>))</span><br><span class="line">        shutil.copyfile(os.path.join(the_path_of_current_file, <span class="string">&#x27;infer/config.json&#x27;</span>), os.path.join(model_path, <span class="string">&#x27;config.json&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>customize_service.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> log</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torchvision.transforms <span class="keyword">as</span> transforms</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> model_service.pytorch_model_service <span class="keyword">import</span> PTServingBaseService</span><br><span class="line"></span><br><span class="line">logger = log.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义模型预处理</span></span><br><span class="line">infer_transformation = transforms.Compose([</span><br><span class="line">    transforms.Resize(<span class="number">28</span>),</span><br><span class="line">    transforms.CenterCrop(<span class="number">28</span>),</span><br><span class="line">    transforms.ToTensor(),</span><br><span class="line">    transforms.Normalize((<span class="number">0.1307</span>,), (<span class="number">0.3081</span>,))</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PTVisionService</span>(<span class="title class_ inherited__">PTServingBaseService</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, model_name, model_path</span>):</span><br><span class="line">        <span class="comment"># 调用父类构造方法</span></span><br><span class="line">        <span class="built_in">super</span>(PTVisionService, self).__init__(model_name, model_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 调用自定义函数加载模型</span></span><br><span class="line">        self.model = Mnist(model_path)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 加载标签</span></span><br><span class="line">        self.label = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_preprocess</span>(<span class="params">self, data</span>):</span><br><span class="line">        preprocessed_data = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> data.items():</span><br><span class="line">            input_batch = []</span><br><span class="line">            <span class="keyword">for</span> file_name, file_content <span class="keyword">in</span> v.items():</span><br><span class="line">                <span class="keyword">with</span> Image.<span class="built_in">open</span>(file_content) <span class="keyword">as</span> image1:</span><br><span class="line">                    <span class="comment"># 灰度处理</span></span><br><span class="line">                    image1 = image1.convert(<span class="string">&quot;L&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">                        input_batch.append(infer_transformation(image1).cuda())</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        input_batch.append(infer_transformation(image1))</span><br><span class="line">            input_batch_var = torch.autograd.Variable(torch.stack(input_batch, dim=<span class="number">0</span>), volatile=<span class="literal">True</span>)</span><br><span class="line">            <span class="built_in">print</span>(input_batch_var.shape)</span><br><span class="line">            preprocessed_data[k] = input_batch_var</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> preprocessed_data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_postprocess</span>(<span class="params">self, data</span>):</span><br><span class="line">        results = []</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> data.items():</span><br><span class="line">            result = torch.argmax(v[<span class="number">0</span>])</span><br><span class="line">            result = &#123;k: self.label[result]&#125;</span><br><span class="line">            results.append(result)</span><br><span class="line">        <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_inference</span>(<span class="params">self, data</span>):</span><br><span class="line"></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> data.items():</span><br><span class="line">            result[k] = self.model(v)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Net</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>(Net, self).__init__()</span><br><span class="line">        self.conv1 = nn.Conv2d(<span class="number">1</span>, <span class="number">32</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">        self.conv2 = nn.Conv2d(<span class="number">32</span>, <span class="number">64</span>, <span class="number">3</span>, <span class="number">1</span>)</span><br><span class="line">        self.dropout1 = nn.Dropout(<span class="number">0.25</span>)</span><br><span class="line">        self.dropout2 = nn.Dropout(<span class="number">0.5</span>)</span><br><span class="line">        self.fc1 = nn.Linear(<span class="number">9216</span>, <span class="number">128</span>)</span><br><span class="line">        self.fc2 = nn.Linear(<span class="number">128</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.conv1(x)</span><br><span class="line">        x = F.relu(x)</span><br><span class="line">        x = self.conv2(x)</span><br><span class="line">        x = F.relu(x)</span><br><span class="line">        x = F.max_pool2d(x, <span class="number">2</span>)</span><br><span class="line">        x = self.dropout1(x)</span><br><span class="line">        x = torch.flatten(x, <span class="number">1</span>)</span><br><span class="line">        x = self.fc1(x)</span><br><span class="line">        x = F.relu(x)</span><br><span class="line">        x = self.dropout2(x)</span><br><span class="line">        x = self.fc2(x)</span><br><span class="line">        output = F.log_softmax(x, dim=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Mnist</span>(<span class="params">model_path, **kwargs</span>):</span><br><span class="line">    <span class="comment"># 生成网络</span></span><br><span class="line">    model = Net()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 加载模型</span></span><br><span class="line">    <span class="keyword">if</span> torch.cuda.is_available():</span><br><span class="line">        device = torch.device(<span class="string">&#x27;cuda&#x27;</span>)</span><br><span class="line">        model.load_state_dict(torch.load(model_path, map_location=<span class="string">&quot;cuda:0&quot;</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        device = torch.device(<span class="string">&#x27;cpu&#x27;</span>)</span><br><span class="line">        model.load_state_dict(torch.load(model_path, map_location=device))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># CPU 或者 GPU 映射</span></span><br><span class="line">    model.to(device)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 声明为推理模式</span></span><br><span class="line">    model.<span class="built_in">eval</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> model</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;model_algorithm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;image_classification&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;model_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;PyTorch&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;runtime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pytorch_1.8.0-cuda_10.2-py_3.7-ubuntu_18.04-x86_64&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="四、创建OBS桶并上传文件">四、创建OBS桶并上传文件</h2><p>将训练使用的数据和代码文件、推理代码文件与推理配置文件，上传到OBS桶中。在 ModelArts 上运行训练作业时，需要从OBS桶中读取数据和代码文件。</p><p>1.登录OBS管理控制台，按照如下示例创建OBS桶和文件夹。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;OBS桶&#125;                     <span class="comment"># OBS对象桶，用户可以自定义名称，例如：test-modelarts-xx</span></span><br><span class="line">      -&#123;OBS文件夹&#125;          <span class="comment"># OBS文件夹，自定义名称，此处举例为pytorch</span></span><br><span class="line">          - mnist-data      <span class="comment"># OBS文件夹，用于存放训练数据集，可以自定义名称，此处举例为mnist-data</span></span><br><span class="line">          - mnist-code      <span class="comment"># OBS文件夹，用于存放训练脚本train.py，可以自定义名称，此处举例为mnist-code</span></span><br><span class="line">              - infer       <span class="comment"># OBS文件夹，用于存放推理脚本customize_service.py和配置文件config.json</span></span><br><span class="line">          - mnist-output    <span class="comment"># OBS文件夹，用于存放训练输出模型，可以自定义名称，此处举例为mnist-output</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/29/zMYtRlo2cGHdsej.png" alt="image-20230629224146224"></p><p>2.上传数据集到“mnist-data”文件夹中</p><p><img src="https://s2.loli.net/2023/06/29/YA5LZ4gVwdSKHFm.png" alt="image-20230629224456536"></p><p>3.上传训练脚本“<a href="http://train.py">train.py</a>”到“mnist-code”文件夹中。</p><p>4.上传推理脚本“customize_service.py”和推理配置文件“config.json”到“infer”文件中。</p><h2 id="五、创建训练作业">五、创建训练作业</h2><p>1.登录ModelArts管理控制台，选择和OBS桶相同的区域。</p><p>2.在“全局配置”中检查当前帐号是否已完成访问授权的配置。如未完成，请参考<a href="https://support.huaweicloud.com/prepare-modelarts/modelarts_08_0007.html">使用委托授权</a>**。**针对之前使用访问密钥授权的用户，建议清空授权，然后使用委托进行授权。</p><p>3.在左侧导航栏的“训练管理”-&gt; “训练作业”中，单击“创建训练作业”。填写创建训练作业相关信息。</p><p><img src="https://s2.loli.net/2023/06/29/lXi7w3IOnYHPy6x.png" alt="image-20230629224842540"></p><blockquote><ul><li>创建方式：选择“自定义算法”。</li><li>启动方式：选择“预置框架”，下拉框中选择PyTorch，pytorch_1.8.0-cuda_10.2-py_3.7-ubuntu_18.04-x86_64。</li><li>代码目录：选择已创建的代码目录路径“/test-modelarts-xx/pytorch/mnist-code/”。</li><li>启动文件：选择代码目录下上传的训练脚本“<a href="http://train.py">train.py</a>”。</li><li>输入：单击“添加”，设置训练输入的**“参数名称”**为“data_url”。设置数据存储位置为 “/test-modelarts-xx/pytorch/mnist-data/”。</li><li>输出：单击“添加”，设置训练输出的**“参数名称”**为“train_url”。设置数据存储位置为 “/test-modelarts-xx/pytorch/mnist-output/”</li><li>资源类型：选择 GPU 单卡的规格，如“GPU: 1*NVIDIA-V100(16GB) | CPU: 8 核 64GB 780GB”。</li></ul></blockquote><p><img src="https://s2.loli.net/2023/06/29/RBMWFD3SrkdtwOq.png" alt="image-20230629225314656"></p><p><img src="https://s2.loli.net/2023/06/29/2Ze6FmfYtniy8UD.png" alt="image-20230629225330167"></p><p><img src="https://s2.loli.net/2023/06/29/nxNzKaD4T8q9lFR.png" alt="image-20230629225351410"></p><p>4.单击“提交”，确认训练作业的参数信息，确认无误后单击“确定”</p><p>5.页面自动返回“训练作业”列表页，当训练作业状态变为“已完成”时，即完成了模型训练过程</p><p><img src="https://s2.loli.net/2023/06/29/Wk8dEKOeNX3o1Mf.png" alt="image-20230629230751828"></p><p>6.单击训练作业名称，进入作业详情界面查看训练作业日志信息，观察日志是否有明显的Error信息，如果有则表示训练失败，请根据日志提示定位原因并解决。</p><p>7.在训练详情页左下方单击训练输出路径，跳转到OBS目录，查看是否存在model文件夹，且model文件夹中是否有生成训练模型。如果未生成model文件夹或者训练模型，可能是训练输入数据不完整导致，请检查训练数据上传是否完整，并重新训练。</p><p><img src="https://s2.loli.net/2023/06/29/9wMm8X4ps6ABcbV.png" alt="image-20230629230905466"></p><p><img src="https://s2.loli.net/2023/06/29/lLZKirRSwfYnmd1.png" alt="image-20230629230941880"></p><h2 id="六、推理部署">六、推理部署</h2><p>模型训练完成后，可以创建AI应用，将AI应用部署为在线服务。</p><p>1.在ModelArts管理控制台，单击左侧导航栏中的“AI应用管理&gt;AI应用”，进入“我的AI应用”页面，单击“创建”。</p><p>2.在“创建AI应用”页面，填写相关参数，然后单击“立即创建”。</p><p><img src="https://s2.loli.net/2023/06/29/wXh8UasGP9bZpnH.png" alt="image-20230629231226310"></p><p>在AI应用列表页面，当AI应用状态变为“正常”时，表示AI应用创建成功。</p><p><img src="https://s2.loli.net/2023/06/29/jpwGagYP9oNTQ5B.png" alt="image-20230629231336014"></p><p>3.单击AI应用名称左侧的小三角，打开此AI应用下的所有版本。在对应版本所在行，单击操作列“部署&gt;在线服务”，将AI应用部署为在线服务。</p><p><img src="https://s2.loli.net/2023/06/29/vJL2PwY9tOfqAyT.png" alt="image-20230629231358259"></p><p>4.在“部署”页面，参考下图填写参数，然后根据界面提示完成在线服务创建。本案例适用于CPU规格，节点规格需选择CPU</p><p><img src="https://s2.loli.net/2023/06/29/tSvWCTGmoMrquVN.png" alt="image-20230629231456663"></p><p>5.完成服务部署后，返回在线服务页面列表页，等待服务部署完成，当服务状态显示为“运行中”，表示服务已部署成功。</p><p><img src="https://s2.loli.net/2023/06/29/1IXK975vDtoz6ih.png" alt="image-20230629231845274"></p><h2 id="七、预测结果">七、预测结果</h2><p>1.在“在线服务”页面，单击在线服务名称，进入服务详情页面。</p><p>2.单击“预测”页签，请求类型选择“multipart/form-data”，请求参数填写“image”，单击“上传”按钮上传示例图片，然后单击“预测”。</p><p><img src="https://s2.loli.net/2023/06/29/bStYKqk2zsIiuXn.png" alt="image-20230629232128854"></p><h2 id="八、清除资源">八、清除资源</h2><p>如果不再需要使用此模型及在线服务，建议清除相关资源，避免产生不必要的费用。</p><blockquote><p>在“在线服务”页面，“停止”或“删除”刚创建的在线服务。</p><p>在“AI应用管理”页面，“删除”刚创建的AI应用。</p><p>在“训练作业”页面，“删除”运行结束的训练作业。</p><p>进入OBS，删除本示例使用的OBS 桶及文件夹，以及文件夹的文件。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 华为云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 云产品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clion使用ARMClang编译</title>
      <link href="/post/91066fbb.html"/>
      <url>/post/91066fbb.html</url>
      
        <content type="html"><![CDATA[<h1>0 预备环境</h1><p>1.正常使用gcc的环境编译可以运行</p><p>2.STM32CubeMX可以生成  SW4STM32</p><p><img src="https://s2.loli.net/2023/04/16/WnmO4kClq3y6cgB.png" alt="image-20230416104153221"></p><blockquote><p>注意：一定要是SW4STM32  ，不然后期在Clion中无法进行编译</p><p>SW4STM32 在新版本中已经取消，这里提供一个老的版本</p><p>链接：<a href="https://pan.baidu.com/s/1NPl9mFzq8jIvHnfeq4cPZg?pwd=vpck">https://pan.baidu.com/s/1NPl9mFzq8jIvHnfeq4cPZg?pwd=vpck</a><br>提取码：vpck</p></blockquote><p>3.这里使用的是stlink烧录的</p><p>4.参考视频：<a href="https://www.bilibili.com/video/BV1z44y1t7Lg/?share_source=copy_web&amp;vd_source=08ffec12a130bb99e9aac8670b5b9c2f">https://www.bilibili.com/video/BV1z44y1t7Lg/?share_source=copy_web&amp;vd_source=08ffec12a130bb99e9aac8670b5b9c2f</a></p><p>5.上面视频的资料：<a href="https://share.weiyun.com/KdkTFRnp">https://share.weiyun.com/KdkTFRnp</a></p><h1>1 配置ARMCLANG环境</h1><blockquote><p>Keil_v5的安装路径，进入ARM文件夹</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/8LxaQNERi3eMFWn.png" alt="image-20230416104706430"></p><blockquote><p>打开ARMCLANG文件夹</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/LPHndJSUaWeF2t4.png" alt="image-20230416104745716"></p><blockquote><p>打开里面的bin目录，并复制其地址</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/hcaDJnis9Uk6Xx1.png" alt="image-20230416104850085"></p><blockquote><p>在系统环境变量中配置</p></blockquote><p>打开【此电脑】→右键【属性】→【高级系统设置】→【环境变量】</p><p>在path中添加刚才的地址</p><p><img src="https://s2.loli.net/2023/04/16/ob1RVr8tJNdkYh4.png" alt="image-20230416105105904"></p><h1>2 使用CubeMX新建工程</h1><p>此处省略-----</p><blockquote><p>只需要在最后的Toolchain / IDE中选择<strong>SW4STM32</strong>即可</p></blockquote><h1>3 使用Clion打开，修改CMakeLists.txt</h1><blockquote><p>这里会让你选择board,选择下图所示的这个（如果后面烧录出错的话，里面可能需要更改）【如果是F4则选择f4对应的】</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/HFDIPmKTQyzV8oO.png" alt="image-20230416105603944"></p><blockquote><p>打开CMakeLists.txt文件</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/LY4Et3F1fg6rBjH.png" alt="image-20230416105823498"></p><blockquote><p>这一部分是CMakeLists.txt默认生成的，这里需要和你自己的保持一致，所以复制粘贴替换的时候，要从这一部分之下开始，把这一部分之下的内容全部替换成下面的程序</p></blockquote><h2 id="3-1-STM32F1系列替换文件">3.1 STM32F1系列替换文件</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#*************************************************************</span></span><br><span class="line"><span class="comment"># 1. 设定项目名称</span></span><br><span class="line"><span class="comment"># 需要给定 PROJECT_NAME 的值，必须与项目名称一致，否则 MDK 生成 *.sct 时路径不对</span></span><br><span class="line"><span class="keyword">set</span>(PROJECT_NAME demo)</span><br><span class="line"><span class="comment"># 2. 设定芯片类型</span></span><br><span class="line"><span class="comment"># 设定芯片类型，必须正确以 -mcpu 的参数规则命名，后边的编译参数会调用这个值</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_SYSTEM_PROCESSOR Cortex-M3)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># 1. 指定编译器和链接器，避免使用默认的 gcc</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># 设置编译器 C 的编译器</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER armclang.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER_WORKS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 即便用不到C++ 的编译器，还是要显示说明的,否则报错</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER armclang.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER_WORKS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置 ASM 的编译器（不设置配合 -masm=auto 使用）</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_COMPILER armclang.exe)</span><br><span class="line"><span class="comment">#set(CMAKE_ASM_COMPILER armasm.exe)     # 指明 ASM 编译器，配合 第二种 CMAKE_ASM_FLAGS_INIT 方式使用</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_COMPILER_WORKS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置链接器</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_EXECUTABLE armlink.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_LINK_EXECUTABLE armlink.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_LINK_EXECUTABLE armlink.exe)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#*******************************************************************************************#</span></span><br><span class="line"><span class="comment"># 2. 获取芯片地址描述信息</span></span><br><span class="line"><span class="comment"># 获取当前 MCU 的 section 描述，及存储空间和起始地址的描述（注意：需要先用 keil 打开编译一下当前项目才能生成）</span></span><br><span class="line"><span class="comment"># 设置Sections脚本路径,CubeMX生成 MDK 后先编译一下，就会在MDK-ARM 目录下生成工程名命名的文件夹</span></span><br><span class="line"><span class="comment"># 在那个目录里会生成以项目名命名的sct文件。 由于在本地调用，不需要加 global 全局变量标记，更简洁</span></span><br><span class="line"><span class="keyword">set</span>(SECTIONS_SCRIPT_PATH <span class="variable">$&#123;CMAKE_HOME_DIRECTORY&#125;</span>/MDK-ARM/<span class="variable">$&#123;PROJECT_NAME&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.sct)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#********************************************************************************************#</span></span><br><span class="line"><span class="comment"># 3. 设置与芯片对应的 --target 编译选项</span></span><br><span class="line"><span class="comment"># 设置编译时默认参数片段，这些参数参见 MDK 中的配置，注意：Target 分页中要选 6.12 的 ARM 编译器,并抄各分页的 --target 配置</span></span><br><span class="line"><span class="keyword">set</span>(C_TARGET_FLAG --<span class="keyword">target</span>=arm-arm-none-eabi)               <span class="comment"># MDK 的 link 分页中的配置</span></span><br><span class="line"><span class="keyword">set</span>(ASM_TARGET_FLAG --<span class="keyword">target</span>=arm-arm-none-eabi)             <span class="comment"># MDK 的 link 分页中的配置(不支持显示指定 ASM 编译器的方式)</span></span><br><span class="line"><span class="keyword">set</span>(LINKER_TARGET_FLAG --cpu=<span class="variable">$&#123;CMAKE_SYSTEM_PROCESSOR&#125;</span>)     <span class="comment"># MDK 的 link 分页中的配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#********************************************************************************************#</span></span><br><span class="line"><span class="comment"># 4. 设置编译规则，这些规则变量要被外部的 CMakelistes.txt 调用，所以需要用 CACHE STRING &quot;global&quot; 声明为全局变量</span></span><br><span class="line"><span class="comment"># 编译参数，这些编译参数是从 MDK 中来的，具体的含义看 《 armclang Reference Guide 》 第一章节有详细介绍</span></span><br><span class="line"><span class="comment"># 需要注意的是不是 MDK 中的每个参数都要哪进来的，有些参数已经在 include 和 source 中被配置了</span></span><br><span class="line"><span class="keyword">set</span>(COMPILE_RULE_FLAG <span class="string">&quot;-mcpu=$&#123;CMAKE_SYSTEM_PROCESSOR&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C 编译器选项(这里就把MDK中的 C/C++ 分页里最下边一栏的属性贴进来)</span></span><br><span class="line"><span class="comment"># 参数 -w 表示忽略所有警告，不然要配具体忽略哪些警告，尽管贴过来也行，但是太乱</span></span><br><span class="line"><span class="comment"># 优化选项 -O 有 1~3   -Os 是平衡  -Oz 是最小体积</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS_INIT <span class="string">&quot;$&#123;C_TARGET_FLAG&#125; $&#123;COMPILE_RULE_FLAG&#125; \</span></span><br><span class="line"><span class="string">    -xc -std=c99 -fno-rtti -funsigned-char -fshort-enums -fshort-wchar \</span></span><br><span class="line"><span class="string">    -gdwarf-3 -Oz -ffunction-sections -w&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C++ 编译器选项(没有用到 c++ 所以不用配置)</span></span><br><span class="line"><span class="comment">#set(CMAKE_CXX_FLAGS_INIT $&#123;CMAKE_C_FLAGS_INIT&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置ASM编译器选项</span></span><br><span class="line"><span class="comment"># 注意： -masm=auto 选项是 MDK 的 link 分页里没有的参数，需要加上  -g 是debug 用的加不加都行</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_FLAGS_INIT <span class="string">&quot;$&#123;ASM_TARGET_FLAG&#125; $&#123;COMPILE_RULE_FLAG&#125; \</span></span><br><span class="line"><span class="string">        -masm=auto -c -gdwarf-3 &quot;</span>)</span><br><span class="line"><span class="comment"># 第二种方式 配套显示执行 armasm.exe 为 ASM 编译器的方法，看上起更清晰一些</span></span><br><span class="line"><span class="comment">#set(CMAKE_ASM_FLAGS_INIT &quot;$&#123;ASM_TARGET_FLAG&#125; --cpu=Cortex-M3&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置链接器选项</span></span><br><span class="line"><span class="comment"># 这些参数再 ARMCC 文档里么有，但 MDK 的 link 分页有，</span></span><br><span class="line"><span class="comment"># 使用忽略所有警告的配置时没有 --map 及其之后的内容， 这里根据需要保留了一些信息，在 demo.map 中可以看到</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXE_LINKER_FLAGS_INIT  <span class="string">&quot; \</span></span><br><span class="line"><span class="string">            $&#123;LINKER_TARGET_FLAG&#125; \</span></span><br><span class="line"><span class="string">            --strict \</span></span><br><span class="line"><span class="string">            --scatter $&#123;SECTIONS_SCRIPT_PATH&#125; \</span></span><br><span class="line"><span class="string">            --info sizes --info totals --info unused --info veneers \</span></span><br><span class="line"><span class="string">            --summary_stderr \</span></span><br><span class="line"><span class="string">            --info summarysizes&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># project settings</span></span><br><span class="line"><span class="keyword">project</span>(demo C CXX ASM)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD <span class="number">99</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Uncomment for hardware floating point</span></span><br><span class="line"><span class="comment">#add_compile_definitions(ARM_MATH_CM4;ARM_MATH_MATRIX_CHECK;ARM_MATH_ROUNDING)</span></span><br><span class="line"><span class="comment">#add_compile_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)</span></span><br><span class="line"><span class="comment">#add_link_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Uncomment for software floating point</span></span><br><span class="line"><span class="comment">#add_compile_options(-mfloat-abi=soft)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(App Core/Inc RT-Thread Drivers/STM32F1xx_HAL_Driver/Inc/Legacy Drivers/STM32F1xx_HAL_Driver/Inc Drivers/CMSIS/Device/ST/STM32F1xx/<span class="keyword">Include</span> Drivers/CMSIS/<span class="keyword">Include</span> Middlewares/Third_Party/RealThread_RTOS/<span class="keyword">include</span>/ Middlewares/Third_Party/RealThread_RTOS/bsp/_template/cubemx_config)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_definitions</span>(-DUSE_HAL_DRIVER -DSTM32F103xB)</span><br><span class="line"></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE SOURCES <span class="string">&quot;startup/*.*&quot;</span> <span class="string">&quot;RT-Thread/*.*&quot;</span> <span class="string">&quot;Middlewares/*.*&quot;</span> <span class="string">&quot;Drivers/*.*&quot;</span> <span class="string">&quot;Core/*.*&quot;</span> App)</span><br><span class="line"><span class="comment"># 对于混合兼容的环境，需要屏蔽各种编译环境引起的文件“干扰”,通过 list(REMOVE_ITEM) 命令移除不同编译环境下的干扰文件</span></span><br><span class="line"><span class="comment"># 在原来 CubeMX 自动生成的 gcc 编译环境目录上,附加 ARMCC 编译需要的文件</span></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE SOURCES <span class="variable">$&#123;SOURCES&#125;</span> <span class="string">&quot;MDK-ARM/startup_stm32f103xb.s&quot;</span>)</span><br><span class="line"><span class="comment"># 将由 CubeMX 生成的 GCC 编译环境中的会干扰ARMCC环境的文件，放在 EXCLUDE_SRCS 自定义列表中</span></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE EXCLUDE_SRCS</span><br><span class="line">        <span class="string">&quot;Middlewares/Third_Party/RealThread_RTOS/libcpu/arm/cortex-m3/context_gcc.S&quot;</span></span><br><span class="line">        <span class="string">&quot;startup/*.*&quot;</span></span><br><span class="line">        <span class="string">&quot;Core/Src/syscalls.c&quot;</span></span><br><span class="line">        <span class="string">&quot;STM32F103C8Tx_FLASH.ld&quot;</span></span><br><span class="line">        )</span><br><span class="line"><span class="comment"># 从源文件列表(SOURCES)中剔除干扰文件(EXCLUDE_SRCS)</span></span><br><span class="line"><span class="keyword">list</span>(REMOVE_ITEM SOURCES <span class="variable">$&#123;EXCLUDE_SRCS&#125;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> <span class="variable">$&#123;SOURCES&#125;</span> <span class="variable">$&#123;LINKER_SCRIPT&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(HEX_FILE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.hex)</span><br><span class="line"><span class="keyword">set</span>(BIN_FILE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.bin)</span><br><span class="line"><span class="keyword">set</span>(ELF_FILE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.elf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 armclang 自带的 fromelf 工具，实现 elf 转 hex</span></span><br><span class="line"><span class="keyword">set</span>(ARMCC_fromelf fromelf.exe)</span><br><span class="line"><span class="keyword">add_custom_command</span>(<span class="keyword">TARGET</span> <span class="variable">$&#123;PROJECT_NAME&#125;</span> POST_BUILD</span><br><span class="line">        <span class="comment"># 相当于fromelf.exe&quot; --i32combined --output=&quot;xxx/demo.hex&quot; &quot;xxx/demo.elf&quot;</span></span><br><span class="line">        <span class="keyword">COMMAND</span> <span class="variable">$&#123;ARMCC_fromelf&#125;</span> --i32combined --output=<span class="string">&quot;$&#123;HEX_FILE&#125;&quot;</span> <span class="string">&quot;$&#123;ELF_FILE&#125;&quot;</span></span><br><span class="line">        COMMENT <span class="string">&quot;Building $&#123;HEX_FILE&#125;&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="comment">## 使用了 gcc 的 arm-none-eabi-objcopy 工具实现 elf 转 hex 和 bin， 跟 armclang 不是一脉</span></span><br><span class="line"><span class="comment">#set(CMAKE_OBJCOPY arm-none-eabi-objcopy)</span></span><br><span class="line"><span class="comment">#add_custom_command(TARGET $&#123;PROJECT_NAME&#125; POST_BUILD</span></span><br><span class="line"><span class="comment">#        COMMAND $&#123;CMAKE_OBJCOPY&#125; -Oihex $&lt;TARGET_FILE:$&#123;PROJECT_NAME&#125;&gt; $&#123;HEX_FILE&#125;</span></span><br><span class="line"><span class="comment">#        COMMAND $&#123;CMAKE_OBJCOPY&#125; -Obinary $&lt;TARGET_FILE:$&#123;PROJECT_NAME&#125;&gt; $&#123;BIN_FILE&#125;</span></span><br><span class="line"><span class="comment">#        COMMENT &quot;Building $&#123;HEX_FILE&#125; Building $&#123;BIN_FILE&#125;&quot;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-2-STM332F4系列替换文件">3.2 STM332F4系列替换文件</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#THIS FILE IS AUTO GENERATED FROM THE TEMPLATE! DO NOT CHANGE!</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_SYSTEM_NAME Generic)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_SYSTEM_VERSION <span class="number">1</span>)</span><br><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.24</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#*************************************************************</span></span><br><span class="line"><span class="comment"># 1. 设定项目名称</span></span><br><span class="line"><span class="comment"># 需要给定 PROJECT_NAME 的值，必须与项目名称一致，否则 MDK 生成 *.sct 时路径不对</span></span><br><span class="line"><span class="keyword">set</span>(PROJECT_NAME testF4)</span><br><span class="line"><span class="comment"># 2. 设定芯片类型</span></span><br><span class="line"><span class="comment"># 设定芯片类型，必须正确以 -mcpu 的参数规则命名，后边的编译参数会调用这个值</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_SYSTEM_PROCESSOR Cortex-M4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># 1. 指定编译器和链接器，避免使用默认的 gcc</span></span><br><span class="line"><span class="comment">############################################################</span></span><br><span class="line"><span class="comment"># 设置编译器 C 的编译器</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER armclang.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER_WORKS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 即便用不到C++ 的编译器，还是要显示说明的,否则报错</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER armclang.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER_WORKS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置 ASM 的编译器（不设置配合 -masm=auto 使用）</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_COMPILER armclang.exe)</span><br><span class="line"><span class="comment">#set(CMAKE_ASM_COMPILER armasm.exe)     # 指明 ASM 编译器，配合 第二种 CMAKE_ASM_FLAGS_INIT 方式使用</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_COMPILER_WORKS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置链接器</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_EXECUTABLE armlink.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_LINK_EXECUTABLE armlink.exe)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_LINK_EXECUTABLE armlink.exe)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#*******************************************************************************************#</span></span><br><span class="line"><span class="comment"># 2. 获取芯片地址描述信息</span></span><br><span class="line"><span class="comment"># 获取当前 MCU 的 section 描述，及存储空间和起始地址的描述（注意：需要先用 keil 打开编译一下当前项目才能生成）</span></span><br><span class="line"><span class="comment"># 设置Sections脚本路径,CubeMX生成 MDK 后先编译一下，就会在MDK-ARM 目录下生成工程名命名的文件夹</span></span><br><span class="line"><span class="comment"># 在那个目录里会生成以项目名命名的sct文件。 由于在本地调用，不需要加 global 全局变量标记，更简洁</span></span><br><span class="line"><span class="keyword">set</span>(SECTIONS_SCRIPT_PATH <span class="variable">$&#123;CMAKE_HOME_DIRECTORY&#125;</span>/MDK-ARM/<span class="variable">$&#123;PROJECT_NAME&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.sct)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#********************************************************************************************#</span></span><br><span class="line"><span class="comment"># 3. 设置与芯片对应的 --target 编译选项</span></span><br><span class="line"><span class="comment"># 设置编译时默认参数片段，这些参数参见 MDK 中的配置，注意：Target 分页中要选 6.12 的 ARM 编译器,并抄各分页的 --target 配置</span></span><br><span class="line"><span class="keyword">set</span>(C_TARGET_FLAG --<span class="keyword">target</span>=arm-arm-none-eabi)               <span class="comment"># MDK 的 link 分页中的配置</span></span><br><span class="line"><span class="keyword">set</span>(ASM_TARGET_FLAG --<span class="keyword">target</span>=arm-arm-none-eabi)             <span class="comment"># MDK 的 link 分页中的配置(不支持显示指定 ASM 编译器的方式)</span></span><br><span class="line"><span class="keyword">set</span>(LINKER_TARGET_FLAG --cpu=<span class="variable">$&#123;CMAKE_SYSTEM_PROCESSOR&#125;</span>)     <span class="comment"># MDK 的 link 分页中的配置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#********************************************************************************************#</span></span><br><span class="line"><span class="comment"># 4. 设置编译规则，这些规则变量要被外部的 CMakelistes.txt 调用，所以需要用 CACHE STRING &quot;global&quot; 声明为全局变量</span></span><br><span class="line"><span class="comment"># 编译参数，这些编译参数是从 MDK 中来的，具体的含义看 《 armclang Reference Guide 》 第一章节有详细介绍</span></span><br><span class="line"><span class="comment"># 需要注意的是不是 MDK 中的每个参数都要哪进来的，有些参数已经在 include 和 source 中被配置了</span></span><br><span class="line"><span class="keyword">set</span>(COMPILE_RULE_FLAG <span class="string">&quot;-mcpu=$&#123;CMAKE_SYSTEM_PROCESSOR&#125; -mfpu=fpv4-sp-d16 -mfloat-abi=hard -c &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C 编译器选项(这里就把MDK中的 C/C++ 分页里最下边一栏的属性贴进来)</span></span><br><span class="line"><span class="comment"># 参数 -w 表示忽略所有警告，不然要配具体忽略哪些警告，尽管贴过来也行，但是太乱</span></span><br><span class="line"><span class="comment"># 优化选项 -O 有 1~3   -Os 是平衡  -Oz 是最小体积</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS_INIT <span class="string">&quot;$&#123;C_TARGET_FLAG&#125; $&#123;COMPILE_RULE_FLAG&#125; \</span></span><br><span class="line"><span class="string">    -xc -std=c99 -fno-rtti -funsigned-char -fshort-enums -fshort-wchar \</span></span><br><span class="line"><span class="string">    -gdwarf-4 -O1 -ffunction-sections -w&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 C++ 编译器选项(没有用到 c++ 所以不用配置)</span></span><br><span class="line"><span class="comment">#set(CMAKE_CXX_FLAGS_INIT $&#123;CMAKE_C_FLAGS_INIT&#125;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置ASM编译器选项</span></span><br><span class="line"><span class="comment"># 注意： -masm=auto 选项是 MDK 的 link 分页里没有的参数，需要加上  -g 是debug 用的加不加都行</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_FLAGS_INIT <span class="string">&quot;$&#123;ASM_TARGET_FLAG&#125; $&#123;COMPILE_RULE_FLAG&#125; \</span></span><br><span class="line"><span class="string">        -masm=auto -c -gdwarf-4 &quot;</span>)</span><br><span class="line"><span class="comment"># 第二种方式 配套显示执行 armasm.exe 为 ASM 编译器的方法，看上起更清晰一些</span></span><br><span class="line"><span class="comment">#set(CMAKE_ASM_FLAGS_INIT &quot;$&#123;ASM_TARGET_FLAG&#125; --cpu=Cortex-M3&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置链接器选项</span></span><br><span class="line"><span class="comment"># 这些参数再 ARMCC 文档里么有，但 MDK 的 link 分页有，</span></span><br><span class="line"><span class="comment"># 使用忽略所有警告的配置时没有 --map 及其之后的内容， 这里根据需要保留了一些信息，在 testF4.map 中可以看到</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXE_LINKER_FLAGS_INIT  <span class="string">&quot; \</span></span><br><span class="line"><span class="string">            $&#123;LINKER_TARGET_FLAG&#125; \</span></span><br><span class="line"><span class="string">            --strict \</span></span><br><span class="line"><span class="string">            --scatter $&#123;SECTIONS_SCRIPT_PATH&#125; \</span></span><br><span class="line"><span class="string">            --info sizes --info totals --info unused --info veneers \</span></span><br><span class="line"><span class="string">            --summary_stderr \</span></span><br><span class="line"><span class="string">            --info summarysizes&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># project settings</span></span><br><span class="line"><span class="keyword">project</span>(testF4 C CXX ASM)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD <span class="number">99</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Uncomment for hardware floating point</span></span><br><span class="line"><span class="comment">#add_compile_definitions(ARM_MATH_CM4;ARM_MATH_MATRIX_CHECK;ARM_MATH_ROUNDING)</span></span><br><span class="line"><span class="comment">#add_compile_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)</span></span><br><span class="line"><span class="comment">#add_link_options(-mfloat-abi=hard -mfpu=fpv4-sp-d16)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Uncomment for software floating point</span></span><br><span class="line"><span class="comment">#add_compile_options(-mfloat-abi=soft)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(Core/Inc Drivers/STM32F4xx_HAL_Driver/Inc Drivers/STM32F4xx_HAL_Driver/Inc/Legacy Drivers/CMSIS/Device/ST/STM32F4xx/<span class="keyword">Include</span> Drivers/CMSIS/<span class="keyword">Include</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_definitions</span>(-DUSE_HAL_DRIVER -DSTM32F407xx)</span><br><span class="line"></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE SOURCES <span class="string">&quot;startup/*.*&quot;</span> <span class="string">&quot;Drivers/*.*&quot;</span> <span class="string">&quot;Core/*.*&quot;</span>)</span><br><span class="line"><span class="comment"># 对于混合兼容的环境，需要屏蔽各种编译环境引起的文件“干扰”,通过 list(REMOVE_ITEM) 命令移除不同编译环境下的干扰文件</span></span><br><span class="line"><span class="comment"># 在原来 CubeMX 自动生成的 gcc 编译环境目录上,附加 ARMCC 编译需要的文件</span></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE SOURCES <span class="variable">$&#123;SOURCES&#125;</span> <span class="string">&quot;MDK-ARM/startup_stm32f407xx.s&quot;</span>)</span><br><span class="line"><span class="comment"># 将由 CubeMX 生成的 GCC 编译环境中的会干扰ARMCC环境的文件，放在 EXCLUDE_SRCS 自定义列表中</span></span><br><span class="line"><span class="keyword">file</span>(GLOB_RECURSE EXCLUDE_SRCS</span><br><span class="line">        <span class="string">&quot;Middlewares/Third_Party/RealThread_RTOS/libcpu/arm/cortex-m3/context_gcc.S&quot;</span></span><br><span class="line">        <span class="string">&quot;startup/*.*&quot;</span></span><br><span class="line">        <span class="string">&quot;Core/Src/syscalls.c&quot;</span></span><br><span class="line">        <span class="string">&quot;STM32F103C8Tx_FLASH.ld&quot;</span></span><br><span class="line">        )</span><br><span class="line"><span class="comment"># 从源文件列表(SOURCES)中剔除干扰文件(EXCLUDE_SRCS)</span></span><br><span class="line"><span class="keyword">list</span>(REMOVE_ITEM SOURCES <span class="variable">$&#123;EXCLUDE_SRCS&#125;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;PROJECT_NAME&#125;</span> <span class="variable">$&#123;SOURCES&#125;</span> <span class="variable">$&#123;LINKER_SCRIPT&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(HEX_FILE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.hex)</span><br><span class="line"><span class="keyword">set</span>(BIN_FILE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.bin)</span><br><span class="line"><span class="keyword">set</span>(ELF_FILE <span class="variable">$&#123;PROJECT_BINARY_DIR&#125;</span>/<span class="variable">$&#123;PROJECT_NAME&#125;</span>.elf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 armclang 自带的 fromelf 工具，实现 elf 转 hex</span></span><br><span class="line"><span class="keyword">set</span>(ARMCC_fromelf fromelf.exe)</span><br><span class="line"><span class="keyword">add_custom_command</span>(<span class="keyword">TARGET</span> <span class="variable">$&#123;PROJECT_NAME&#125;</span> POST_BUILD</span><br><span class="line">        <span class="comment"># 相当于fromelf.exe&quot; --i32combined --output=&quot;xxx/testF4.hex&quot; &quot;xxx/testF4.elf&quot;</span></span><br><span class="line">        <span class="keyword">COMMAND</span> <span class="variable">$&#123;ARMCC_fromelf&#125;</span> --i32combined --output=<span class="string">&quot;$&#123;HEX_FILE&#125;&quot;</span> <span class="string">&quot;$&#123;ELF_FILE&#125;&quot;</span></span><br><span class="line">        COMMENT <span class="string">&quot;Building $&#123;HEX_FILE&#125;&quot;</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="comment">## 使用了 gcc 的 arm-none-eabi-objcopy 工具实现 elf 转 hex 和 bin， 跟 armclang 不是一脉</span></span><br><span class="line"><span class="comment">#set(CMAKE_OBJCOPY arm-none-eabi-objcopy)</span></span><br><span class="line"><span class="comment">#add_custom_command(TARGET $&#123;PROJECT_NAME&#125; POST_BUILD</span></span><br><span class="line"><span class="comment">#        COMMAND $&#123;CMAKE_OBJCOPY&#125; -Oihex $&lt;TARGET_FILE:$&#123;PROJECT_NAME&#125;&gt; $&#123;HEX_FILE&#125;</span></span><br><span class="line"><span class="comment">#        COMMAND $&#123;CMAKE_OBJCOPY&#125; -Obinary $&lt;TARGET_FILE:$&#123;PROJECT_NAME&#125;&gt; $&#123;BIN_FILE&#125;</span></span><br><span class="line"><span class="comment">#        COMMENT &quot;Building $&#123;HEX_FILE&#125; Building $&#123;BIN_FILE&#125;&quot;)</span></span><br></pre></td></tr></table></figure><h2 id="3-3-替换文件需要注意的事项">3.3 替换文件需要注意的事项</h2><blockquote><p>根据自己项目的不同需要更改的地方</p><img src="https://s2.loli.net/2023/04/16/1LvAqfVnJNoERCj.png" alt="image-20230416110210966" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/16/m2Zs35EjA4xfWJM.png" alt="image-20230416110246331" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/16/DLOE2BpHaRQd1CK.png" alt="image-20230416112227865" style="zoom: 50%;" /></blockquote><h1>4 使用CubeMX生成MDK文件</h1><blockquote><p>打开CubeMX，如果你之前的关了，那么从下面这里进入</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/LJOY25AjrmeUw3q.png" alt="image-20230416110437698"></p><blockquote><p>将SW4STM32换成MDK，然后生成</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/U9doe1A57Y2sQGr.png" alt="image-20230416110646289"></p><blockquote><p>Keil打开生成的工程，并进行编译（这里编译环境要看一下，是不是6.**以上的，如果使用AC5是不行的）</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/kGQOZaRpLrjWENH.png" alt="image-20230416110849413"></p><blockquote><p>编译运行一下，然后就可以关掉Keil了</p></blockquote><h1>5 Clion编译运行测试</h1><blockquote><p>重新加载一下CMakeLists</p></blockquote><img src="https://s2.loli.net/2023/04/16/Bz42VIEeOqSMi81.png" alt="image-20230416111311932" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/16/WlPUQyvew3OYLFZ.png" alt="image-20230416111354506" style="zoom:50%;" /><blockquote><p>如果这里没有出现锤子，那么就进去更换一下文件</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/YSmCAhyId2w61G9.png" alt="image-20230416111029278"></p><p><img src="https://s2.loli.net/2023/04/16/gFHs5kRUmDXCTWr.png" alt="image-20230416111103861"></p><blockquote><p>打开后，点一下，它会自动让你选择正确的，默认的是带.elf的，这里就是选一个不带.elf的</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/qkNtgeZLWhD2Cjn.png" alt="image-20230416111050867"></p><blockquote><p>点击锤子开编译</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/h7fgP1Ga4ynxrH3.png" alt="image-20230416111440107"></p><blockquote><p>点击三角，进行烧录运行</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/rdAv8Gz1fS6amVH.png" alt="image-20230416111652135"></p><blockquote><p>如果出现错误，需要去找一下st_nucleo_f103rb.cfg的位置，并打开</p></blockquote><p><img src="https://s2.loli.net/2023/04/16/sZ1fukti5r6YSmH.png" alt="image-20230416111850366"></p><p><img src="https://s2.loli.net/2023/04/16/XrIGCxPUD78SMlF.png" alt="image-20230416111742908"></p><blockquote><p>再次烧录就可以了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenHarmony一站式开发环境搭建</title>
      <link href="/post/dfa045aa.html"/>
      <url>/post/dfa045aa.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>鸿蒙官方文档（<a href="https://device.harmonyos.com/cn/docs/documentation/guide/service_introduction-0000001050166905">HUAWEI DevEco Device Tool使用指南</a>）</p><p>华为视频教程（<a href="https://developer.huawei.com/consumer/cn/training/course/video/C101639988048536240">华为开发者学堂-HarmonyOS Connect 开发工具系列</a>）</p><p>配合以上教程阅读本文</p></blockquote><h1>一、虚拟机下载安装</h1><p>我这里用的VMware17.0，安装方式参考这篇文章：<a href="https://mp.weixin.qq.com/s/AJ5Rio6aJr_D5NmJMKTRmA">https://mp.weixin.qq.com/s/AJ5Rio6aJr_D5NmJMKTRmA</a></p><h1>二、Ubuntu下载安装</h1><h2 id="2-1下载Ubuntu镜像">2.1下载Ubuntu镜像</h2><p>下载地址：<a href="https://mirrors.huaweicloud.com/home">华为开源镜像站_软件开发服务_华为云 (huaweicloud.com)</a></p><p><img src="https://s2.loli.net/2023/06/10/6LpnQyvIaWZHUEV.png" alt="image-20230610125737728"></p><p>Ubuntu-Releases的镜像地址为：<a href="https://repo.huaweicloud.com/ubuntu-releases/">https://repo.huaweicloud.com/ubuntu-releases/</a></p><img src="https://s2.loli.net/2023/06/10/EuQ4UXLFc6hCYOo.png" alt="image-20230610125755434" style="zoom: 67%;" /><p>这里选择下载的是<code>ubuntu-18.04.6-desktop-amd64.iso</code></p><img src="https://s2.loli.net/2023/06/10/JHtI1vms9POF4qQ.png" alt="image-20230610125829492" style="zoom:50%;" /><img src="https://s2.loli.net/2023/06/10/FsrTShz1R4KloZb.png" alt="image-20230610130421993" style="zoom:50%;" /><h2 id="2-2虚拟机中搭建Ubuntu">2.2虚拟机中搭建Ubuntu</h2><p>1.打开VMware Workstation，在【文件】选项下，找到并点击【新建虚拟机】</p><img src="https://s2.loli.net/2023/06/10/3bDVNASHc9xKCtX.png" alt="image-20230610131252618" style="zoom:50%;" /><p>2.选择【典型】</p><img src="https://s2.loli.net/2023/06/10/qTlfXHcsI5t94bO.png" alt="image-20230610131421989" style="zoom:67%;" /><p>3.选择【稍后安装操作系统】</p><img src="https://s2.loli.net/2023/06/10/9bPLqyzkupIvmSF.png" alt="image-20230610131724458" style="zoom:67%;" /><p>4.操作系统选择 Linux(L)，版本选择 Ubuntu 64位，点击 下一步</p><img src="https://s2.loli.net/2023/06/10/RGeJy4g9TPLtaqD.png" alt="image-20230610131831305" style="zoom:67%;" /><p>5.点击浏览…选择安装位置</p><img src="https://s2.loli.net/2023/06/10/fo9bzIJlvZrDKm7.png" alt="image-20230610132025049" style="zoom:67%;" /><p>6.磁盘容量尽量选择大一些，因为后面拉取源码比较大（直接100G比较好，50G后面好像会提示空间不够，拉取失败）</p><img src="https://s2.loli.net/2023/06/10/JlHhEMXcFGtikNp.png" alt="image-20230610132133558" style="zoom:67%;" /><p>7.点击 【自定义硬件】</p><img src="https://s2.loli.net/2023/06/10/yrfLw8KFO4I7pRt.png" alt="image-20230610132326637" style="zoom:67%;" /><p>8.运行内存建议选择4G</p><img src="https://s2.loli.net/2023/06/10/BDFKjlXbmP5sn2R.png" alt="image-20230610132432860" style="zoom:67%;" /><p>9.处理器可以选择2个或4个，根据自己电脑的配置来</p><img src="https://s2.loli.net/2023/06/10/N1WspEfTeKhUltM.png" alt="image-20230610132549650" style="zoom: 67%;" /><p>10.选择【新CD/DVD(SATA)】，然后选择【使用ISO镜像文件】，点击浏览，选择Ubuntu的ISO镜像</p><img src="https://s2.loli.net/2023/06/10/IY7CHOukSzb4RMg.png" alt="image-20230610132631761" style="zoom:67%;" /><p>11.点击【网络适配器】，网络连接选择【NAT模式】</p><blockquote><p>不要看图片！！！</p></blockquote><img src="https://s2.loli.net/2023/06/10/O8m1SwL52oW9tvi.png" alt="image-20230610132755447" style="zoom:67%;" /><p>12.移除【USB控制器】和【打印机】</p><p><img src="https://s2.loli.net/2023/06/10/lbhzRIx76mfSTdW.png" alt="image-20230610132915299"></p><p>13.移除后点击【关闭】</p><img src="https://s2.loli.net/2023/06/10/yFsGaCXjStvuWJo.png" alt="image-20230610133047636" style="zoom:67%;" /><p>14.点击【完成】</p><img src="https://s2.loli.net/2023/06/10/pzS3Q9AvTE1CZdy.png" alt="image-20230610133122287" style="zoom:67%;" /><h2 id="2-3-Ubuntu安装">2.3 Ubuntu安装</h2><p>1.打开 Ubuntu</p><img src="https://s2.loli.net/2023/06/10/aPFJEC4qoeDROIh.png" alt="image-20230610133315380" style="zoom: 67%;" /><p>2.这里语言选择默认的【英语】，点击【Install Ubuntu】</p><img src="https://s2.loli.net/2023/06/10/kGDit4dW9FsSBmE.png" alt="image-20230610133623902" style="zoom:67%;" /><p>3.后续步骤全部默认，全部点击【Continue】</p><p>4.时区选择【上海】</p><img src="https://s2.loli.net/2023/06/10/1bEc5jCMVk6XAKd.png" alt="image-20230610133841264" style="zoom:67%;" /><p>5.输入用户名、设置密码</p><img src="https://s2.loli.net/2023/06/10/gJRFQ8HeP1pToSV.png" alt="image-20230610134050571" style="zoom: 67%;" /><p>6.等待安装完成</p><p>7.安装完成重启</p><img src="https://s2.loli.net/2023/06/10/MjQNfl6DrP8taK9.png" alt="image-20230610134432484" style="zoom:67%;" /><blockquote><p>如果长时间停留在下面这个页面</p><p><img src="https://s2.loli.net/2023/06/10/L5SsBpfDKjXMENa.png" alt="image-20230610134702101"></p><p>请点击上面的，在里面选择【重启客户机】即可</p><p><img src="https://s2.loli.net/2023/06/10/xagDKTQbHL7NqfG.png" alt="image-20230610135226570"></p></blockquote><h1>三、Ubuntu配置</h1><p>1.登录重启后的系统</p><blockquote><p>安装VMware Tools时报错：</p><p>客户机操作系统已将 CD-ROM 门锁定，并且可能正在使用 CD-ROM，这可能会导致客户机无法识别介质的更改。如果可能，请在断开连接之前从客户机内部弹出 CD-ROM。</p><p><img src="https://s2.loli.net/2023/06/10/fXQs3kP7SEnp1MD.png" alt="image-20230610140856537"></p><p>解决方式：</p><img src="https://s2.loli.net/2023/06/10/zf4jvla6CJe2tI7.png" alt="image-20230610141118479" style="zoom:67%;" /></blockquote><p>2.置超级管理员密码，在命令提示窗口输入<code>sudo passwd</code></p><p><img src="https://s2.loli.net/2023/06/10/tZNo42T1IlfDE6X.png" alt="image-20230610145544156"></p><p>3.更新镜像源<code>sudo apt-get update</code></p><p><img src="https://s2.loli.net/2023/06/10/8UFXK7JMyWrZ6pE.png" alt="image-20230610154119295"></p><blockquote><p>如果连不上网，可以去设置里面将【网络适配器】，改为NAT模式</p></blockquote><p>4.win下拷贝可以到虚拟机中，只需要安装VMwareTools</p><p>如果发现安装完不可以实现复制功能，请参考博客：<a href="https://blog.csdn.net/weixin_52234647/article/details/126331438">(Ubuntu和Windows文件的复制粘贴功能</a></p><blockquote><p>如果在根据博客内容安装时，出现一些问题不能安装，参考这篇博客：<a href="https://blog.csdn.net/fgets__/article/details/113626387">解决方案</a></p></blockquote><h1>四、DevEco Device Tool的开发环境</h1><p>下载：<a href="https://device.harmonyos.com/cn/develop/ide#download">华为集成开发环境IDE DevEco Device Tool下载 | HarmonyOS设备开发</a></p><h2 id="4-1Windows环境">4.1Windows环境</h2><blockquote><p>点击exe安装</p></blockquote><p>1.更改安装路径</p><img src="https://s2.loli.net/2023/06/10/tPZucL4NGIU2aJB.png" alt="image-20230610161030801" style="zoom:67%;" /><p>2.检测环境，如果没有检测到符合要求的Python和VSCode，他会自动安装</p><img src="https://s2.loli.net/2023/06/10/i8QgzsvjtxbUP2A.png" alt="image-20230610161157797" style="zoom:67%;" /><h2 id="4-2Ubuntu环境">4.2Ubuntu环境</h2><p>1.将下载好的<code>devicetool-linux-tool-3.1.0.600.sh</code>安装文件拉到Ubuntu中</p><p><img src="https://s2.loli.net/2023/06/10/BeCE1rWId6A7VKX.png" alt="image-20230610161650440"></p><p>2.在该目录下打开命令提示窗口，输入<code>ls</code>查看该路径下是否有安装文件</p><p><img src="https://s2.loli.net/2023/06/10/xyS5PuBv9Mm2WZs.png" alt="image-20230610162056567"></p><p>3.执行如下命令，赋予安装文件可执行权限</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x devicetool-linux-tool-&#123;Version&#125;.sh</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/hRx6t7cBF5sSm4H.png" alt="image-20230610162219099"></p><p>4.执行如下命令，安装DevEco Device Tool</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./devicetool-linux-tool-&#123;Version&#125;.sh</span><br></pre></td></tr></table></figure><p>5.通过上下键选择第一个，左右键选择OK</p><img src="https://s2.loli.net/2023/06/10/NrVnTiC67xwoAmQ.png" alt="image-20230610162410716"  /><p>6.安装完成后，当界面输出“DevEco Device Tool successfully installed.”时，表示DevEco Device Tool安装成功。</p><p><img src="https://s2.loli.net/2023/06/10/lAzC8wRMijdrvuQ.png" alt="image-20230610163816606"></p><p>7.安装openssh</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/2fjWrTnXi53shpd.png" alt="image-20230610164052791"></p><p>8.启动SSH服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh</span><br></pre></td></tr></table></figure><p>9.获取当前用户的IP地址，复制这个地址，后面需要使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/DHd5GzK69rnMWlL.png" alt="image-20230610164328714"></p><blockquote><p>如果执行ifconfig命令提示“command-not-found”，请执行<strong>sudo apt-get install net-tools</strong>命令安装网络查询工具，然后重新查询IP地址，如果安装过程有问题，请参考这篇博客<a href="https://blog.csdn.net/fgets__/article/details/113626387">解决方案</a></p></blockquote><h2 id="4-3Windows远程访问Ubuntu">4.3Windows远程访问Ubuntu</h2><p>1.打开VSCode</p><p>2.安装Remote SSH插件</p><img src="https://s2.loli.net/2023/06/10/Fuwd5tUTzM3A2SO.png" alt="image-20230610164603867" style="zoom: 67%;" /><p>3.在弹出的SSH连接命令输入框中输入“ssh <em>username</em>@<em>ip_address</em>”，其中ip_address为要连接的远程计算机的IP地址，username为登录远程计算机的帐号。</p><p><img src="https://s2.loli.net/2023/06/10/xYQ7PFOrWEGa1ej.png" alt="image-20230610164757753"></p><p><img src="https://s2.loli.net/2023/06/10/fYxcMImobPs2C5Q.png" alt="image-20230610164840183"></p><p>4.在弹出的输入框中，选择SSH configuration文件，选择默认的第一选项即可。</p><p>5.在SSH TARGETS中，找到远程计算机，打开远程计算机。首次连接时，在弹出的输入框中选择<strong>Linux</strong>，然后再选择<strong>Continue</strong>，然后输入登录远程计算机的密码，连接远程计算机 。</p><blockquote><p>如果打开后出现如下的弹出：</p><p><img src="https://s2.loli.net/2023/06/10/HoCA1l8kiSjn56c.png" alt="image-20230610165606955"></p><p>请打开电脑中的设置，在应用中选择可选功能，然后选择添加功能，安装openssh。</p><img src="https://s2.loli.net/2023/06/10/yOi5a6RkWSp9LzN.png" alt="image-20230610165536769" style="zoom:67%;" /><p>然后再电脑中找到.ssh文件夹，按下图操作</p><p><img src="https://s2.loli.net/2023/06/10/h2QPRjGHrnovbIE.png" alt="image-20230610172804417"></p><p>这里补充一下，权限这里需要设置成【完全控制】，不然后面修改的话会提示权限不够</p><p><img src="https://s2.loli.net/2023/06/10/R5gHydUVkaeS2AI.png" alt="image-20230610210429718"></p></blockquote><p>6.连接成功后，在下面的终端窗口中输入<code>ls</code>查看目录，验证一下</p><p><img src="https://s2.loli.net/2023/06/10/UZsXYNqI9hkAc5F.png" alt="image-20230610173337921"></p><h2 id="4-4远程访问Ubuntu环境的公钥">4.4远程访问Ubuntu环境的公钥</h2><p>1.打开Git bash窗口，输入下面两行指令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub username@ip</span><br></pre></td></tr></table></figure><blockquote><p>中间默认按回车就行，把目录放在默认路径下</p><p>id为用户名，IP为刚才复制的</p></blockquote><p><img src="https://s2.loli.net/2023/06/10/tOx3r9WBfNQHgVU.png" alt="image-20230610174325735"></p><p>2.在config配置文件中添加SSH Key文件信息，如下图所示，然后保存即可</p><p><img src="https://s2.loli.net/2023/06/10/rohSUD9JwRxMTVp.png" alt="image-20230610174514434"></p><p><img src="https://s2.loli.net/2023/06/10/Bft1JdzHnScsgwG.png" alt="image-20230610175050539"></p><h1>五、源码获取</h1><h2 id="5-1前期准备">5.1前期准备</h2><blockquote><p>1.以下步骤可以直接在连接镜像后的VSCode中进行，也可以在Ubuntu中进行</p><p>2.尽量不要使用校园网，使用手机流量，不然拉取源码时容易出现各种错误</p></blockquote><p>1.安装curl</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/3tPqQoMcjRhJ2r1.png" alt="image-20230610181022474"></p><p>2.安装repo</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https:<span class="comment">//gitee.com/oschina/repo/raw/fork_flow/repo-py3&gt; repo</span></span><br></pre></td></tr></table></figure><p>使用<code>cd repo</code>查看生成的文件</p><blockquote><p>如果为空，则直接将链接在浏览器中打开，将文件内容复后，打开Ubuntu，在home下找到repo将内容粘贴进去</p></blockquote><p>3.移动repo文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv repo /usr/local/bin/</span><br></pre></td></tr></table></figure><p>4.添加权限</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+x /usr/local/bin/repo</span><br></pre></td></tr></table></figure><p>5.测试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -i https:<span class="comment">//repo.huaweicloud.com/repository/pypi/simple requests</span></span><br></pre></td></tr></table></figure><p>6.安装git客户端和git-lfs。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git git-lfs</span><br></pre></td></tr></table></figure><p>7.配置用户信息,这里的用户名和邮箱建议是gitte使用的用户名和邮箱</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your-email-address&quot;</span></span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h2 id="5-2拉取源码">5.2拉取源码</h2><p>1.创建OpenHarmony_master文件夹</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p OpenHarmony_master</span><br></pre></td></tr></table></figure><p>2.进入OpenHarmony_master文件夹</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd OpenHarmony_master</span><br></pre></td></tr></table></figure><p>3.拉取源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https:<span class="comment">//gitee.com/openharmony/manifest.git -b master --no-repo-verify</span></span><br><span class="line">repo init -u https:<span class="comment">//gitee.com/openharmony/manifest.git -b refs/tags/OpenHarmony-v3.0-LTS --no-repo-verify</span></span><br><span class="line">repo sync -c</span><br><span class="line">repo forall -c <span class="string">&#x27;git lfs pull&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>报错提示：No such file or directory</p><p>解决方式：</p><p>1.使用<code>which python3</code>找到路径</p><p>2.使用<code>sudo ln -s /usr/bin/python3 /usr/bin/python</code></p><p>3.输入<code>python --version</code>,如果出现版本，则成功</p><p>4.重新执行命令，进行安装</p></blockquote><p>出现下面的界面表示成功</p><p><img src="https://s2.loli.net/2023/06/10/COJtEVIyY4sAu89.png" alt="image-20230610185331396"></p><blockquote><p>如果出现错误，请参考以下内容</p><p><img src="https://s2.loli.net/2023/06/10/ijctZEMPFqTgJHp.png" alt="image-20230610185402267"></p></blockquote><p>4.同步代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo sync -c</span><br></pre></td></tr></table></figure><blockquote><p>时间较长，耐心等待</p></blockquote><blockquote><p>如果出现如下错误或者<code>**error: Cannot ***:ManifestInvalidRevisionError</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl <span class="number">56</span> GnuTLS recv <span class="title function_">error</span> <span class="params">(<span class="number">-9</span>)</span>: A TLS packet with unexpected length was received.</span><br><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">fatal: early EOF</span><br><span class="line">fatal: index-pack failed</span><br></pre></td></tr></table></figure><p>解决方式：</p><p>1.网络不好，这个是最主要的原因</p><p>2.更改设置【最后在使用】(其中ens33是你ifconfig中的IP地址前的，根据自己实际情况设置)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//httpBuffer加大</span></span><br><span class="line">git config --global http.postBuffer <span class="number">524288000</span></span><br><span class="line"><span class="comment">//压缩配置</span></span><br><span class="line">git config --global core.compression <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">sudo ifconfig  ens33 mtu <span class="number">14000</span></span><br></pre></td></tr></table></figure><p>如果上述方法不能解决，那么就更说明网络不好…（我将校园网换成流量就成功了）【使用数据线连接电脑和手机，手机设置通过USB共享网络，网速最好】</p></blockquote><p>5.拉取大文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo forall -c <span class="string">&#x27;git lfs pull&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="5-3执行prebuilts">5.3执行prebuilts</h2><p>在源码根目录下执行prebuilts脚本，安装编译器及二进制工具。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash build/prebuilts_download.sh</span><br></pre></td></tr></table></figure><blockquote><p>中间如果提示pip版本过低，则升级一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip -i https:<span class="comment">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure><p>如果升不上去，参考这篇博客，升级Python版本：<a href="https://blog.csdn.net/Lijingru8/article/details/120193590"> 将Python升级到3.6版本以上（Ubuntu）</a></p></blockquote><h1>写在最后</h1><blockquote><p>我搭建完环境后，在VSCode里面去编译项目时没有成功，找了很久也没能解决这个问题，所以短期内打算先不使用这个一站式开发了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BearPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>郑州轻工业大学2022-2023（2）数据结构题目集</title>
      <link href="/post/ca5fa603.html"/>
      <url>/post/ca5fa603.html</url>
      
        <content type="html"><![CDATA[<h1>6-1 线性表元素的区间删除</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Delete</span><span class="params">(List L, ElementType minD, ElementType maxD)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= L-&gt;Last; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;Data[i] &lt;= minD || L-&gt;Data[i] &gt;= maxD) &#123;</span><br><span class="line">            L-&gt;Data[p++] = L-&gt;Data[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;Last = p - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-2 有序表的插入</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ListInsertSort</span><span class="params">(SqList *L, DataType x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> temp = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; L-&gt;items[i] &lt; x; i++) &#123;</span><br><span class="line">        temp++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ListInsert(L, temp, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-3 合并两个有序数组</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> m, <span class="type">int</span> *b, <span class="type">int</span> n, <span class="type">int</span> *c)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m &amp;&amp; j &lt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; b[j])</span><br><span class="line">            c[k++] = a[i++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            c[k++] = b[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) &#123;</span><br><span class="line">        c[k++] = a[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; n) &#123;</span><br><span class="line">        c[k++] = b[j++];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-4 顺序表操作集</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">MakeEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    List <span class="built_in">list</span>;</span><br><span class="line">    <span class="built_in">list</span> = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    <span class="built_in">list</span>-&gt;Last = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Position <span class="title function_">Find</span><span class="params">(List L, ElementType X)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXSIZE; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;Data[i] == X)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">Insert</span><span class="params">(List L, ElementType X, Position P)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (L-&gt;Last == MAXSIZE - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;FULL&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (P &lt; <span class="number">0</span> || P &gt; L-&gt;Last + <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ILLEGAL POSITION&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = L-&gt;Last; i &gt;= P; i--) &#123;</span><br><span class="line">        L-&gt;Data[i + <span class="number">1</span>] = L-&gt;Data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;Data[P] = X;</span><br><span class="line">    L-&gt;Last++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">Delete</span><span class="params">(List L, Position P)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (P &lt; <span class="number">0</span> || P &gt; L-&gt;Last) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;POSITION %d EMPTY&quot;</span>, P);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = P; i &lt; L-&gt;Last; i++) &#123;</span><br><span class="line">        L-&gt;Data[i] = L-&gt;Data[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;Last--;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-5 递增的整数序列链表的插入</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Insert</span><span class="params">(List L, ElementType X)</span> &#123;</span><br><span class="line">    List p, s;</span><br><span class="line">    p = L;</span><br><span class="line">    s = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    s-&gt;Data = X;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p-&gt;Next &amp;&amp; p-&gt;Next-&gt;Data &lt; X) &#123;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    s-&gt;Next = p-&gt;Next;</span><br><span class="line">    p-&gt;Next = s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-6 删除单链表偶数节点</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">createlist</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">p</span>, *<span class="title">s</span>, *<span class="title">l</span>;</span></span><br><span class="line">    p = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    p-&gt;data = m;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    s = p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        l = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line">        l-&gt;data = m;</span><br><span class="line">        l-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        s-&gt;next = l;</span><br><span class="line">        s = l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">deleteeven</span><span class="params">(<span class="keyword">struct</span> ListNode *head)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">p</span> =</span> <span class="literal">NULL</span>, *s = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (head &amp;&amp; head-&gt;data % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        p = head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    s = head;</span><br><span class="line">    <span class="keyword">while</span> (s-&gt;next) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s-&gt;next-&gt;data % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            s-&gt;next = s-&gt;next-&gt;next;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s = s-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-7 逆序数据建立链表</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">createlist</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">head</span>, *<span class="title">p</span>;</span></span><br><span class="line">    head = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        p = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line">        p-&gt;next = head-&gt;next;</span><br><span class="line">        p-&gt;data = m;</span><br><span class="line">        head-&gt;next = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head-&gt;next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-8 求链表的倒数第m个元素</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ElementType <span class="title function_">Find</span><span class="params">(List L, <span class="type">int</span> m)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    PtrToNode p, s;</span><br><span class="line">    p = s = L;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">        <span class="keyword">if</span> (!p)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        s = s-&gt;Next;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s-&gt;Data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-9 两个有序链表序列的合并</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Merge</span><span class="params">( List L1, List L2 )</span></span><br><span class="line">&#123;</span><br><span class="line">    List pa,pb,pc;</span><br><span class="line">    pa=L1-&gt;Next;</span><br><span class="line">    pb=L2-&gt;Next;</span><br><span class="line">    List L=(List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">    pc=L;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(pa&amp;&amp;pb)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;Data&gt;pb-&gt;Data)</span><br><span class="line">        &#123;</span><br><span class="line">            pc-&gt;Next=pb;</span><br><span class="line">            pb=pb-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            pc-&gt;Next=pa;</span><br><span class="line">            pa=pa-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">        pc=pc-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(pa)</span><br><span class="line">        pc-&gt;Next = pa;</span><br><span class="line">    <span class="keyword">if</span>(pb)</span><br><span class="line">        pc-&gt;Next = pb;</span><br><span class="line">    L1-&gt;Next=<span class="literal">NULL</span>;</span><br><span class="line">    L2-&gt;Next=<span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-10 二叉树的遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InorderTraversal</span><span class="params">(BinTree BT)</span> &#123;<span class="comment">//中序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        InorderTraversal(BT-&gt;Left);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, BT-&gt;Data);</span><br><span class="line">        InorderTraversal(BT-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreorderTraversal</span><span class="params">(BinTree BT)</span> &#123;<span class="comment">//先序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, BT-&gt;Data);</span><br><span class="line">        PreorderTraversal(BT-&gt;Left);</span><br><span class="line">        PreorderTraversal(BT-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PostorderTraversal</span><span class="params">(BinTree BT)</span> &#123;<span class="comment">//后序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        PostorderTraversal(BT-&gt;Left);</span><br><span class="line">        PostorderTraversal(BT-&gt;Right);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, BT-&gt;Data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LevelorderTraversal</span><span class="params">(BinTree BT)</span> &#123;</span><br><span class="line">    BinTree B[<span class="number">100</span>];<span class="comment">//结构体数组</span></span><br><span class="line">    BinTree T;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!BT)<span class="keyword">return</span>;<span class="comment">//树为空，返回</span></span><br><span class="line">    <span class="keyword">if</span> (BT)<span class="comment">//不为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        B[i++] = BT;<span class="comment">//根节点入队</span></span><br><span class="line">        <span class="keyword">while</span> (i != j)<span class="comment">//队列不空</span></span><br><span class="line">        &#123;</span><br><span class="line">            T = B[j++];<span class="comment">//出队</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, T-&gt;Data);</span><br><span class="line">            <span class="keyword">if</span> (T-&gt;Left) B[i++] = T-&gt;Left;</span><br><span class="line">            <span class="keyword">if</span> (T-&gt;Right) B[i++] = T-&gt;Right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1>6-11 二叉树的非递归遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InorderTraversal</span><span class="params">( BinTree BT )</span>&#123;<span class="comment">//中序遍历</span></span><br><span class="line">    BinTree T=BT;</span><br><span class="line">    Stack S =CreateStack();</span><br><span class="line">    <span class="keyword">while</span>(T||!IsEmpty(S))&#123;</span><br><span class="line">        <span class="keyword">while</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            Push(S,T);</span><br><span class="line">            T=T-&gt;Left;</span><br><span class="line">        &#125;</span><br><span class="line">        T=Pop(S);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>,T-&gt;Data);</span><br><span class="line">        T=T-&gt;Right;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PreorderTraversal</span><span class="params">( BinTree BT )</span>&#123;<span class="comment">//先序遍历</span></span><br><span class="line">    BinTree T=BT;</span><br><span class="line">    Stack S =CreateStack();</span><br><span class="line">    <span class="keyword">while</span>(T||!IsEmpty(S))&#123;</span><br><span class="line">        <span class="keyword">while</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            Push(S,T);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>,T-&gt;Data);</span><br><span class="line">            T=T-&gt;Left;</span><br><span class="line">        &#125;</span><br><span class="line">        T=Pop(S);</span><br><span class="line">        T=T-&gt;Right;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PostorderTraversal</span><span class="params">( BinTree BT )</span>&#123;<span class="comment">//后序遍历</span></span><br><span class="line">    BinTree T=BT;</span><br><span class="line">    Stack S =CreateStack();</span><br><span class="line">    <span class="keyword">while</span>(T||!IsEmpty(S))&#123;</span><br><span class="line">        <span class="keyword">while</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            T-&gt;flag=<span class="number">0</span>;</span><br><span class="line">            Push(S,T);</span><br><span class="line">            T=T-&gt;Left;</span><br><span class="line">        &#125;</span><br><span class="line">        T=Peek(S);</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;flag==<span class="number">0</span>)&#123;</span><br><span class="line">            T-&gt;flag++;</span><br><span class="line">            T=T-&gt;Right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            T=Pop(S);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>,T-&gt;Data);</span><br><span class="line">            T=<span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-12 求二叉树高度</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">GetHeight</span><span class="params">(BinTree BT)</span> &#123;</span><br><span class="line">    <span class="type">int</span> lNum, rNum, Height;</span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        lNum = GetHeight(BT-&gt;Left);</span><br><span class="line">        rNum = GetHeight(BT-&gt;Right);</span><br><span class="line">        <span class="keyword">if</span> (lNum &gt; rNum)</span><br><span class="line">            Height = lNum;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Height = rNum;</span><br><span class="line">        <span class="keyword">return</span> Height + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-13 邻接矩阵存储图的深度优先遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DFS</span><span class="params">(MGraph Graph, Vertex V, <span class="type">void</span> (*Visit)(Vertex))</span> &#123;</span><br><span class="line">    Vertex i;</span><br><span class="line">    Visit(V);</span><br><span class="line">    Visited[V] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Graph-&gt;Nv; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Graph-&gt;G[V][i] == <span class="number">1</span> &amp;&amp; !Visited[i]) &#123;</span><br><span class="line">            DFS(Graph, i, Visit);<span class="comment">//进行递归</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>6-14 邻接表存储图的广度优先遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">BFS</span><span class="params">(LGraph Graph, Vertex S, <span class="type">void</span> (*Visit)(Vertex))</span> &#123;</span><br><span class="line">    Visited[S] = <span class="literal">true</span>;<span class="comment">//标记起始点</span></span><br><span class="line">    Visit(S);</span><br><span class="line">    <span class="type">int</span> <span class="built_in">queue</span>[<span class="number">1000</span>], front = <span class="number">0</span>, rear = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">queue</span>[rear++] = S;<span class="comment">//起始点入队列</span></span><br><span class="line">    PtrToAdjVNode temp;<span class="comment">//temp就代表当前点的邻接点的下标</span></span><br><span class="line">    <span class="keyword">while</span> (front &lt; rear) &#123;<span class="comment">//队伍不为空</span></span><br><span class="line">        temp = Graph-&gt;G[<span class="built_in">queue</span>[front++]].FirstEdge;</span><br><span class="line">        <span class="keyword">while</span> (temp) &#123;</span><br><span class="line">            <span class="type">int</span> p = temp-&gt;AdjV;<span class="comment">//把temp中的下标提取出来</span></span><br><span class="line">            <span class="keyword">if</span> (!Visited[p]) &#123;<span class="comment">//如果p点没有被标记的话</span></span><br><span class="line">                Visited[p] = <span class="literal">true</span>;</span><br><span class="line">                Visit(p);</span><br><span class="line">                <span class="built_in">queue</span>[rear++] = p;<span class="comment">//储存在队列中</span></span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp-&gt;Next;<span class="comment">//指向下一个邻接点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-1 一元多项式的乘法与加法运算</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">List</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></span><br><span class="line">    ElementType coe;<span class="comment">//系数</span></span><br><span class="line">    ElementType <span class="built_in">exp</span>;<span class="comment">//指数</span></span><br><span class="line">    List Next;<span class="comment">//下一个节点</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(List L, ElementType coe, ElementType <span class="built_in">exp</span>)</span>;<span class="comment">//插入</span></span><br><span class="line">List <span class="title function_">Multi</span><span class="params">(List p1, List p2)</span>;<span class="comment">//乘法</span></span><br><span class="line">List <span class="title function_">Plus</span><span class="params">(List p1, List p2)</span>;<span class="comment">//加法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(List p1, List p2)</span>;<span class="comment">//比较系数大小</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    List p1, p2;</span><br><span class="line">    List p;</span><br><span class="line">    <span class="type">int</span> num1, num2, coe, <span class="built_in">exp</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    p1 = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p2 = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p1-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    p2-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num1);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num1; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;coe, &amp;<span class="built_in">exp</span>);</span><br><span class="line">        Insert(p1, coe, <span class="built_in">exp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num2);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num2; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;coe, &amp;<span class="built_in">exp</span>);</span><br><span class="line">        Insert(p2, coe, <span class="built_in">exp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//乘法运算</span></span><br><span class="line">    p = Multi(p1-&gt;Next, p2-&gt;Next);</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;Next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d &quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);<span class="comment">//非最后一个节点,不换行打印,后接空格</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);<span class="comment">//最后一个节点,换行打印</span></span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加法运算</span></span><br><span class="line">    p = Plus(p1-&gt;Next, p2-&gt;Next);</span><br><span class="line">    <span class="keyword">if</span> (p) &#123;</span><br><span class="line">        <span class="keyword">while</span> (p) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;Next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d &quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            p = p-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//防止出现p1,p2抵消为零的情况</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0 0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向链表中添加元素</span></span><br><span class="line"><span class="comment"> * @param L 需要添加的链表</span></span><br><span class="line"><span class="comment"> * @param coefficient 系数</span></span><br><span class="line"><span class="comment"> * @param exponent 指数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(List L, ElementType coe, ElementType <span class="built_in">exp</span>)</span> &#123;</span><br><span class="line">    List s, p;</span><br><span class="line">    p = L;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p-&gt;Next)<span class="comment">//找到最后一个节点</span></span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line"></span><br><span class="line">    s = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    s-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    s-&gt;coe = coe;</span><br><span class="line">    s-&gt;<span class="built_in">exp</span> = <span class="built_in">exp</span>;</span><br><span class="line"></span><br><span class="line">    p-&gt;Next = s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个多项式相乘</span></span><br><span class="line"><span class="comment"> * @param p1 代表多项式1的链表</span></span><br><span class="line"><span class="comment"> * @param p2 代表多项式2的链表</span></span><br><span class="line"><span class="comment"> * @return p 相乘后生成的新链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List <span class="title function_">Multi</span><span class="params">(List p1, List p2)</span> &#123;</span><br><span class="line">    List p, p1a, p2a, s;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    p = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    p1a = p1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p1a) &#123;</span><br><span class="line">        p2a = p2;<span class="comment">//确保p1多项式中的每一项可以与p2多项式中的每一项分别相乘</span></span><br><span class="line">        s = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">        s-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (p2a) &#123;<span class="comment">//与p2多项式中的每一项分别相乘</span></span><br><span class="line">            Insert(s, p1a-&gt;coe * p2a-&gt;coe, p1a-&gt;<span class="built_in">exp</span> + p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">            p2a = p2a-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">        s = s-&gt;Next;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            p = p-&gt;Next;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 如果是p1第一项与p2每一项相乘,那么先将链表p向后移一位,将头结点屏蔽</span></span><br><span class="line"><span class="comment">             * 因为默认初始化的P1头结点有默认的exp = 0,coe = 0,这两个数据是多余的</span></span><br><span class="line"><span class="comment">             * 如果不后移,那么头结点默认的数值0将会一直尾随整个乘法运算,导致最后的结果后面多两个0 0</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        p = Plus(p, s);<span class="comment">//相加,确保同类项合并</span></span><br><span class="line">        p1a = p1a-&gt;Next;</span><br><span class="line">        <span class="built_in">free</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较两多项式指数大小</span></span><br><span class="line"><span class="comment"> * @param p1 代表多项式1的链表</span></span><br><span class="line"><span class="comment"> * @param p2 代表多项式2的链表</span></span><br><span class="line"><span class="comment"> * @return 返回值为0时表示两指数相同,可以进行加法运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(List p1, List p2)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (p1-&gt;<span class="built_in">exp</span> &gt; p2-&gt;<span class="built_in">exp</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//p1指数大</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (p1-&gt;<span class="built_in">exp</span> &lt; p2-&gt;<span class="built_in">exp</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//p1指数小</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//指数相同</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个多项式相加</span></span><br><span class="line"><span class="comment"> * @param p1 代表多项式1的链表</span></span><br><span class="line"><span class="comment"> * @param p2 代表多项式2的链表</span></span><br><span class="line"><span class="comment"> * @return p 相加后生成的新链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List <span class="title function_">Plus</span><span class="params">(List p1, List p2)</span> &#123;</span><br><span class="line">    List p, p1a, p2a;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    p = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    p1a = p1;</span><br><span class="line">    p2a = p2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p1a &amp;&amp; p2a) &#123;</span><br><span class="line">        temp = compare(p1a, p2a);</span><br><span class="line">        <span class="comment">//判断指数大小,同指数才可以运算</span></span><br><span class="line">        <span class="keyword">switch</span> (temp) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="comment">//当前p1a的指数大,将当前p1a的数据放入新链表</span></span><br><span class="line">                Insert(p, p1a-&gt;coe, p1a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">                p1a = p1a-&gt;Next;<span class="comment">//p1a向后移动,p2a不改变</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">                <span class="comment">//当前p2a的指数大,将当前p2a的数据放入新链表</span></span><br><span class="line">                Insert(p, p2a-&gt;coe, p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">                p2a = p2a-&gt;Next;<span class="comment">//p2a向后移动,p1a不改变</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="comment">//指数相同,进行运算</span></span><br><span class="line">                <span class="keyword">if</span> ((p1a-&gt;coe + p2a-&gt;coe) == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//系数为0,数据不放入新链表,直接将p1a和p2a后移</span></span><br><span class="line">                    p1a = p1a-&gt;Next;</span><br><span class="line">                    p2a = p2a-&gt;Next;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//数据放入新链表,p1a和p2a后移</span></span><br><span class="line">                    Insert(p, p1a-&gt;coe + p2a-&gt;coe, p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">                    p1a = p1a-&gt;Next;</span><br><span class="line">                    p2a = p2a-&gt;Next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p1a) &#123;</span><br><span class="line">        <span class="comment">//p1a的项数多,将剩余项放入链表</span></span><br><span class="line">        Insert(p, p1a-&gt;coe, p1a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">        p1a = p1a-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p2a) &#123;</span><br><span class="line">        <span class="comment">//p2a的项数多,将剩余项放入链表</span></span><br><span class="line">        Insert(p, p2a-&gt;coe, p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">        p2a = p2a-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    p = p-&gt;Next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-2 符号配对</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Maxsize 105</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> *<span class="title">Stack</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">    <span class="type">char</span> *<span class="built_in">array</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Stack <span class="title function_">creat</span><span class="params">()</span>;<span class="comment">//创建空栈</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cheekEmpty</span><span class="params">(Stack s)</span>;<span class="comment">//判断栈是否为空</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">push</span><span class="params">(Stack s, <span class="type">char</span> x)</span>;<span class="comment">//添加新元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pop</span><span class="params">(Stack s)</span>;<span class="comment">//删除</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">top</span><span class="params">(Stack s)</span>;<span class="comment">//取出</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> str[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    Stack s = creat();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (gets(str)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">&#x27;.&#x27;</span> &amp;&amp; !str[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>( i=<span class="number">0</span>; str[i]; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;(&#x27;</span>||str[i]==<span class="string">&#x27;[&#x27;</span>||str[i]==<span class="string">&#x27;&#123;&#x27;</span>||str[i]==<span class="string">&#x27;)&#x27;</span>||str[i]==<span class="string">&#x27;&#125;&#x27;</span> ||str[i]==<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">                a[j++]=str[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;/&#x27;</span>&amp;&amp;str[i+<span class="number">1</span>]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                a[j++]=<span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;*&#x27;</span>&amp;&amp;str[i+<span class="number">1</span>]==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">                a[j++]=<span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="string">&#x27;(&#x27;</span> || a[i] == <span class="string">&#x27;[&#x27;</span> || a[i] == <span class="string">&#x27;&#123;&#x27;</span> || a[i] == <span class="string">&#x27;&lt;&#x27;</span>) &#123;</span><br><span class="line">            push(s, a[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                pop(s);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;]&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;[&#x27;</span>) pop(s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;&#125;&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;&#123;&#x27;</span>) pop(s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;&gt;&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;&lt;&#x27;</span>) pop(s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!flag &amp;&amp; cheekEmpty(s)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!cheekEmpty(s)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (top(s) == <span class="string">&#x27;&lt;&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;/*-?\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c-?\n&quot;</span>, top(s));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;&gt;&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;?-*/\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;?-%c\n&quot;</span>, ch);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建新栈</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Stack <span class="title function_">creat</span><span class="params">()</span> &#123;</span><br><span class="line">    Stack s = (Stack) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> StackRecord));</span><br><span class="line">    s-&gt;top = <span class="number">-1</span>;</span><br><span class="line">    s-&gt;<span class="built_in">array</span> = (<span class="type">char</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">char</span>) * Maxsize);</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否为空栈</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cheekEmpty</span><span class="params">(Stack s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s-&gt;top == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *添加元素</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> * @param x</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">push</span><span class="params">(Stack s, <span class="type">char</span> x)</span> &#123;</span><br><span class="line">    s-&gt;<span class="built_in">array</span>[++(s-&gt;top)] = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *删除</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pop</span><span class="params">(Stack s)</span> &#123;</span><br><span class="line">    s-&gt;top--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *取出</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">top</span><span class="params">(Stack s)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> s-&gt;<span class="built_in">array</span>[s-&gt;top];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-3 银行业务队列简单模拟</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a[MAX], b[MAX], cnta, cntb;</span><br><span class="line">    cnta = cntb = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">        <span class="keyword">if</span> (temp % <span class="number">2</span>) a[++cnta] = temp;</span><br><span class="line">        <span class="keyword">else</span> b[++cntb] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>, x = <span class="number">1</span>, y = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= cnta || y &lt;= cntb) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= cnta) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag++) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[x++]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= cnta) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag++) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[x++]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y &lt;= cntb) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag++) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, b[y++]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>7-4 顺序存储的二叉树的最近的公共祖先问题</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i, j, m;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a[i] == <span class="number">0</span>)<span class="comment">//查错</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ERROR: T[%d] is NULL\n&quot;</span>, i);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[j] == <span class="number">0</span>)<span class="comment">//查错</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ERROR: T[%d] is NULL\n&quot;</span>, j);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    m = find(i, j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, m, a[m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查找公共祖先,二分查找</span></span><br><span class="line"><span class="comment"> * @param i </span></span><br><span class="line"><span class="comment"> * @param j </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &gt; j) &#123;</span><br><span class="line">        <span class="keyword">return</span> find(i / <span class="number">2</span>, j);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">return</span> find(i, j / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-5 修理牧场</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">HuffmanTreeNode</span> &#123;</span></span><br><span class="line">    ElemType data;  <span class="comment">//哈夫曼树中节点的权值</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">HuffmanTreeNode</span> *<span class="title">left</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">HuffmanTreeNode</span> *<span class="title">right</span>;</span></span><br><span class="line">&#125; HuffmanTreeNode, *HuffmanTree;</span><br><span class="line"></span><br><span class="line">HuffmanTree <span class="title function_">createHuffmanTree</span><span class="params">(ElemType arr[], <span class="type">int</span> N)</span> &#123;</span><br><span class="line">    HuffmanTree treeArr[N];</span><br><span class="line">    HuffmanTree tree, pRoot = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;  <span class="comment">//初始化结构体指针数组,数组中每一个元素为一个结构体指针类型</span></span><br><span class="line">        tree = (HuffmanTree) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HuffmanTreeNode));</span><br><span class="line">        tree-&gt;data = arr[i];</span><br><span class="line">        tree-&gt;left = tree-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">        treeArr[i] = tree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;  <span class="comment">//进行 n-1 次循环建立哈夫曼树</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//k1为当前数组中第一个非空树的索引，k2为第二个非空树的索引</span></span><br><span class="line">        <span class="type">int</span> k1 = <span class="number">-1</span>, k2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (treeArr[j] != <span class="literal">NULL</span> &amp;&amp; k1 == <span class="number">-1</span>) &#123;</span><br><span class="line">                k1 = j;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (treeArr[j] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                k2 = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//循环遍历当前数组，找出最小值索引k1,和次小值索引k2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = k2; j &lt; N; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (treeArr[j] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (treeArr[j]-&gt;data &lt; treeArr[k1]-&gt;data) &#123;<span class="comment">//最小</span></span><br><span class="line">                    k2 = k1;</span><br><span class="line">                    k1 = j;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (treeArr[j]-&gt;data &lt; treeArr[k2]-&gt;data) &#123;<span class="comment">//次小</span></span><br><span class="line">                    k2 = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//由最小权值树和次最小权值树建立一棵新树,pRoot指向树根结点</span></span><br><span class="line">        pRoot = (HuffmanTree) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HuffmanTreeNode));</span><br><span class="line">        pRoot-&gt;data = treeArr[k1]-&gt;data + treeArr[k2]-&gt;data;</span><br><span class="line">        pRoot-&gt;left = treeArr[k1];</span><br><span class="line">        pRoot-&gt;right = treeArr[k2];</span><br><span class="line"></span><br><span class="line">        treeArr[k1] = pRoot; <span class="comment">//将新生成的数加入到数组中k1的位置</span></span><br><span class="line">        treeArr[k2] = <span class="literal">NULL</span>; <span class="comment">//k2位置为空</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pRoot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ElemType <span class="title function_">calculateWeightLength</span><span class="params">(HuffmanTree ptrTree, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ptrTree == <span class="literal">NULL</span>) &#123; <span class="comment">//空树返回0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ptrTree-&gt;left == <span class="literal">NULL</span> &amp;&amp; ptrTree-&gt;right == <span class="literal">NULL</span>) &#123; <span class="comment">//访问到叶子节点</span></span><br><span class="line">            <span class="keyword">return</span> ptrTree-&gt;data * len;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> calculateWeightLength(ptrTree-&gt;left, len + <span class="number">1</span>) + calculateWeightLength(ptrTree-&gt;right, len + <span class="number">1</span>); <span class="comment">//向下递归计算</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ElemType arr[<span class="number">10001</span>];</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; N)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i++]);</span><br><span class="line"></span><br><span class="line">    HuffmanTree pRoot = createHuffmanTree(arr, N);  <span class="comment">//返回指向哈夫曼树根节点的指针</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, calculateWeightLength(pRoot, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-6 公路村村通</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> fa[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> l;</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">&#125; Node;</span><br><span class="line"></span><br><span class="line">Node p[<span class="number">3005</span>];</span><br><span class="line"><span class="type">int</span> n, m, sum, cnt;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">cmp</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    Node *p1 = (Node *) a;</span><br><span class="line">    Node *p2 = (Node *) b;</span><br><span class="line">    <span class="keyword">return</span> p1-&gt;weight - p2-&gt;weight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Find</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (x == fa[x]) ? (x) : (fa[x] = Find(fa[x]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Union</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    fa[Find(x)] = Find(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        fa[i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;p[i].l, &amp;p[i].r, &amp;p[i].weight);</span><br><span class="line">    qsort(p, m, <span class="keyword">sizeof</span>(Node), cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Find(p[i].l) != Find(p[i].r)) &#123;</span><br><span class="line">            sum += p[i].weight;</span><br><span class="line">            Union(p[i].l, p[i].r);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt == n - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt == n - <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-7 畅通工程之最低成本建设问题</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">path</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">&#125; p[<span class="number">3000</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">1001</span>], n, m;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) f[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">getf</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (f[k] == k) <span class="keyword">return</span> f[k];</span><br><span class="line">    <span class="keyword">return</span> f[k] = getf(f[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">cmp</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">struct</span> path *) a)-&gt;c - ((<span class="keyword">struct</span> path *) b)-&gt;c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;p[i].a, &amp;p[i].b, &amp;p[i].c);</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(p, m, <span class="keyword">sizeof</span>(p[<span class="number">0</span>]), cmp);</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (getf(p[i].a) != getf(p[i].b)) &#123;</span><br><span class="line">            ans += p[i].c;</span><br><span class="line">            c++;</span><br><span class="line">            f[getf(p[i].a)] = getf(p[i].b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c &lt; n - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;Impossible\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-8 最短工期</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, ans;</span><br><span class="line"><span class="type">int</span> mp[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> l[<span class="number">100</span>], q[<span class="number">100</span>], t[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, head = <span class="number">0</span>, tail = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(mp, <span class="number">-1</span>, <span class="keyword">sizeof</span>(mp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        mp[a][b] = c;</span><br><span class="line">        l[b]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!l[i]) &#123;</span><br><span class="line">            q[tail++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">        <span class="type">int</span> temp = q[head++];</span><br><span class="line">        <span class="keyword">if</span> (t[temp] &gt; ans) ans = t[temp];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mp[temp][i] != <span class="number">-1</span>) &#123;</span><br><span class="line">                l[i]--;</span><br><span class="line">                <span class="keyword">if</span> (!l[i]) q[tail++] = i;</span><br><span class="line">                <span class="keyword">if</span> (t[i] &lt; t[temp] + mp[temp][i]) &#123;</span><br><span class="line">                    t[i] = t[temp] + mp[temp][i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tail &lt; n) <span class="built_in">printf</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-9 哈利·波特的考试</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-9 哈利·波特的考试</span></span><br><span class="line"><span class="comment"> *  最短路径     迪杰斯特拉算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxInt 2147483647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> arcs[<span class="number">102</span>][<span class="number">102</span>];</span><br><span class="line">    <span class="type">int</span> vexnum, arcnum;</span><br><span class="line">&#125; MGraph;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> final[<span class="number">102</span>];<span class="comment">//final[w]=1表示求得顶点v0至vw的最短路径 </span></span><br><span class="line"><span class="type">int</span> D[<span class="number">102</span>];  <span class="comment">//记录v0到vi的当前最短路径长度</span></span><br><span class="line"><span class="type">int</span> P[<span class="number">102</span>]; <span class="comment">//记录v0到vi的当前最短路径vi的前驱</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i, u, j, m, v, min, w, k, a, b, c, min1 = <span class="number">999999</span>, max = <span class="number">-991111</span>, p = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Dijkstra</span><span class="params">(MGraph G, <span class="type">int</span> v0)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; G.vexnum; v++)    <span class="comment">//初始化数据</span></span><br><span class="line">    &#123;</span><br><span class="line">        final[v] = <span class="number">0</span>;            <span class="comment">//全部顶点初始化为未知最短路径状态</span></span><br><span class="line">        D[v] = G.arcs[v0][v];<span class="comment">// 将与v0点有连线的顶点加上权值</span></span><br><span class="line">        P[v] = <span class="number">-1</span>;                <span class="comment">//初始化路径数组P为-1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    D[v0] = <span class="number">0</span>;  <span class="comment">//v0至v0路径为0</span></span><br><span class="line">    final[v0] = <span class="number">1</span>;    <span class="comment">// v0至v0不需要求路径</span></span><br><span class="line">    <span class="comment">// 开始主循环，每次求得v0到某个v顶点的最短路径</span></span><br><span class="line">    <span class="keyword">for</span> (v = <span class="number">1</span>; v &lt; G.vexnum; v++) &#123;</span><br><span class="line">        min = maxInt;    <span class="comment">// 当前所知离v0顶点的最近距离</span></span><br><span class="line">        <span class="keyword">for</span> (w = <span class="number">0</span>; w &lt; G.vexnum; w++) <span class="comment">// 寻找离v0最近的顶点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!final[w] &amp;&amp; D[w] &lt; min) &#123;</span><br><span class="line">                k = w;</span><br><span class="line">                min = D[w];    <span class="comment">// w顶点离v0顶点更近</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        final[k] = <span class="number">1</span>;    <span class="comment">// 将目前找到的最近的顶点置为1</span></span><br><span class="line">        <span class="keyword">for</span> (w = <span class="number">0</span>; w &lt; G.vexnum; w++) <span class="comment">// 修正当前最短路径及距离</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果经过v顶点的路径比现在这条路径的长度短的话</span></span><br><span class="line">            <span class="keyword">if</span> (!final[w] &amp;&amp; (min + G.arcs[k][w] &lt; D[w])) &#123; <span class="comment">// 说明找到了更短的路径，修改D[w]和P[w]</span></span><br><span class="line">                D[w] = min + G.arcs[k][w];  <span class="comment">// 修改当前路径长度</span></span><br><span class="line">                P[w] = k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    MGraph G;</span><br><span class="line">    <span class="built_in">memset</span>(final, <span class="number">0</span>, <span class="keyword">sizeof</span>(final));</span><br><span class="line">    <span class="built_in">memset</span>(D, <span class="number">0x3f3f3f3f</span>, <span class="keyword">sizeof</span>(D));</span><br><span class="line">    <span class="built_in">memset</span>(G.arcs, <span class="number">0x3f3f3f3f</span>, <span class="keyword">sizeof</span>(G.arcs));   <span class="comment">//邻接矩阵一定要初始化</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;G.vexnum, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        G.arcs[a - <span class="number">1</span>][b - <span class="number">1</span>] = c;</span><br><span class="line">        G.arcs[b - <span class="number">1</span>][a - <span class="number">1</span>] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (u = <span class="number">0</span>; u &lt; G.vexnum; u++) &#123;</span><br><span class="line">        max = <span class="number">-9999999</span>;</span><br><span class="line">        Dijkstra(G, u);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G.vexnum; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (D[j] &gt; max)</span><br><span class="line">                max = D[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (max &lt; min1) &#123;</span><br><span class="line">            min1 = max;</span><br><span class="line">            p = u + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p, min1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>7-10 旅游规划</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-10 旅游规划</span></span><br><span class="line"><span class="comment"> *  最短路径  弗洛伊德算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 500</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Infinite 65534</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> N, M, S, D;<span class="comment">//城市的个数 高速公路的条数 出发地 目的地</span></span><br><span class="line"><span class="type">int</span> Dist[MAXN][MAXN], Cost[MAXN][MAXN];<span class="comment">//距离与花费矩阵</span></span><br><span class="line"><span class="type">int</span> dist[MAXN], cost[MAXN], visit[MAXN];<span class="comment">//最短距离与花费 标记数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Inicialization</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindTheWay</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FindMinWay</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;N, &amp;M, &amp;S, &amp;D);<span class="comment">//城市的个数 高速公路的条数 出发地 目的地</span></span><br><span class="line">    Inicialization();<span class="comment">//初始化</span></span><br><span class="line">    FindTheWay();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, dist[D], cost[D]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Inicialization</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">            Dist[i][j] = Cost[i][j] = Infinite;<span class="comment">//矩阵初始化为无限值</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> v1, v2, d, c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;v1, &amp;v2, &amp;d, &amp;c);</span><br><span class="line">        Dist[v1][v2] = Dist[v2][v1] = d;<span class="comment">//输入距离路径</span></span><br><span class="line">        Cost[v1][v2] = Cost[v2][v1] = c;<span class="comment">//输入花费路径</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        dist[i] = cost[i] = Infinite;<span class="comment">//矩阵初始化为无限值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindTheWay</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    dist[S] = cost[S] = <span class="number">0</span>;<span class="comment">//出发地为0</span></span><br><span class="line">    visit[S] = <span class="number">1</span>;<span class="comment">//出发地访问标记</span></span><br><span class="line">    <span class="type">int</span> v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//记录出发地直达的路径</span></span><br><span class="line">        <span class="keyword">if</span> (!visit[i] &amp;&amp; Dist[S][i] &lt; Infinite) <span class="comment">//如果没访问 且有路径</span></span><br><span class="line">        &#123;</span><br><span class="line">            dist[i] = Dist[S][i];</span><br><span class="line">            cost[i] = Cost[S][i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        v = FindMinWay();<span class="comment">//找出最短出发地直达且未访问的城市</span></span><br><span class="line">        <span class="keyword">if</span> (v == ERROR) <span class="keyword">break</span>;</span><br><span class="line">        visit[v] = <span class="number">1</span>;<span class="comment">//找出城市的访问标记</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//循环每个城市</span></span><br><span class="line">            <span class="keyword">if</span> (!visit[i] &amp;&amp; Dist[v][i] &lt; Infinite)<span class="comment">//如果未访问且有路径</span></span><br><span class="line">                <span class="keyword">if</span> ((dist[v] + Dist[v][i] &lt; dist[i]) ||</span><br><span class="line">                    (dist[v] + Dist[v][i] == dist[i] &amp;&amp; cost[v] + Cost[v][i] &lt; cost[i])) &#123;<span class="comment">//如果从先到该城市再到另一城市距离小于直接到另一城市</span></span><br><span class="line">                    <span class="comment">//或者从先到该城市再到另一城市距离等于直接到另一城市，且花费少</span></span><br><span class="line">                    dist[i] = dist[v] + Dist[v][i];<span class="comment">//更新最短路径</span></span><br><span class="line">                    cost[i] = cost[v] + Cost[v][i];</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FindMinWay</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> min = Infinite;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//循环每个城市 找出最短的路径</span></span><br><span class="line">        <span class="keyword">if</span> (!visit[i] &amp;&amp; dist[i] &lt; min) &#123;</span><br><span class="line">            min = dist[i];</span><br><span class="line">            temp = i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (min == Infinite) <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-11 QQ帐户的申请与登陆</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-11 QQ帐户的申请与登陆</span></span><br><span class="line"><span class="comment"> *  哈希表  分离链接法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*账号与密码最大长度的定义</span></span><br><span class="line"><span class="comment">它们的最大长度需要比题目所给的大一位</span></span><br><span class="line"><span class="comment">这是因为还需要一个位置来储存&#x27;\0&#x27;来判断字符串的结尾*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Password_Len 17</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Account_Len 11</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxTableSize 1000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*各种状态的定义</span></span><br><span class="line"><span class="comment">最好用正数表示成功的状态</span></span><br><span class="line"><span class="comment">用负数或0表示失败的状态</span></span><br><span class="line"><span class="comment">这样会让强迫症看了舒服一点*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_WrongPW   -2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_Exist     -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_NOTExist  0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> New_OK          1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Login_OK        2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> AccountType[Max_Account_Len];<span class="comment">//账号类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> PasswordType[Max_Password_Len];<span class="comment">//密码类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Index;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    New, Log</span><br><span class="line">&#125; Pattern;<span class="comment">//两种模式，新建账号与登入账号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    AccountType Account;</span><br><span class="line">    PasswordType Password;</span><br><span class="line">&#125; ElemType;<span class="comment">//数据类型的定义，每个对应一个用户，内含用户的账号和密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//链表指针的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">PtrToLNode</span>;</span></span><br><span class="line"><span class="comment">//链表结点的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></span><br><span class="line">    PtrToLNode Next;</span><br><span class="line">    ElemType Data;</span><br><span class="line">&#125; LNode;</span><br><span class="line"><span class="keyword">typedef</span> PtrToLNode List;<span class="comment">//链表的定义</span></span><br><span class="line"><span class="keyword">typedef</span> PtrToLNode Position;<span class="comment">//哈希表中结点位置的定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//哈希表的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TblNode</span> *<span class="title">HashTable</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TblNode</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> TableSize;<span class="comment">//哈希表的大小</span></span><br><span class="line">    List Heads;<span class="comment">//储存各个列表头节点的数组</span></span><br><span class="line">&#125; TblNode;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">NextPrime</span><span class="params">(<span class="type">int</span> N)</span><span class="comment">//返回N的下一个素数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, P;</span><br><span class="line">    P = N % <span class="number">2</span> ? N + <span class="number">2</span> : N + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//P为N之后的第一个奇数</span></span><br><span class="line">    <span class="keyword">while</span> (P &lt; MaxTableSize) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = (<span class="type">int</span>) <span class="built_in">sqrt</span>(P); i &gt; <span class="number">2</span>; i--)<span class="comment">//因为只考虑奇数，所以i为2时就结束了</span></span><br><span class="line">            <span class="keyword">if</span> (P % i == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//i为2说明P为素数</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            P += <span class="number">2</span>;<span class="comment">//i!=2说明P不是素数，则P指向下一个奇数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Hash</span><span class="params">(<span class="type">int</span> Key, <span class="type">int</span> TableSize)</span> &#123;<span class="comment">//返回Key值相对应的哈希值，即其在哈希表中的储存下标</span></span><br><span class="line">    <span class="keyword">return</span> Key % TableSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HashTable <span class="title function_">CreateTable</span><span class="params">(<span class="type">int</span> TableSize)</span> &#123;    <span class="comment">//构造空的哈希表</span></span><br><span class="line">    HashTable H;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    H = (HashTable) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(TblNode));</span><br><span class="line">    H-&gt;TableSize = NextPrime(TableSize);</span><br><span class="line">    H-&gt;Heads = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode) * H-&gt;TableSize);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H-&gt;TableSize; i++) &#123;</span><br><span class="line">        H-&gt;Heads[i].Data.Account[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        H-&gt;Heads[i].Data.Password[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        H-&gt;Heads[i].Next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Position <span class="title function_">Find</span><span class="params">(HashTable H, ElemType Key)</span> &#123;</span><br><span class="line">    Position Pos;</span><br><span class="line">    Index p;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(Key.Account) &gt; <span class="number">5</span>) <span class="comment">//账号大于5位时取最后5位</span></span><br><span class="line">        p = Hash(atoi(Key.Account +</span><br><span class="line">                      <span class="built_in">strlen</span>(Key.Account) - <span class="number">5</span>), H-&gt;TableSize);</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//账号不大于5位则等于它本身</span></span><br><span class="line">        p = Hash(atoi(Key.Account), H-&gt;TableSize);</span><br><span class="line">    Pos = H-&gt;Heads[p].Next;</span><br><span class="line">    <span class="keyword">while</span> (Pos &amp;&amp; <span class="built_in">strcmp</span>(Key.Account, Pos-&gt;Data.Account))</span><br><span class="line">        Pos = Pos-&gt;Next;</span><br><span class="line">    <span class="keyword">return</span> Pos;<span class="comment">//Pos指向用户数据的位置，没有注册就返回NULL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">NewOrLog</span><span class="params">(HashTable H, ElemType Key, Pattern P)</span> &#123;    <span class="comment">//返回状态参数</span></span><br><span class="line">    Position Pos, NewPos;</span><br><span class="line">    Index p;</span><br><span class="line">    Pos = Find(H, Key);</span><br><span class="line">    <span class="keyword">switch</span> (P) &#123;</span><br><span class="line">        <span class="keyword">case</span> Log:</span><br><span class="line">            <span class="keyword">if</span> (Pos == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> ERROR_NOTExist;<span class="comment">//登陆时不存在账号</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Pos-&gt;Data.Password, Key.Password) ||</span><br><span class="line">                     (<span class="built_in">strlen</span>(Key.Password) &gt; <span class="number">16</span> || <span class="built_in">strlen</span>(Key.Password) &lt; <span class="number">6</span>))</span><br><span class="line">                <span class="keyword">return</span> ERROR_WrongPW; <span class="comment">//密码错误或格式错误</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> Login_OK;<span class="comment">//账号和密码均正确，可以登录</span></span><br><span class="line">        <span class="keyword">case</span> New:</span><br><span class="line">            <span class="keyword">if</span> (Pos != <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> ERROR_Exist; <span class="comment">//新建账号时发现已经存在这样的账号了</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                NewPos = (Position) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">                <span class="built_in">strcpy</span>(NewPos-&gt;Data.Account, Key.Account);</span><br><span class="line">                <span class="built_in">strcpy</span>(NewPos-&gt;Data.Password, Key.Password);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strlen</span>(Key.Account) &gt; <span class="number">5</span>)</span><br><span class="line">                    p = Hash(atoi(Key.Account +</span><br><span class="line">                                  <span class="built_in">strlen</span>(Key.Account) - <span class="number">5</span>), H-&gt;TableSize);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    p = Hash(atoi(Key.Account), H-&gt;TableSize);</span><br><span class="line">                NewPos-&gt;Next = H-&gt;Heads[p].Next;</span><br><span class="line">                H-&gt;Heads[p].Next = NewPos;</span><br><span class="line">                <span class="keyword">return</span> New_OK; <span class="comment">//插入新值并返回插入成功</span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DestroyTable</span><span class="params">(HashTable H)</span> &#123;    <span class="comment">//销毁哈希表</span></span><br><span class="line">    PtrToLNode p, q;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H-&gt;TableSize; i++) &#123;</span><br><span class="line">        q = H-&gt;Heads[i].Next;</span><br><span class="line">        <span class="keyword">while</span> (q) &#123;</span><br><span class="line">            p = q-&gt;Next;</span><br><span class="line">            <span class="built_in">free</span>(q);</span><br><span class="line">            q = p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(H);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> N, i;</span><br><span class="line">    ElemType Key;</span><br><span class="line">    <span class="type">char</span> Input;</span><br><span class="line">    Pattern P;</span><br><span class="line">    HashTable H;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    H = CreateTable(<span class="number">2</span> * N);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;\n%c %s %s&quot;</span>, &amp;Input, Key.Account, Key.Password);</span><br><span class="line">        P = (Input == <span class="string">&#x27;L&#x27;</span>) ? Log : New;</span><br><span class="line">        <span class="keyword">switch</span> (NewOrLog(H, Key, P)) &#123;<span class="comment">//最后根据不同返回值输出对应状态即可</span></span><br><span class="line">            <span class="keyword">case</span> ERROR_Exist:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR: Exist\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ERROR_NOTExist:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR: Not Exist\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ERROR_WrongPW:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR: Wrong PW\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Login_OK:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login: OK\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> New_OK:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;New: OK\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    DestroyTable(H);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-12 人以群分</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-12 人以群分</span></span><br><span class="line"><span class="comment"> *  排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">comfunc</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *elem1, <span class="type">const</span> <span class="type">void</span> *elem2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_character</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    qsort(a, n, <span class="keyword">sizeof</span>(<span class="type">int</span>), comfunc);</span><br><span class="line">    sort_character(a, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">comfunc</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *elem1, <span class="type">const</span> <span class="type">void</span> *elem2)</span> &#123;</span><br><span class="line">    <span class="type">int</span> *p1 = (<span class="type">int</span> *) elem1;</span><br><span class="line">    <span class="type">int</span> *p2 = (<span class="type">int</span> *) elem2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> *p1 - *p2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_character</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, n1, n2, sum1, sum2, dif, dif1, dif2;</span><br><span class="line"></span><br><span class="line">    sum1 = sum2 = <span class="number">0</span>;</span><br><span class="line">    dif = dif1 = dif2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        n1 = n2 = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n1; i++)</span><br><span class="line">            sum1 += p[i];</span><br><span class="line">        <span class="keyword">for</span> (i = n1; i &lt; n; i++)</span><br><span class="line">            sum2 += p[i];</span><br><span class="line">        dif = <span class="built_in">abs</span>(sum2 - sum1);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        n1 = n2 = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n1; i++)</span><br><span class="line">            sum1 += p[i];</span><br><span class="line">        <span class="keyword">for</span> (i = n / <span class="number">2</span> + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            sum2 += p[i];</span><br><span class="line">        dif1 = <span class="built_in">abs</span>(sum1 + p[n1] - sum2);</span><br><span class="line">        dif2 = <span class="built_in">abs</span>(sum2 + p[n2] - sum1);</span><br><span class="line">        dif = (dif1 &gt; dif2) ? dif1 : dif2;</span><br><span class="line">        <span class="keyword">if</span> (dif1 &gt; dif2)</span><br><span class="line">            n1++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Outgoing #: %d\n&quot;</span>, n2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Introverted #: %d\n&quot;</span>, n1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Diff = %d\n&quot;</span>, dif);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-13 寻找大富翁</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-13 寻找大富翁</span></span><br><span class="line"><span class="comment"> *  堆排序和选择排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>   <span class="comment">//堆排序；  注意:此算法中，下标从1开始</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max 1000010</span></span><br><span class="line"><span class="type">int</span> num[max];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sift</span><span class="params">(<span class="type">int</span> *num, <span class="type">int</span> low, <span class="type">int</span> high)</span>  <span class="comment">//将下标为low位置上的点调到适当位置</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    i = low;</span><br><span class="line">    j = <span class="number">2</span> * i;   <span class="comment">//num[j]是num[i]的左孩子结点；</span></span><br><span class="line">    temp = num[i];  <span class="comment">//待调整的结点</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= high) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &lt; high &amp;&amp; num[j] &lt; num[j + <span class="number">1</span>])   <span class="comment">//如果右孩子比较大，则把j指向右孩子，j变为2*i+1；</span></span><br><span class="line">            ++j;</span><br><span class="line">        <span class="keyword">if</span> (temp &lt; num[j]) &#123;</span><br><span class="line">            num[i] = num[j];    <span class="comment">//将num[j]调整到双亲结点的位置上；</span></span><br><span class="line">            i = j;   <span class="comment">//修改i和j的值，以便继续向下调整；</span></span><br><span class="line">            j = i * <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;     <span class="comment">//调整结束；</span></span><br><span class="line">    &#125;</span><br><span class="line">    num[i] = temp;   <span class="comment">//被调整的结点放入最终位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, m, i, temp, count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line">    <span class="keyword">if</span> (n &lt; m) m = n;   <span class="comment">//注意，有一个测试点是n小于m的情况，这时，只用排前n个;</span></span><br><span class="line">    <span class="keyword">for</span> (i = n / <span class="number">2</span>; i &gt;= <span class="number">1</span>; i--)  <span class="comment">//所有结点建立初始堆</span></span><br><span class="line">        sift(num, i, n);</span><br><span class="line">    <span class="keyword">for</span> (i = n; i &gt;= <span class="number">2</span>; i--)   <span class="comment">//进行n-1次循环，完成堆排序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*以下3句换出了根节点中的关键字，将其放入最终位置*/</span></span><br><span class="line">        temp = num[<span class="number">1</span>];</span><br><span class="line">        num[<span class="number">1</span>] = num[i];</span><br><span class="line">        num[i] = temp;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, num[i]);</span><br><span class="line">        <span class="keyword">if</span> (count == m) <span class="keyword">break</span>;  <span class="comment">//打印前m个；</span></span><br><span class="line">        sift(num, <span class="number">1</span>, i - <span class="number">1</span>);    <span class="comment">//减少了1个关键字的无序序列，继续调整。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m == n) <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, num[<span class="number">1</span>]);  <span class="comment">//当n&lt;m的特殊情况下，上面只打印了n~2，还有最后一个下标为1的没有打印，故再打印一个。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>7-14 PAT排名汇总</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-14 PAT排名汇总</span></span><br><span class="line"><span class="comment"> *  快速排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> id[<span class="number">14</span>];                <span class="comment">//考号</span></span><br><span class="line">    <span class="type">int</span> score;                  <span class="comment">//分数</span></span><br><span class="line">    <span class="type">int</span> kc;                     <span class="comment">//考场</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">a</span>[30000];</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">bigger</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s1, <span class="type">const</span> <span class="type">char</span> *s2)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (s1[i] &gt; s2[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s1[i] &lt; s2[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">qsort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l;</span><br><span class="line">    <span class="type">int</span> j = r;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">t</span> =</span> a[l];</span><br><span class="line">    <span class="keyword">while</span> (i != j) &#123;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; (a[j].score &lt; t.score || a[j].score == t.score &amp;&amp; bigger(a[j].id, t.id)))</span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; (a[i].score &gt; t.score || a[i].score == t.score &amp;&amp; bigger(t.id, a[i].id)))</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">s</span> =</span> a[i];</span><br><span class="line">            a[i] = a[j];</span><br><span class="line">            a[j] = s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    a[l] = a[i];</span><br><span class="line">    a[i] = t;</span><br><span class="line"></span><br><span class="line">    qsort(l, i - <span class="number">1</span>);</span><br><span class="line">    qsort(i + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Copy</span><span class="params">(<span class="type">int</span> *b2, <span class="type">int</span> *b1, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        b2[i] = b1[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, j, i, top = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; k; j++) &#123;</span><br><span class="line">            <span class="type">char</span> id[<span class="number">14</span>];</span><br><span class="line">            <span class="type">int</span> score;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, id, &amp;score);</span><br><span class="line">            a[top].score = score;</span><br><span class="line">            a[top].kc = i;</span><br><span class="line">            <span class="built_in">strcpy</span>(a[top].id, id);</span><br><span class="line">            top++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(<span class="number">0</span>, top - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> levall = <span class="number">1</span>, b1[n + <span class="number">1</span>], b2[n + <span class="number">1</span>], score = a[<span class="number">0</span>].score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        b1[i] = <span class="number">1</span>, b2[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, top);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d\n&quot;</span>, a[<span class="number">0</span>].id, <span class="number">1</span>, a[<span class="number">0</span>].kc, <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> llevall = <span class="number">1</span>;            <span class="comment">//上一个总排名</span></span><br><span class="line">    levall = <span class="number">2</span>;                   <span class="comment">//总排名</span></span><br><span class="line"></span><br><span class="line">    Copy(b2, b1, n);</span><br><span class="line">    b1[a[<span class="number">0</span>].kc]++;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; top; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].score == a[i - <span class="number">1</span>].score) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d\n&quot;</span>, a[i].id, llevall, a[i].kc, b2[a[i].kc]);</span><br><span class="line">            levall++;</span><br><span class="line">            b1[a[i].kc]++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d\n&quot;</span>, a[i].id, levall, a[i].kc, b1[a[i].kc]);</span><br><span class="line">            llevall = levall;</span><br><span class="line">            levall++;</span><br><span class="line"></span><br><span class="line">            Copy(b2, b1, n);</span><br><span class="line">            b1[a[i].kc]++;                    <span class="comment">//考场的排名</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZZULI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tex Live下载</title>
      <link href="/post/f00df655.html"/>
      <url>/post/f00df655.html</url>
      
        <content type="html"><![CDATA[<h1>下载</h1><blockquote><p>镜像下载网址：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/CTAN/">CTAN | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p></blockquote><p><img src="https://s2.loli.net/2023/04/10/Fl8EvMWGS25b1d7.png" alt="image-20230407174031122"></p><blockquote><p>下载完成后，解压，打开，双击批处理文件进行安装</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/FThWR9M5mdKxaLN.png" alt="image-20230407174116660"></p><blockquote><p>切换镜像源</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/zrU3ZH9okqxdwJM.png" alt="image-20230407180752177"></p><blockquote><p>单击Advanced，进行设置</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/142uoWQ9sXNbGcz.png" alt="image-20230407174205691"></p><blockquote><p>修改安装路径</p></blockquote><img src="https://s2.loli.net/2023/04/10/U2gF7toGq1jaLWB.png" alt="image-20230407174344805" style="zoom: 67%;" /><blockquote><p>进入漫长的等待，等四千五百多个包安装完</p></blockquote><blockquote><p>等待…</p></blockquote><blockquote><p>等待…</p></blockquote><blockquote><p>After a long, long time</p></blockquote><blockquote><p>出现下面的界面代表安装完成</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/NHAfXaQ654hzUOd.png" alt="image-20230407202201931"></p><h1>测试</h1><blockquote><p>在cmd中依次输入latex -v , tex -v, xelatex -v, pdflatex -v，如果看见版本号即安装成功</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/9PVl4X2vAtponQu.png" alt="image-20230407202354595"></p><blockquote><p>如果出现***不是内部或外部变量，则需要配置环境变量</p></blockquote><p>添加xxx\texlive\2023\bin\win32</p><blockquote><p>不过新版本应该默认勾选了添加环境变量</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anaconda卸载</title>
      <link href="/post/17e3fb48.html"/>
      <url>/post/17e3fb48.html</url>
      
        <content type="html"><![CDATA[<p>一、以管理员身份运行Anaconda Prompt</p><p>二、查看anaconda的环境信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><p>三、删除除base外的其他环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n your_env_name(虚拟环境名称) --<span class="built_in">all</span></span><br></pre></td></tr></table></figure><p>四、下载anaocnda-clean包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c anaconda anaconda-clean</span><br></pre></td></tr></table></figure><p>五、输入以下指令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anaconda-clean --yes</span><br></pre></td></tr></table></figure><p>执行这个指令会生成一个backup file，这个文件在之后可以删除掉</p><p>六、使用卸载程序卸载</p><p>运行在anaconda安装路径下的<code>Uninstall-Anaconda3.exe</code></p><p>七、直接删除剩余的文件夹</p><p>解决python的pip安装opencv非常慢的问题：<br>opencv-python文件比较大，用以下命令：<br>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> opencv-python</p><p>当然，安装其他包，可以用：<br>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> xxxxxx<br>其中xxxxxx就是要安装的包</p><p>这里使用的清华大学的镜像包，速度比较快，相比于翻墙等其他方法，简单很多。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMX安装</title>
      <link href="/post/45675238.html"/>
      <url>/post/45675238.html</url>
      
        <content type="html"><![CDATA[<h1>一、STM32CubeMX下载</h1><blockquote><p><strong>官网地址</strong>：<a href="https://www.st.com/zh/development-tools/stm32cubemx.html#get-software">STM32CubeMX - STM32Cube初始化代码生成器 - 意法半导体STMicroelectronics</a></p><p>官网下载需要注册账号</p><p>网盘链接（6.8）：</p><p>链接：<a href="https://pan.baidu.com/s/1kiSD3hMxjB7ds3zk093eug?pwd=yvpq">https://pan.baidu.com/s/1kiSD3hMxjB7ds3zk093eug?pwd=yvpq</a><br>提取码：yvpq</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/4hwRofItbnax7F8.png" alt="image-20230406132652808"></p><h1>二、JRE下载、安装</h1><p>这里STM32CubeMX使用需要JRE环境，不过现在JRE已经集成到JDK中了，不需要单独安装，所以这里直接下载JDK即可</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1IuYbyeED61E9qa8hRWcl1w?pwd=bq03">https://pan.baidu.com/s/1IuYbyeED61E9qa8hRWcl1w?pwd=bq03</a><br>提取码：bq03</p></blockquote><p>由于不需要编写Java程序，所以这里的安装一切默认【或者中间修改一下安装路径】，不需要配置环境变量</p><h1>三、CubeMX安装</h1><blockquote><p>一切默认，中间只需要更换一下安装路径</p></blockquote><img src="https://s2.loli.net/2023/04/06/GNdM9BOaRjXwtWA.png" alt="image-20230406145741710" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/04/06/Lw1ghqjMzbrO4sf.png" alt="image-20230406145804402" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/06/jrzgIWfkHuFU2Xh.png" alt="image-20230406145844132" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/06/sy3Lgwofe2RikMD.png" alt="image-20230406145942453" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/06/fxTiaqncDQVPJjk.png" alt="image-20230406150036442" style="zoom:67%;" /><h1>四、基本配置</h1><h2 id="1-更改存放芯片包的位置">1.更改存放芯片包的位置</h2><blockquote><p>打开软件，点击【Help】-&gt;【Updater Settings】</p></blockquote><img src="https://s2.loli.net/2023/04/06/RIuUYVjgeptrviN.png" alt="image-20230406150503036" style="zoom: 50%;" /><img src="https://s2.loli.net/2023/04/06/lL7hXCNosdqD1Fg.png" alt="image-20230406150804885" style="zoom:67%;" /><h2 id="2-安装芯片包">2.安装芯片包</h2><blockquote><p>点击【Help】-&gt;【Manage embedded software packages】</p></blockquote><img src="https://s2.loli.net/2023/04/06/CwSWY94mx1atybs.png" alt="image-20230406150916064" style="zoom:60%;" /><blockquote><p>选择自己的开发版型号，进行安装</p></blockquote><img src="https://s2.loli.net/2023/04/06/npWAGjM5Kbt3PCu.png" alt="image-20230406151059393" style="zoom:67%;" /><blockquote><p>等待安装</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/AhdQ4okECMbOIxt.png" alt="image-20230406151113614"></p><blockquote><p>安装完成后，芯片前面会变绿</p></blockquote><img src="https://s2.loli.net/2023/04/06/zNfY5XCJ9Avohy8.png" alt="image-20230406151210065" style="zoom: 67%;" /><h1>五、测试</h1><h2 id="1、基本配置">1、基本配置</h2><blockquote><p>新建项目,【file】-&gt;【new project】</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/YUNJPEZLosCSmzi.png" alt="image-20230406151422379"></p><blockquote><p>选择芯片</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/oC839fHbpZKmNTI.png" alt="image-20230406151642740"></p><blockquote><p>芯片配置：RCC、SYS、GPIO、时钟</p></blockquote><blockquote><p><strong>RCC:</strong></p></blockquote><img src="https://s2.loli.net/2023/04/06/ovX4H3nA2SGZw5s.png" alt="image-20230406152148371" style="zoom:67%;" /><blockquote><p><strong>SYS:</strong></p></blockquote><img src="https://s2.loli.net/2023/04/06/fXDQaVmRKr8cYjv.png" alt="image-20230406152244643" style="zoom:67%;" /><blockquote><p><strong>GPIO:</strong></p></blockquote><p>在右侧芯片图中点击PA2引脚，并设置为Output</p><p><img src="https://s2.loli.net/2023/04/06/5b1z7j6wU2tyofB.png" alt="image-20230406152417178"></p><p>在左侧进行引脚具体参数配置</p><img src="https://s2.loli.net/2023/04/06/lykciDfhsHpYS6Z.png" alt="image-20230406152616933" style="zoom:67%;" /><blockquote><p>时钟</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/OtTQj3KUP9o6EzB.png" alt="image-20230406152831324"></p><h2 id="2-文件生成">2.文件生成</h2><blockquote><p>选择文件路径，选择【MDK-ARM】，版本为【V5】</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/sW6ei9dcBrQmUja.png" alt="image-20230406153201270"></p><blockquote><p>设置生成文件</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/JcBKS9u6jyYiap1.png" alt="image-20230406153548772"></p><img src="https://s2.loli.net/2023/04/06/g75HAXWpY6KFzfu.png" alt="image-20230406153644277" style="zoom:50%;" /><h2 id="3-最终生成文件">3.最终生成文件</h2><p><img src="https://s2.loli.net/2023/04/06/Pq1i3lLjpzanIAc.png" alt="image-20230406153734704"></p><h2 id="4-打开文件，编译测试">4.打开文件，编译测试</h2><p><img src="https://s2.loli.net/2023/04/06/2NBtnOk31SCXlob.png" alt="image-20230406153846661"></p><blockquote><p>打开工程后，找到main函数，在while循环中添加下列代码</p></blockquote><img src="https://s2.loli.net/2023/04/06/qV43D7LsiRF5Aj1.png" alt="image-20230406165320245" style="zoom:67%;" /><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><blockquote><p>烧录下载程序，LED灯闪烁</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯备赛题解（小蜜蜂）（二）</title>
      <link href="/post/8c52194e.html"/>
      <url>/post/8c52194e.html</url>
      
        <content type="html"><![CDATA[<h1>必备基础技能训练15 项</h1><h2 id="【基础08】外部中断的基本操作">【基础08】外部中断的基本操作</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到2～3 引脚，使S4 和S5 按键一端接地，S4 按键的另一端接到单片机的P32/INT0 引脚，S5 按键的另一端接到单片机的P33/INT1 引脚。</p><p>2、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>3、控制L1 指示灯循环闪烁。</p><p>4、将P32/INT0 引脚定义成外部中断，下降沿触发，使能相关中断控制位。即按下S5按键就会产生一个外部中断触发信号，进入外部中断服务函数。</p><p>5、在外部中断服务函数中，点亮L8 指示灯，延时片刻后，熄灭。</p></blockquote><p><img src="https://s2.loli.net/2023/03/31/mGjzhYtIBO1PM9N.png" alt="image-20230328225146398"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit L1 = P0^<span class="number">0</span>;</span><br><span class="line">sbit L2 = P0^<span class="number">1</span>;</span><br><span class="line">sbit L3 = P0^<span class="number">2</span>;</span><br><span class="line">sbit L4 = P0^<span class="number">3</span>;</span><br><span class="line">sbit L5 = P0^<span class="number">4</span>;</span><br><span class="line">sbit L6 = P0^<span class="number">5</span>;</span><br><span class="line">sbit L7 = P0^<span class="number">6</span>;</span><br><span class="line">sbit L8 = P0^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;     <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InterruptInit</span><span class="params">(<span class="type">void</span>)</span>;       <span class="comment">// 外部中断初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 08外部中断的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">4</span>);    <span class="comment">// 初始化74HC138</span></span><br><span class="line">    InterruptInit(); <span class="comment">// 初始化外部中断</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// LED1循环闪烁</span></span><br><span class="line">        L1 = <span class="number">0</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        L1 = <span class="number">1</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InterruptInit</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 外部中断初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    IT0 = <span class="number">1</span>; <span class="comment">// 设置外部中断0为下降沿触发</span></span><br><span class="line">    EX0 = <span class="number">1</span>; <span class="comment">// 开启外部中断0</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开启总中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Interrupt0</span><span class="params">(<span class="type">void</span>)</span> interrupt 0 <span class="comment">// 外部中断0服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    L8 = <span class="number">0</span>;</span><br><span class="line">    Delay(<span class="number">2000</span>);</span><br><span class="line">    L8 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础09】定时器实现秒闪功能">【基础09】定时器实现秒闪功能</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、利用定时/计数器T0 的模式1 实现50ms 的间隔定时。</p><p>3、在50ms 间隔定时的基础上，每隔1 秒L1 指示灯闪烁一次，即L1 指示灯循环点亮<br>0.5 秒，熄灭0.5 秒。</p><p>4、每隔10 秒L8 指示灯闪烁1 次，即L1 指示灯循环点亮5 秒，熄灭5 秒。</p></blockquote><blockquote><p>通过STC-ISP生成中断初始化函数</p><p>再在其中开启中断：ET0、EA、PT0</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;REG51.H&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit L1 = P0^<span class="number">0</span>;</span><br><span class="line">sbit L8 = P0^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span>;         <span class="comment">// 定时器0初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">4</span>);  <span class="comment">// 初始化74HC138</span></span><br><span class="line">    Timer0_Init(); <span class="comment">// 初始化定时器0</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 50毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TMOD |= <span class="number">0x01</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;      <span class="comment">// 清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">1</span>;      <span class="comment">// 定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">    ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Routine</span><span class="params">()</span> interrupt 1<span class="comment">// 定时器0中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>) <span class="comment">// 500ms</span></span><br><span class="line">    &#123;</span><br><span class="line">        L1 = ~L1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">100</span>) <span class="comment">// 5s</span></span><br><span class="line">    &#123;</span><br><span class="line">        i  = <span class="number">0</span>;</span><br><span class="line">        L8 = ~L8;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础10】定时器实现秒表功能">【基础10】定时器实现秒表功能</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，利用定时器T0、数码管和2 个独立按键，设计并实现一个秒表，具有启动、暂停和清零功能。</p><p>1、秒表的显示格式：分-秒-0.05 秒（即50ms）</p><ul><li>如8 分26 秒900 毫秒，显示为：08-26-18</li></ul><p>2、独立按键S4 定义为：启动/暂停，即第1 次按下启动秒表，再次按下暂停秒表。</p><p>3、独立按键S5 定义为：清零。</p><p>4、按键均为按下有效。</p></blockquote><blockquote><p>注意一下临界条件判断</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3^<span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3^<span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line">sbit Key3 = P3^<span class="number">2</span>; <span class="comment">// 按键3</span></span><br><span class="line">sbit Key4 = P3^<span class="number">3</span>; <span class="comment">// 按键4</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>, <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span>;                                        <span class="comment">// LED显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span>;                                <span class="comment">// 定时器0初始化</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> min = <span class="number">0</span>, sec = <span class="number">0</span>, ssec = <span class="number">0</span>; <span class="comment">// 分，秒，毫秒</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag1 = <span class="number">0</span>, flag2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10定时器实现秒表功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Timer0_Init();</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);<span class="keyword">while</span> (Key1 == <span class="number">0</span>);Delay(<span class="number">20</span>);<span class="comment">// 去抖</span></span><br><span class="line"></span><br><span class="line">            flag1 = !flag1;<span class="comment">// 按下一次开始，再按一次暂停</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Key2 == <span class="number">0</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);<span class="keyword">while</span> (Key2 == <span class="number">0</span>);Delay(<span class="number">20</span>);<span class="comment">// 去抖</span></span><br><span class="line"></span><br><span class="line">            flag2 = !flag2;</span><br><span class="line">        &#125;</span><br><span class="line">        Display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">    <span class="comment">// 消影</span></span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    P0 = <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span> <span class="comment">// LED显示</span></span><br><span class="line">&#123;</span><br><span class="line">    LED_Shu(<span class="number">0</span>, min / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">1</span>, min % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">2</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">3</span>, sec / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">4</span>, sec % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">5</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">6</span>, ssec / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">7</span>, ssec % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 50毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TMOD |= <span class="number">0x01</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;      <span class="comment">// 清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">1</span>;      <span class="comment">// 定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">    ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Routine</span><span class="params">()</span> interrupt 1 <span class="comment">// 定时器0中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag1 == <span class="number">1</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">        ssec++;</span><br><span class="line">        <span class="keyword">if</span> (ssec == <span class="number">20</span>) &#123;</span><br><span class="line">            ssec = <span class="number">0</span>;</span><br><span class="line">            sec++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sec &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            sec = <span class="number">0</span>;</span><br><span class="line">            min++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (min &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            min = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag2 == <span class="number">1</span>) &#123;</span><br><span class="line">        min = <span class="number">0</span>, sec = <span class="number">0</span>, ssec = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础11】利用PWM-控制灯光亮度">【基础11】利用PWM 控制灯光亮度</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，利用PWM 脉宽信号实现独立按键S7 对L1 指示灯亮度变化的控制：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、PWM 脉宽信号的频率为100Hz。</p><p>3、L1 指示灯有4 种亮度，分别是：完全熄灭、10%的亮度、50%的亮度和90%的亮度。</p><p>4、按下S7 按键，循环切换L1 指示灯的四种亮度模式，如下图所示：</p><p><img src="https://s2.loli.net/2023/03/28/CoixpVcvUKyP8bt.png" alt="image-20230328133736650"></p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;REG51.H&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3^<span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit L1   = P0^<span class="number">0</span>; <span class="comment">// LED1</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span>;     <span class="comment">// 定时器0初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">()</span>;           <span class="comment">// 74HC138初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>; <span class="comment">// 延迟函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> PWM_flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag     = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init();</span><br><span class="line">    Timer0_Init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);<span class="keyword">while</span> (Key1 == <span class="number">0</span>);Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">                EA = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">                PWM_flag = <span class="number">10</span>;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">                PWM_flag = <span class="number">50</span>;</span><br><span class="line">                flag = <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">2</span>) &#123;</span><br><span class="line">                PWM_flag = <span class="number">90</span>;</span><br><span class="line">                flag = <span class="number">3</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">3</span>) &#123;</span><br><span class="line">                PWM_flag = <span class="number">0</span>;</span><br><span class="line">                EA = <span class="number">0</span>; <span class="comment">// 开总中断</span></span><br><span class="line">                L1 = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 100微秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TMOD |= <span class="number">0x01</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;      <span class="comment">// 清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">1</span>;      <span class="comment">// 定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">    ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">()</span> <span class="comment">// 74HC138初始化函数</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line"></span><br><span class="line">    HC138_A = <span class="number">0</span>;</span><br><span class="line">    HC138_B = <span class="number">0</span>;</span><br><span class="line">    HC138_C = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Routine</span><span class="params">()</span> interrupt 1 <span class="comment">// 定时器0中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> count;</span><br><span class="line"></span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">    count++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count == PWM_flag) &#123;</span><br><span class="line">        L1 = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (count == <span class="number">100</span>) &#123;</span><br><span class="line">        L1 = <span class="number">0</span>;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础12】串行接口的基本操作">【基础12】串行接口的基本操作</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、初始化串口为模式1，即8 位UART 模式，波特率9600，允许接收。</p><p>2、数据发送采用查询方式，数据接收采用中断方式。</p><p>3、系统上电初始化之后，单片机向上位机发送两个字节：0x5a 和0xa5（串口助手以十六进制HEX 发送和显示）。</p><p>4、串口每成功接收到一个字节后，在该字节基础上加1，然后通过串口发送回上位机。</p><p>5、注意89C52 单片机和IAP15F2K61S2 单片机串口应用的差别，使用9600 波特率时，晶振时钟选择11.0592MHz。</p></blockquote><p><img src="https://s2.loli.net/2023/03/31/pTz1NEZrkhdSOPj.png" alt="image-20230331223135943"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>; <span class="comment">// IAP15F2K61S新增配置</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Date;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span>;                  <span class="comment">// 串口初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Send_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span>; <span class="comment">// 发送数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 12串行接口的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    UART_Init();</span><br><span class="line">    Send_Data(<span class="number">0X5A</span>);</span><br><span class="line">    Send_Data(<span class="number">0XA5</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span> <span class="comment">// 串口初始化函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// STC-ISP 波特率设置模块</span></span><br><span class="line">    <span class="comment">//  11.0592MHz 9600bps 串口1 8位数据 定时器1（8位自动重载） 12T</span></span><br><span class="line"></span><br><span class="line">    TMOD &amp;= <span class="number">0x0F</span>; <span class="comment">// 清除定时器1模式位</span></span><br><span class="line">    TMOD |= <span class="number">0x20</span>; <span class="comment">// 设定定时器1为8位自动重装方式</span></span><br><span class="line">    TL1 = <span class="number">0xFD</span>;   <span class="comment">// 设定定时初值</span></span><br><span class="line">    TH1 = <span class="number">0xFD</span>;   <span class="comment">// 设定定时器重装值</span></span><br><span class="line">    ET1 = <span class="number">0</span>;      <span class="comment">// 禁止定时器1中断</span></span><br><span class="line">    TR1 = <span class="number">1</span>;      <span class="comment">// 启动定时器1</span></span><br><span class="line">    EA  = <span class="number">1</span>;      <span class="comment">// 开总中断</span></span><br><span class="line">    PT1 = <span class="number">0</span>;      <span class="comment">// 定时器1为低优先级中断</span></span><br><span class="line">    ES  = <span class="number">1</span>;      <span class="comment">// 串口中断允许</span></span><br><span class="line"></span><br><span class="line">    SCON = <span class="number">0x50</span>; <span class="comment">// 8位数据,可变波特率</span></span><br><span class="line"></span><br><span class="line">    AUXR = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Routine</span><span class="params">(<span class="type">void</span>)</span> interrupt 4 <span class="comment">// 串口中断函数，接受数据</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (RI == <span class="number">1</span>) &#123;</span><br><span class="line">        Date = SBUF;</span><br><span class="line">        Send_Data(Date + <span class="number">1</span>);</span><br><span class="line">        RI = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Send_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span> <span class="comment">// 发送数据</span></span><br><span class="line">&#123;</span><br><span class="line">    SBUF = dat;</span><br><span class="line">    <span class="keyword">while</span> (TI == <span class="number">0</span>);</span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础13】串行接口的进阶应用">【基础13】串行接口的进阶应用</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、初始化串口为模式1，即8 位UART 模式，波特率9600，允许接收。</p><p>2、数据发送采用查询方式，数据接收采用中断方式。</p><p>3、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯，通过串口向上位机发送字符串：“Welcome to XMF system！”，回车换行。</p><p>4、上位机通过串口发送单字节命令，控制单片机的8 个LED 灯开关，单片机响应正确的控制命令后，完成相应的灯光操作。</p><p>5、上位机通过串口发送单字节命令，读取单片机运行信息，单片机响应正确的读取命令后，向上位机返回指定的信息。</p><p>6、上位机与单片机的通信规约如下表：</p><p><img src="https://s2.loli.net/2023/03/28/LjcKZkXGp8vYFma.png" alt="image-20230328133857154"></p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>; <span class="comment">// IAP15F2K61S新增配置</span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span>;                   <span class="comment">// 初始化串口</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span>;  <span class="comment">// 串口发送一个字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentDate</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *str)</span>; <span class="comment">// 串口发送字符串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138_Init</span><span class="params">(<span class="type">void</span>)</span>;                  <span class="comment">// 初始化74HC138</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Data = <span class="number">0x00</span>; <span class="comment">// 接收到的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 13串行接口的进阶应用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    UART_Init();  <span class="comment">// 初始化串口</span></span><br><span class="line">    HC138_Init(); <span class="comment">// 初始化74HC138</span></span><br><span class="line">    UART_SentDate(<span class="string">&quot;Welcome to XMF system!\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Data != <span class="number">0x00</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (Data &amp; <span class="number">0xf0</span>) &#123;</span><br><span class="line">                <span class="comment">// 模式判断</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0xa0</span>: <span class="comment">// 控制L1~L4灯</span></span><br><span class="line">                    P0 = <span class="number">0xff</span>;</span><br><span class="line">                    P0 = P0 &amp; (~Data | <span class="number">0xf0</span>);</span><br><span class="line">                    Data = <span class="number">0x00</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0xb0</span>: <span class="comment">// 控制L5~L8灯</span></span><br><span class="line">                    P0 = <span class="number">0xff</span>;</span><br><span class="line">                    P0 = P0 &amp; ((~Data &lt;&lt; <span class="number">4</span>) | <span class="number">0x0f</span>);</span><br><span class="line">                    Data = <span class="number">0x00</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0xc0</span>: <span class="comment">// 返回状态</span></span><br><span class="line">                    UART_SentDate(<span class="string">&quot;The System is Running...\r\n&quot;</span>);</span><br><span class="line">                    Data = <span class="number">0x00</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 初始化串口</span></span><br><span class="line">&#123;</span><br><span class="line">    PCON &amp;= <span class="number">0x7F</span>; <span class="comment">// 波特率不倍速</span></span><br><span class="line">    SCON = <span class="number">0x50</span>;  <span class="comment">// 8位数据,可变波特率</span></span><br><span class="line">    TMOD &amp;= <span class="number">0x0F</span>; <span class="comment">// 清除定时器1模式位</span></span><br><span class="line">    TMOD |= <span class="number">0x20</span>; <span class="comment">// 设定定时器1为8位自动重装方式</span></span><br><span class="line"></span><br><span class="line">    TL1 = <span class="number">0xFD</span>; <span class="comment">// 设定定时初值</span></span><br><span class="line">    TH1 = <span class="number">0xFD</span>; <span class="comment">// 设定定时器重装值</span></span><br><span class="line">    ET1 = <span class="number">0</span>;    <span class="comment">// 禁止定时器1中断</span></span><br><span class="line">    TR1 = <span class="number">1</span>;    <span class="comment">// 启动定时器1</span></span><br><span class="line">    EA  = <span class="number">1</span>;    <span class="comment">// 使能总中断</span></span><br><span class="line">    PT1 = <span class="number">0</span>;    <span class="comment">// 定时器1为低优先级中断</span></span><br><span class="line">    ES  = <span class="number">1</span>;    <span class="comment">// 使能串口中断</span></span><br><span class="line"></span><br><span class="line">    AUXR = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Routine</span><span class="params">(<span class="type">void</span>)</span> interrupt 4 <span class="comment">// 串口中断函数，接受数据</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (RI == <span class="number">1</span>) &#123;</span><br><span class="line">        Data = SBUF; <span class="comment">// 读取数据</span></span><br><span class="line">        RI   = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span> <span class="comment">// 串口发送一个字节</span></span><br><span class="line">&#123;</span><br><span class="line">    SBUF = dat;</span><br><span class="line">    <span class="keyword">while</span> (!TI);</span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentDate</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *str)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        UART_SentByte(*str++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">    HC138_B = <span class="number">0</span>;</span><br><span class="line">    HC138_A = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="【基础14】存储器映射扩展技术应用">【基础14】存储器映射扩展技术应用</h2><blockquote><p>新建工程，以MM 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、循环实现以下功能：</p><ul><li>首先，点亮指示灯低4 位，关闭高4 位，延时片刻；</li><li>接着，点亮指示灯的高4 位，关闭低4 位，延时片刻；</li><li>然后，关闭所有指示灯。</li><li>接着，依次逐个点亮数码管的所有段码，每次只点亮一个数码管。</li></ul><p>3、外部扩展资源的地址映射关系：</p><ul><li>LED 指示灯---- 0x8000；</li><li>蜂鸣器与继电器----0xa000；</li><li>数码管位选----0xc000；</li><li>数码管段码----0xe000</li></ul><p>4、关于CT107D 存储器映射扩展MM 编程模式的设计提示：CT107D 平台的J13 要将1-2 脚短接，选择MM 模式。<br>程序中引入头文件“absacc.h”，通过XBYTE 关键字来直接操作扩展资源。</p><p>存储器映射扩展方式要占用单片机的P3.6 引脚。</p></blockquote><p><strong>IO扩展：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;        <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC573</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> i)</span>; <span class="comment">// 选择HC573</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 14存储器映射扩展技术应用(IO扩展)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        Select_HC573(<span class="number">4</span>);</span><br><span class="line">        P0 = <span class="number">0xf0</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0x0f</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            Select_HC573(<span class="number">6</span>);</span><br><span class="line">            P0 = <span class="number">0x01</span> &lt;&lt; i;</span><br><span class="line">            Select_HC573(<span class="number">7</span>);</span><br><span class="line">            P0 = <span class="number">0x00</span>;</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        P0 = <span class="number">0xff</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC573</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> i)</span> <span class="comment">// 选择HC573</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0x80</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0xa0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0xc0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0xe0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><hr><p><strong>存储器扩展：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;absacc.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>; <span class="comment">// 延迟函数</span></span><br><span class="line"></span><br><span class="line">voidmain(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xf0</span>;</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xf0</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0x0f</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            XBYTE[<span class="number">0xc000</span>] = <span class="number">0x01</span> &lt;&lt; i;</span><br><span class="line">            XBYTE[<span class="number">0xe000</span>] = <span class="number">0x00</span>;</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        XBYTE[<span class="number">0xe000</span>] = <span class="number">0xff</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础15】工厂灯光控制系统">【基础15】工厂灯光控制系统</h2><blockquote><p>新建工程，分别以I/O 模式和MM 模式编写代码，在CT107D 单片机综合训练平台上，实现灯光的本地操作和远程控制，并通过串口远程读取系统的运行时间，模拟实现工厂灯光控制系统。具体功能要求如下：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、首先检测LED 指示灯，从L1 到L8 依次逐个点亮，再依次逐个熄灭；然后检测数码管，从左到右依次点亮数码管的所有段码，再依次从左到右熄灭。</p><p>3、系统从上电开始显示系统运行时间，从00 时00 分00 秒开始，显示格式：</p><p><img src="https://s2.loli.net/2023/03/28/3xan1A7u2YTHRvV.png" alt="image-20230328134034643"></p><p>4、8 个LED 指示灯分为2 组：L1、L2、L3 和L4 为远程控制组，L7 和L8 为本地控制组。远程控制组的指LED 示灯由上位机通过串口发送命令控制开关，本地控制组的LED 指示灯由独立按键控制开关。按键松开有效，S5 按键控制L7 指示灯，S4 按键控制L8 指示灯。</p><p>5、串口工作在模式1，即8 位UART 模式，波特率为9600（使用9600 波特率时，晶振时钟选择11.0592MHz。如果是其他频率的系统时钟，需要降低波特率，可选择用2400，否则串口通信可能出现乱码，无法正常收发数据）。</p><p>6、上位机通过串口控制下位机的L1 到L4 指示灯和读取系统运行时间。</p><p>7、上位机和单片机的串口通信规约如下表：</p><p><img src="https://s2.loli.net/2023/03/28/FkKgLlC9XZRaAxc.png" alt="image-20230328134045274"></p><p>控制命令为一个字节，高4 位为命令类型，低4 位为执行参数。控制灯光开关命令中，低4 位每1 位控制一个LED 灯的开关，无返回值。读取运行时间命令中，低4 位保留，各位为0，返回3 个字节的时间数据，用16 进制的BCD 码表示，先发时，再发分，后发秒。如果系统运行的时间为12 时24 分16 秒，收到读取时间命令字后，返回：0x12 0x24 0x16。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>; <span class="comment">// IAP15F2K61S新增配置</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>, <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line">sbit Key1 = P3^<span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3^<span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line"></span><br><span class="line">sbit L7   = P0^<span class="number">6</span>; <span class="comment">// LED1</span></span><br><span class="line">sbit L8   = P0^<span class="number">7</span>; <span class="comment">// LED1</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>; <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC138</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 初始化74HC138</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Show_Time</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//数码管显示时间</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Time0_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//定时器初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//初始化串口</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">()</span>;<span class="comment">//设备判断</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Key</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//判断按键</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span>;<span class="comment">//发送字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Data</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//判断串口数据</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> hour=<span class="number">0</span>,min=<span class="number">0</span>,sec=<span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Data = <span class="number">0x00</span>; <span class="comment">// 接收到的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">Time0_Init();</span><br><span class="line">UART_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">0</span>)<span class="comment">//第一次运行，设备检验</span></span><br><span class="line">&#123;</span><br><span class="line">check();</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Show_Time();<span class="comment">//数码管显示时间</span></span><br><span class="line">Check_Key();<span class="comment">//判断按键</span></span><br><span class="line">Check_Data();<span class="comment">//判断串口数据</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span><span class="comment">//延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(t)&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC138</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(n)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>;<span class="comment">//Y4输出0，选择LED控制</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>;<span class="comment">//Y5输出0，选择蜂鸣器和继电器控制</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>;<span class="comment">//Y6输出0，选择数码管位选</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>;<span class="comment">//Y7输出0，选择数码管段码</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x00</span>;<span class="comment">//所有锁存器不选择</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">Select_HC138(<span class="number">6</span>);</span><br><span class="line">P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">Select_HC138(<span class="number">7</span>);</span><br><span class="line">P0 = Duanma[num];</span><br><span class="line"></span><br><span class="line"><span class="comment">//消影</span></span><br><span class="line">Delay(<span class="number">1</span>);</span><br><span class="line">    P0 = <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Show_Time</span><span class="params">()</span><span class="comment">//数码管显示时间</span></span><br><span class="line">&#123;</span><br><span class="line">LED_Shu(<span class="number">0</span>, hour / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">1</span>, hour % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">2</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">3</span>, min / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">4</span>, min % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">5</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">6</span>, sec / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">7</span>, sec % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Time0_Init</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//50毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD &amp;= <span class="number">0xF0</span>;<span class="comment">//设置定时器模式</span></span><br><span class="line">TMOD |= <span class="number">0x01</span>;<span class="comment">//设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">TF0 = <span class="number">0</span>;<span class="comment">//清除TF0标志</span></span><br><span class="line">TR0 = <span class="number">1</span>;<span class="comment">//定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">()</span><span class="comment">//设备判断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = <span class="number">0xff</span> &lt;&lt; i;</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = ~(<span class="number">0xff</span> &lt;&lt; i);</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Select_HC138(<span class="number">6</span>);</span><br><span class="line">P0 = <span class="number">0x01</span> &lt;&lt; i;</span><br><span class="line">Select_HC138(<span class="number">7</span>);</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Select_HC138(<span class="number">6</span>);</span><br><span class="line">P0 = ~(<span class="number">0x01</span> &lt;&lt; i);</span><br><span class="line">Select_HC138(<span class="number">7</span>);</span><br><span class="line">P0 = <span class="number">0xFF</span>;</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Key</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Key1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Show_Time();</span><br><span class="line"><span class="keyword">while</span>(Key1 == <span class="number">0</span>) </span><br><span class="line">Show_Time();</span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line">L8 = ~L8;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Key2 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Show_Time();</span><br><span class="line"><span class="keyword">while</span>(Key2 == <span class="number">0</span>) </span><br><span class="line">Show_Time();</span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line">L7 = ~L7;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//9600bps@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">SCON = <span class="number">0x50</span>;<span class="comment">//8位数据,可变波特率</span></span><br><span class="line">TMOD &amp;= <span class="number">0x0F</span>;<span class="comment">//清除定时器1模式位</span></span><br><span class="line">TMOD |= <span class="number">0x20</span>;<span class="comment">//设定定时器1为8位自动重装方式</span></span><br><span class="line">TL1 = <span class="number">0xFD</span>;<span class="comment">//设定定时初值</span></span><br><span class="line">TH1 = <span class="number">0xFD</span>;<span class="comment">//设定定时器重装值</span></span><br><span class="line">ET1 = <span class="number">0</span>;<span class="comment">//禁止定时器1中断</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//启动定时器1</span></span><br><span class="line"></span><br><span class="line">ES = <span class="number">1</span>;</span><br><span class="line">AUXR = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF = dat;</span><br><span class="line">    <span class="keyword">while</span> (!TI);</span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Data</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Data != <span class="number">0x00</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(Data &amp; <span class="number">0xf0</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xa0</span>:<span class="comment">//远程灯光控制命令</span></span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line">                P0 = <span class="number">0xff</span>;</span><br><span class="line">P0 = P0 &amp; (~Data | <span class="number">0xf0</span>);</span><br><span class="line">Select_HC138(<span class="number">0</span>);</span><br><span class="line">Data = <span class="number">0x00</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xb0</span>:<span class="comment">//读取现场系统运行时间命令</span></span><br><span class="line">UART_SendByte((hour / <span class="number">10</span> &lt;&lt; <span class="number">4</span>) | (hour % <span class="number">10</span>));</span><br><span class="line">UART_SendByte((min / <span class="number">10</span> &lt;&lt; <span class="number">4</span>) | (min % <span class="number">10</span>));</span><br><span class="line">UART_SendByte((sec / <span class="number">10</span> &lt;&lt; <span class="number">4</span>) | (sec % <span class="number">10</span>));</span><br><span class="line">Data = <span class="number">0x00</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Time0_Run</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">20</span>)<span class="comment">//1s</span></span><br><span class="line">&#123;</span><br><span class="line">sec++;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(sec == <span class="number">60</span>)&#123;</span><br><span class="line">min++;</span><br><span class="line">sec = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(min == <span class="number">60</span>)&#123;</span><br><span class="line">hour++;</span><br><span class="line">min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(hour == <span class="number">24</span>)</span><br><span class="line">hour = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Run</span><span class="params">(<span class="type">void</span>)</span> interrupt 4</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RI == <span class="number">1</span>) &#123;</span><br><span class="line">        Data = SBUF;</span><br><span class="line">        RI = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云图床搭建</title>
      <link href="/post/b9a4e327.html"/>
      <url>/post/b9a4e327.html</url>
      
        <content type="html"><![CDATA[<h1>一、登录阿里云</h1><blockquote><p>注册、登录、<strong>实名认证</strong></p></blockquote><h1>二、购买对象存储OSS</h1><blockquote><p>在产品中找到对象存储OSS</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319790.png" alt="image-20230330223507765"></p><blockquote><p>我是新用户，这里先购买三个月的使用期</p></blockquote><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319791.png" alt="image-20230330223639443" style="zoom:50%;" /><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319792.png" alt="image-20230330223704380" style="zoom:50%;" /><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319793.png" alt="image-20230330223742995" style="zoom: 67%;" /><h1>三、开通对象存储服务 OSS</h1><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319794.png" alt="image-20230330223927065"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319795.png" alt="image-20230330223941173"></p><h1>四、创建bucket</h1><blockquote><p>选择左侧的bucket列表，然后选择右侧的创建Bucket</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319796.png" alt="image-20230330224142694"></p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319798.png" alt="image-20230330224739606" style="zoom:67%;" /><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319799.png" alt="image-20230330225000992" style="zoom:67%;" /><blockquote><p>HDFS、版本控制、服务端加密方式、实时日志查询、定时备份   都不开通，不然需要另外收费</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319800.png" alt="image-20230330225608062"></p><blockquote><p>地域结点只要复制 oss-cn-beijing 即可，后面的.aliyuncs.com不需要；后面会用到这个地域结点</p></blockquote><h1>五、获取AccessKey</h1><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319801.png" alt="image-20230330225714598"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319802.png" alt="image-20230330225744760"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319803.png" alt="image-20230330225804403"></p><blockquote><p>在弹出的页面里，记住你的 <strong>accessKeyId</strong> 和 <strong>accessKeySecret</strong></p></blockquote><h1>六、下载配置PicGo</h1><p>下载：<a href="https://github.com/Molunerfinn/PicGo/releases">Releases · Molunerfinn/PicGo (github.com)</a></p><p>图床设置：</p><ul><li><p>设定Keyld：填写刚刚获得的<code>AccessKeyID</code></p></li><li><p>设定KeySecret：填写<code>AccessKeyIDSecret</code></p></li><li><p>设定Bucket：填写bucket名称，这里填写的是你所创建的bucket名字，不是浏览器里的域名</p></li><li><p>确认存储区域：填写你的地域节点，注意复制的格式</p></li><li><p>指定存储路径：其实就是自定义一个文件夹的名字，以 / 结尾；它会自动在你所创建的Bucket里面创建一个文件夹，并把图片上传进去，因此我们不需要在Bucket里面手动的创建这个文件夹</p></li></ul><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319804.png" alt="image-20230330230810995"  /><blockquote><p>打开时间戳命名</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319805.png" alt="image-20230330230906779"></p><h1>七、测试Typroa使用图床</h1><p>配置信息</p><ul><li>打开设置:<code>文件--&gt;偏好设置---&gt;图像</code></li><li>选择:复制图片到 ./assets 文件夹</li><li>勾选附加选项:和下图一样即可</li><li>设置PicGo的安装路径即可：xxx/xxx/PicGo.exe</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319806.png" alt="image-20230330231059792"></p><blockquote><p>验证</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319807.png" alt="image-20230330231247517"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯备赛题解（小蜜蜂）（一）</title>
      <link href="/post/b97e48cf.html"/>
      <url>/post/b97e48cf.html</url>
      
        <content type="html"><![CDATA[<h1>必备基础技能训练15 项</h1><h2 id="【基础01】LED-指示灯的基本控制">【基础01】LED 指示灯的基本控制</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭8 个LED 灯。</p><p>2、循环实现LED 跑马灯控制，控制要求为：</p><ul><li>首先，8 个LED 灯同时闪烁3 次；</li><li>然后，从L1 灯至L8 灯依次点亮；</li><li>接着，从L1 灯至L8 灯依次熄灭</li></ul></blockquote><img src="https://s2.loli.net/2023/03/28/Yg8dBNpSmPT5FKk.png" alt="image-20230327212535768" style="zoom:60%;" /><p><strong>代码实现：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    HC138_A = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">    HC138_B = <span class="number">0</span>;</span><br><span class="line">    HC138_C = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 8个LED灯同时闪烁3次</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            P0 = <span class="number">0X00</span>; <span class="comment">// P0口输出1</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">            P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 八个灯依次点亮</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = (<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 八个灯依次熄灭</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = ~(<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础02】蜂鸣器和继电器的基本控制">【基础02】蜂鸣器和继电器的基本控制</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、循环实现以下功能：</p><ul><li>首先，8 个LED 灯同时闪烁3 次；</li><li>接着，从L1 灯至L8 灯依次点亮；</li><li>然后，继电器吸合，延时片刻，继电器断开；</li><li>接着，从L1 灯至L8 灯依次熄灭；</li><li>最后，蜂鸣器鸣叫一会后关闭。</li></ul></blockquote><p><img src="https://s2.loli.net/2023/03/28/i4Eb1mR85hK2Dxz.png" alt="image-20230327221234377"></p><blockquote><p><strong>注意达林顿管的存在</strong></p></blockquote><p><strong>代码实现：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        HC138_C = <span class="number">0</span>; <span class="comment">// 设置74HC138为 000  0</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    HC138Init(<span class="number">0</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        HC138Init(<span class="number">4</span>); <span class="comment">// 开始控制LED灯</span></span><br><span class="line">        <span class="comment">// 8个LED灯同时闪烁3次</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            P0 = <span class="number">0X00</span>; <span class="comment">// P0口输出1</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">            P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 八个灯依次点亮</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = (<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HC138Init(<span class="number">5</span>); <span class="comment">// 开始控制继电器</span></span><br><span class="line">        P0 = <span class="number">0x10</span>;      <span class="comment">// 继电器吸合 0001 0000 虽然低电平驱动，但是由于达林顿管的存在，给高电平</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0X00</span>; <span class="comment">// 继电器断开</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        HC138Init(<span class="number">4</span>); <span class="comment">// 开始控制LED灯</span></span><br><span class="line">        <span class="comment">// 八个灯依次熄灭</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = ~(<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HC138Init(<span class="number">5</span>); <span class="comment">// 开始控制蜂鸣器</span></span><br><span class="line">        P0 = <span class="number">0x40</span>;      <span class="comment">// 继电器吸合 0100 0000</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0X00</span>; <span class="comment">// 继电器断开</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础03】数码管的静态显示">【基础03】数码管的静态显示</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、8 个数码管从左至右，逐个数码管依次显示“0”到“9”的10 个数字。</p><ul><li>即左边第1 个数码管依次显示“0”到“9”，其他数码管熄灭；接着左边第2 个数码管</li><li>依次显示“0”到“9”，其他数码管熄灭…依次类推，直到8 个数码管显示完成。</li></ul><p>3、8 个数码管同时显示“0”到“9”的10 个数字和“A”到“F”的6 个字母。</p><p>4、循环实现上面2 组数码管的显示功能。</p></blockquote><p><img src="https://s2.loli.net/2023/03/28/tSfzslkIneCT7Fv.png" alt="image-20230327223845970"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">16</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i, j;</span><br><span class="line">    HC138Init(<span class="number">0</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 从左到右每个数码管依次显示0~9</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">9</span>; j++) &#123;</span><br><span class="line">                LED_Shu(i, j);</span><br><span class="line">                Delay(<span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 所有数码管同时显示0~F</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">16</span>; i++) &#123;</span><br><span class="line">            HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">            P0 = <span class="number">0XFF</span>;</span><br><span class="line">            HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">            P0 = Duanma[i];</span><br><span class="line">            Delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础04】数码管的动态显示">【基础04】数码管的动态显示</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、在8 位数码管中，左边4 位数码管显示年份“2018”，接着2 位是分隔符“–”，靠右的2 位数码管显示月份。</p><ul><li>从1 月份开始，每隔一段时间加1 个月，到12 月之后又从1 月开始递增，如此循环往复。</li></ul></blockquote><blockquote><p>主要delay时间，扫描时间过慢会导致数码管闪烁</p><p>记得消抖</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>, <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_LED</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                        <span class="comment">// LED私有延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span>;                                        <span class="comment">// LED显示</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> mounth = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 04动态数码管显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">0</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        mounth++;</span><br><span class="line">        <span class="keyword">if</span> (mounth &gt; <span class="number">12</span>)</span><br><span class="line">            mounth = <span class="number">1</span>;</span><br><span class="line">        Delay_LED(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_LED</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// LED私有延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        Display(); <span class="comment">// 边计数，边显示，保证计数过程不会中断显示</span></span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">    <span class="comment">// 消影</span></span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    P0 = <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span> <span class="comment">// LED显示</span></span><br><span class="line">&#123;</span><br><span class="line">    LED_Shu(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">    LED_Shu(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    LED_Shu(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">3</span>, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">4</span>, <span class="number">16</span>);</span><br><span class="line">    LED_Shu(<span class="number">5</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">6</span>, mounth / <span class="number">10</span>);</span><br><span class="line">    LED_Shu(<span class="number">7</span>, mounth % <span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础05】独立按键的基本操作">【基础05】独立按键的基本操作</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到2～3 引脚，使S4、S5、S6 和S7 成为4 个独立按键。</p><p>2、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>3、循环扫描按键状态，在确认按键按下时，进行去抖动处理。当S7 按键按下时，点亮L1 指示灯，松开后熄灭；当S6 按键按下时，点亮L2 指示灯，松开后熄灭；当S5 按键按下时，点亮L3 指示灯，松开后熄灭；当S4 按键按下时，点亮L4 指示灯，松开后熄灭。</p></blockquote><p><img src="https://s2.loli.net/2023/03/28/jRyiJObdUlMaDVT.png" alt="image-20230328170430023"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3 ^ <span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3 ^ <span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line">sbit Key3 = P3 ^ <span class="number">2</span>; <span class="comment">// 按键3</span></span><br><span class="line">sbit Key4 = P3 ^ <span class="number">3</span>; <span class="comment">// 按键4</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;     <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 05独立按键的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">4</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key1 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XFE</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key2 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key2 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XFD</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key3 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key3 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XFB</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key4 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key4 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XF7</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            P0 = <span class="number">0XFF</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础06】独立按键的扩展应用">【基础06】独立按键的扩展应用</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到2～3 引脚，使S4、S5、S6 和S7 成为4 个独立按键。</p><p>2、S7 和S6 为选择键，确定控制键控制那组LED 指示灯；S5 和S4 为控制键，按键按下时点亮指定的LED 指示灯，按键松开，LED 指示灯熄灭。</p><p>3、按下S7 按键，点亮L1 指示灯，S6 按键按下无效，不响应操作；此时S5 控制L3 指示灯，S4 控制L4 指示灯；再次按下S7 按键，L1 指示灯熄灭，S6 按键按下有效。</p><p>4、按下S6 按键，点亮L2 指示灯，S7 按键按下无效，不响应操作；此时S5 控制L5 指示灯，S4 控制L6 指示灯；再次按下S6 按键，L2 指示灯熄灭，S7 按键按下有效。<br>5、在S7 和S6 按键都不按下的情况下，即L1 和L2 指示灯均未点亮时，控制键不能操作，S5 和S4 按键按下无效。</p><p>6、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>7、循环扫描按键状态，根据按键的按下情况，进行相应的处理。</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3 ^ <span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3 ^ <span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line">sbit Key3 = P3 ^ <span class="number">2</span>; <span class="comment">// 按键3</span></span><br><span class="line">sbit Key4 = P3 ^ <span class="number">3</span>; <span class="comment">// 按键4</span></span><br><span class="line"></span><br><span class="line">sbit L1 = P0 ^ <span class="number">0</span>;</span><br><span class="line">sbit L2 = P0 ^ <span class="number">1</span>;</span><br><span class="line">sbit L3 = P0 ^ <span class="number">2</span>;</span><br><span class="line">sbit L4 = P0 ^ <span class="number">3</span>;</span><br><span class="line">sbit L5 = P0 ^ <span class="number">4</span>;</span><br><span class="line">sbit L6 = P0 ^ <span class="number">5</span>;</span><br><span class="line">sbit L7 = P0 ^ <span class="number">6</span>;</span><br><span class="line">sbit L8 = P0 ^ <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;     <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span>;               <span class="comment">// 读取按键值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 06独立按键的扩展应用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> flag1 = <span class="number">0</span>, flag2 = <span class="number">0</span>; <span class="comment">// 用于标记按键1和按键2的状态</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> KeyNum;               <span class="comment">// 用于存放按键值</span></span><br><span class="line"></span><br><span class="line">    HC138Init(<span class="number">4</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        KeyNum = ReadKeyNum();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (KeyNum == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">0</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag1 = <span class="number">1</span>; <span class="comment">// 第一次按下按键1</span></span><br><span class="line">            L1    = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (KeyNum == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">1</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag1 = <span class="number">0</span>; <span class="comment">// 第二次按下按键1</span></span><br><span class="line">            L1    = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (KeyNum == <span class="number">2</span> &amp;&amp; flag2 == <span class="number">0</span> &amp;&amp; flag1 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag2 = <span class="number">1</span>; <span class="comment">// 第一次按下按键2</span></span><br><span class="line">            L2    = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (KeyNum == <span class="number">2</span> &amp;&amp; flag2 == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag2 = <span class="number">0</span>; <span class="comment">// 第二次按下按键2</span></span><br><span class="line">            L2    = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (Key3 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag1 == <span class="number">1</span>) &#123; <span class="comment">// 状态1</span></span><br><span class="line">                L3 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag2 == <span class="number">1</span>) &#123; <span class="comment">// 状态2</span></span><br><span class="line">                L5 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        L3 = <span class="number">1</span>;</span><br><span class="line">        L5 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (Key4 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag1 == <span class="number">1</span>) &#123; <span class="comment">// 状态1</span></span><br><span class="line">                L4 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag2 == <span class="number">1</span>) &#123; <span class="comment">// 状态2</span></span><br><span class="line">                L6 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        L4 = <span class="number">1</span>;</span><br><span class="line">        L6 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span> <span class="comment">// 读取按键值</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key1 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key2 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key2 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key3 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key3 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key4 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key4 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础07】矩阵键盘的基本操作">【基础07】矩阵键盘的基本操作</h2><blockquote><p>新建工程，以I/O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到1～2 引脚，使S4 到S19 成为4X4 的矩阵键盘。</p><p>2、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>3、循环扫描矩阵键盘状态，发现有按键按下，等待其松开后，在数码管的最左边1 位显示相应的数字。从左至右，从上到下，依次显示“0”到“F”。即按下S7，显示“0”，按下S11 显示“1”，按下S15 显示“2”，按下S6 显示“4”…依次类推。</p></blockquote><p><img src="https://s2.loli.net/2023/03/28/OquyaXFlRmjJd6o.png" alt="image-20230328192636670"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;REG51.H&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit line1 = P3^<span class="number">0</span>; <span class="comment">// 第一行</span></span><br><span class="line">sbit line2 = P3^<span class="number">1</span>; <span class="comment">// 第二行</span></span><br><span class="line">sbit line3 = P3^<span class="number">2</span>; <span class="comment">// 第三行</span></span><br><span class="line">sbit line4 = P3^<span class="number">3</span>; <span class="comment">// 第四行</span></span><br><span class="line"></span><br><span class="line">sbit col1 = P3^<span class="number">7</span>; <span class="comment">// 第一列</span></span><br><span class="line">sbit col2 = P3^<span class="number">6</span>; <span class="comment">// 第二列</span></span><br><span class="line">sbit col3 = P3^<span class="number">5</span>; <span class="comment">// 第三列</span></span><br><span class="line">sbit col4 = P3^<span class="number">4</span>; <span class="comment">// 第四列</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">16</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span>;                                     <span class="comment">// 扫描矩阵键盘</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> KeyNumber = <span class="number">1</span>;                            <span class="comment">// 按键值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        ReadKeyNum();</span><br><span class="line">        LED_Shu(<span class="number">0</span>, KeyNumber);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span><span class="comment">// 扫描矩阵键盘</span></span><br><span class="line">&#123;</span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">3</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">4</span>;&#125;</span><br><span class="line"></span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">5</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">6</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">7</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">8</span>;&#125;</span><br><span class="line"></span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">9</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">10</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">11</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">12</span>;&#125;</span><br><span class="line"></span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line4 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">13</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">14</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">15</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">16</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode开发51单片机</title>
      <link href="/post/593df09b.html"/>
      <url>/post/593df09b.html</url>
      
        <content type="html"><![CDATA[<h1>一、安装插件(EIDE)</h1><p><img src="https://s2.loli.net/2023/03/27/gzYncHyOQfkTtrx.png" alt="image-20230327131445564"></p><h1>二、配置Keil C51路径</h1><p><img src="https://s2.loli.net/2023/03/27/A5xiou3GMS1Lg2t.png" alt="image-20230327131639841"></p><p><img src="https://s2.loli.net/2023/03/27/gTRKO5FHth1XwAx.png" alt="image-20230327131952964"></p><h1>三、新建项目</h1><blockquote><p>建立8位MCU项目</p></blockquote><img src="https://s2.loli.net/2023/03/27/4M5tfReuC1Gb8kw.png" alt="image-20230327132104007" style="zoom:60%;" /><h1>四、修改编译器</h1><p><img src="https://s2.loli.net/2023/03/27/obfUq7KtP6vzkR2.png" alt="image-20230327132454865"></p><h1>五、创建文件夹</h1><blockquote><p>创建一个存放代码的文件夹，并将其添加到项目中</p></blockquote><p><img src="https://s2.loli.net/2023/03/27/SRyjWUe5zmTakZg.png" alt="image-20230327132917570"></p><p><img src="https://s2.loli.net/2023/03/27/i4UBN9D7atmwTWg.png" alt="image-20230327133018498"></p><p><img src="https://s2.loli.net/2023/03/27/jRXG21PwWZLFgTu.png" alt="image-20230327133104574"></p><h1>六、新建文件，进行测试</h1><blockquote><p>正常方式在SRC文件夹下创建文件</p></blockquote><p><img src="https://s2.loli.net/2023/03/27/BjI8lVZSKQyxRCo.png" alt="image-20230327133325819"></p><blockquote><p>编译</p></blockquote><p><img src="https://s2.loli.net/2023/03/27/PAJulqQMj6hatwD.png" alt="image-20230327133606472"></p><blockquote><p>使用烧录软件将生成的hex文件下载</p></blockquote><blockquote><p>流水灯代码</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    P2 = <span class="number">0XFE</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P2 =_crol_(P2,<span class="number">1</span>);;</span><br><span class="line">            Delay(<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署和添加域名</title>
      <link href="/post/26f271be.html"/>
      <url>/post/26f271be.html</url>
      
        <content type="html"><![CDATA[<h1>一、Netlify建站</h1><h2 id="1-1-注册">1.1 注册</h2><p>去官网进行注册<a href="https://www.netlify.com/">Netlify</a></p><p>绑定自己的GitHub账号</p><h2 id="1-2-导入GitHub仓库">1.2 导入GitHub仓库</h2><blockquote><center>根据提示操作进行,一切默认</center></blockquote><p><img src="https://s2.loli.net/2023/03/26/9YFsDfw65bTSaEW.png" alt="image-20230326222940859"></p><h2 id="1-3-查看部署好的网站">1.3 查看部署好的网站</h2><p>我的通过Netlify部署完是：<a href="https://yhhomea.netlify.app/">yhhomea.netlify.app</a>【这里还没有绑定自己的域名，下图的已经绑定域名】</p><p><img src="https://s2.loli.net/2023/03/26/HoM3eDCNpcduwnl.png" alt="image-20230326223506287"></p><blockquote><p>现在打开Netlify部署的网址打开速度较慢，后面通过使用ClouldFlare  CDN加速来提高访问速度</p></blockquote><h1>二、配置域名</h1><h2 id="2-1-购买域名（新用户1元一年">2.1 购买域名（新用户1元一年)</h2><blockquote><p>这里推荐新用户购买</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/buvGL4TYMCHnm8V.png" alt="image-20230326224318175"></p><blockquote><p>在购买域名前，要先进行实名认证</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/QoeKvZHVMU341Ik.png" alt="image-20230326224358372"></p><blockquote><p>根据提示进行实名认证</p></blockquote><h2 id="2-2-域名解析">2.2 域名解析</h2><p>打开阿里云域名控制台，找到自己购买的域名</p><p><img src="https://s2.loli.net/2023/03/26/JyHadFNrPITWSlf.png" alt="image-20230326224602967"></p><p><img src="https://s2.loli.net/2023/03/26/Q5ATXNgWs9R23vn.png" alt="image-20230326224642133"></p><blockquote><p>根据下图继续，添加两条解析</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/AlXurgvtOdJQ9sy.png" alt="image-20230326224849545"></p><h2 id="2-3-Netlify中添加自己的域名">2.3 Netlify中添加自己的域名</h2><img src="https://s2.loli.net/2023/03/26/nydREVZoWtSPMDG.png" alt="image-20230326225009874" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/7syDUiYP9EhTSZp.png" alt="image-20230326225113745" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/FJglKmABp1Izj5u.png" alt="image-20230326225221188" style="zoom:67%;" /><h1>三、ClouldFlare加速</h1><h2 id="3-1-注册Clouldflare并登陆">3.1 注册<a href="https://www.cloudflare.com/zh-cn/">Clouldflare</a>并登陆</h2><p>这里可能需要挂梯子</p><h2 id="3-2-添加站点">3.2 添加站点</h2><img src="https://s2.loli.net/2023/03/26/JVQou3i1CfENLUz.png" alt="image-20230326225419354" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/v3l7cda1qsToMPp.png" alt="image-20230326225444129" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/jcLBAosISvO1u4Z.png" alt="image-20230326225524687" style="zoom:67%;" /><h2 id="3-3-阿里云配置DNS">3.3 阿里云配置DNS</h2><blockquote><p>找到下图所示的两个NS</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/gntAQIUDRl9VHLz.png" alt="image-20230326225800489"></p><blockquote><p>进入阿里云域名控制台，找到你购买的域名，点击管理</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/BcjDAxHO71gYCpW.png" alt="image-20230326225906299"></p><img src="https://s2.loli.net/2023/03/26/cs1Ll4k7rPmfgB5.png" alt="image-20230326230006959" style="zoom:67%;" /><p><img src="https://s2.loli.net/2023/03/26/nxGMFyVPKcAZzbq.png" alt="image-20230326230042311"></p><blockquote><p>完成后点击确定</p></blockquote><h2 id="3-4-等待clouldflare确定邮箱">3.4 等待clouldflare确定邮箱</h2><p>配置完成后，clouldflare会有邮件通知</p><img src="https://s2.loli.net/2023/03/26/igL8BXW3AsuEvcS.png" alt="image-20230326230339133" style="zoom:50%;" /><h1>四、配置成功后最终效果</h1><blockquote><ul><li><p><img src="https://s2.loli.net/2023/03/26/mfAPFpOywDj8U79.png" alt="image-20230326230411162"></p></li><li><p><img src="https://s2.loli.net/2023/03/26/EgNHVdR9nsBCfjK.png" alt="image-20230326230506557"></p></li><li><p><img src="https://s2.loli.net/2023/03/26/LPuqYxpoNhnivdX.png" alt="image-20230326230524184"></p></li><li><p>你购买的域名网址可以访问博客</p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/post/9639fcc6.html"/>
      <url>/post/9639fcc6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境准备：</p><p>1.安装git</p><p>2.安装node.js</p><p>3.最好下载一个代码编辑器（例如：VScode、Sublime Text、notepad++等）</p></blockquote><h1>一、安装HEXO</h1><h2 id="打开cmd，输入以下命令">打开cmd，输入以下命令</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="报错及解决方法">报错及解决方法</h3><p><img src="https://s2.loli.net/2023/03/23/1mHePG8cLuF7ARD.png" alt="image-20230323223026426"></p><p>参考这篇博客，文档的权限进行提升：</p><blockquote><p><a href="https://blog.csdn.net/qq_44075310/article/details/128255366">(2条消息) npm安装报错（npm ERR! code EPERM npm ERR! syscall mkdir npm ERR! path C:\Program Files\nodejs\node_ca…）_晴雷的博客-CSDN博客</a></p></blockquote><p>如果发现，根据博客里面的步骤进行更改时，无法修改某一文档的权限时，根据报错时的提醒，单独修改某一文件夹的权限</p><p><img src="https://s2.loli.net/2023/03/23/mJWjPwkTDLsMrvc.png" alt="image-20230323224706032"></p><h1>二、初始化化文件夹</h1><h3 id="2-1-选择一个盘，创建一个blog文件夹">2.1 选择一个盘，创建一个blog文件夹</h3><p><img src="https://s2.loli.net/2023/03/23/ULxgmTq8zs2l4Ev.png" alt="image-20230323225108988"></p><h3 id="2-2-通过cmd窗口，切换盘符，进入该文件夹">2.2 通过cmd窗口，切换盘符，进入该文件夹</h3><p><img src="https://s2.loli.net/2023/03/23/HDnZmhvbCo9Qiz7.png" alt="image-20230323225304833"></p><h3 id="2-3-初始化">2.3 初始化</h3><p>在blog文件夹下输入以下指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>如果出现以下错误</p><p><img src="https://s2.loli.net/2023/03/23/R8S2yiOZkTXqx9h.png" alt="image-20230323225645297"></p><p>多试几次，网络原因，克隆失败（可以直接开加速器或者挂梯子）</p><p>出现Start blogging with Hexo!表示初始化成功</p><p><img src="https://s2.loli.net/2023/03/23/8kzA6oFwhSdQr1n.png" alt="image-20230323225756201"></p><h1>三、搭建</h1><h3 id="3-1-继续输入以下指令">3.1 继续输入以下指令</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/23/OaWmFYKiQX1HgBp.png" alt="image-20230323230053462"></p><blockquote><p>cmd窗口不要关闭</p></blockquote><h3 id="3-2-打开blog文件夹下的public文件夹，查看是否搭建成功">3.2 打开blog文件夹下的public文件夹，查看是否搭建成功</h3><img src="https://s2.loli.net/2023/03/23/wMeFHWntC3Yy17q.png" alt="image-20230323230346257" style="zoom:50%;" /><h3 id="3-3-点击index-html文件，浏览器会显示下图的效果">3.3 点击index.html文件，浏览器会显示下图的效果</h3><p><img src="https://s2.loli.net/2023/03/23/9UjsuiTxXIflerY.png" alt="image-20230323230416908"></p><img src="https://s2.loli.net/2023/03/23/V9s7rADvjtCawuM.png" alt="image-20230323230452052" style="zoom:50%;" /><h3 id="3-4-在cmd窗口继续输入以下指令，复制生成的网址，在本地端口打开页面">3.4 在cmd窗口继续输入以下指令，复制生成的网址，在本地端口打开页面</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/23/T1jIzSqscwOrNUt.png" alt="image-20230323230657681"></p><p><img src="https://s2.loli.net/2023/03/23/FshmeH7CI8NPVB1.png" alt="image-20230323230730114"></p><h3 id="3-5-查看成功后，按Ctrl-C关闭端口">3.5 查看成功后，按Ctrl+C关闭端口</h3><h1>四、安装git依赖</h1><p>在blog文件夹目录下，在cmd窗口中，继续输入以下指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/24/JnX3VgZPzGBrIka.png" alt="image-20230324120103121"></p><h1>五、在GitHub上创建git仓库</h1><p>仓库名必须以github name.github.io命名</p><p><img src="https://s2.loli.net/2023/03/24/4QyaT1htoEMNxnI.png" alt="image-20230324120932625"></p><blockquote><p>注意：这里的名称一定是你GitHub的用户名，不然后面会加载不出页面渲染</p></blockquote><h1>六、本地博客上传GitHub</h1><h2 id="6-1-修改-config-yml文件">6.1 修改-config.yml文件</h2><p>以txt文本格式打开</p><img src="https://s2.loli.net/2023/03/24/SBDO5LGRpWdMqXt.png" alt="image-20230324121118217" style="zoom:50%;" /><p>将下图中的信息进行替换</p><p><img src="https://s2.loli.net/2023/03/24/4aSfP9wOTquW5yl.png" alt="image-20230324121207400"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你的github地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/24/ZBOJ8o3Fx4McGPK.png" alt="image-20230324121239755"></p><h2 id="6-2-上传">6.2 上传</h2><p>在blog文件路径下，在cmd窗口中依次输入以下指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d    </span><br></pre></td></tr></table></figure><p>运行结果应该如下：（如果第一次使用git，可能会提示登录一下GitHub，登录一下就可以了）</p><img src="https://s2.loli.net/2023/03/24/qEx43iGH2BnpjSM.png" alt="image-20230324121649495" style="zoom:50%;" /><img src="https://s2.loli.net/2023/03/24/awkxFn2hE73CIpR.png" alt="image-20230324121719393" style="zoom:50%;" /><h1>七、开启page服务</h1><p>在网页进入GitHub，打开新建的上传博客的仓库，进行如下设置，打开page服务</p><p><img src="https://s2.loli.net/2023/03/24/UgXMbRCpH4NTd78.png" alt="image-20230324122134527"></p><p><img src="https://s2.loli.net/2023/03/24/RULtjzcw4fWMFvK.png" alt="image-20230324122324612"></p><p>保存后，等待一会，当出现下图所示后，就可以通过网址访问个人blog了</p><p><img src="https://s2.loli.net/2023/03/24/yUdV8CZR7Yah34E.png" alt="image-20230324122421585"></p><p>进入显示的页面，效果如下：</p><p><img src="https://s2.loli.net/2023/03/24/eszi1CkB9pqlZAQ.png" alt="image-20230324133255698"></p><blockquote><p>如果出现以下情况，请查看仓库名称是否为GitHub用户名</p><p><img src="https://s2.loli.net/2023/03/24/53PAZgIRyDbzKT9.png" alt="image-20230324133238423"></p></blockquote><h1>八、主题更换</h1><blockquote><p>官方主题网址：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></blockquote><h2 id="8-1-Butterfly-主题安装">8.1 Butterfly 主题安装</h2><p>在blog根目录下，在cmd窗口中输入下列指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https:<span class="comment">//github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/m5k8J7YMEBxIeiV.png" alt="image-20230324203523825"></p><h2 id="8-2-应用主题">8.2 应用主题</h2><p>修改blog根目录下的 <code>_config.yml</code>，把主题改为 butterfly：</p><p><img src="https://s2.loli.net/2023/03/25/wNgfWbOldsvo7Km.png" alt="image-20230324203700738"></p><h2 id="8-3-安装插件">8.3 安装插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/dOEqBzgCStL3iDG.png" alt="image-20230324204300190"></p><p>剩余内容请参考下面这篇博客👇</p><p>Butterfly 主题美化：<a href="http://haiyong.site/post/22e1d5da.html">http://haiyong.site/post/22e1d5da.html</a></p><h1>九、发布</h1><p>在blog文件夹下，找到source，然后进入_posts，在该文件夹路径，右键进入git bash here</p><p><img src="https://s2.loli.net/2023/03/25/XTxkNdpcHFt3OEC.png" alt="image-20230324200056954"></p><p>在git bash here输入下列指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/XzUsfPhSkot8mlY.png" alt="image-20230324200355195"></p><p>继续输入下列指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="title class_">post</span> <span class="string">&quot;新建博客文章名&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g  &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>在本地查看，无误后提交云端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADC模数转换器</title>
      <link href="/post/f2152a76.html"/>
      <url>/post/f2152a76.html</url>
      
        <content type="html"><![CDATA[<h1>ADC模数转换器</h1><p>ADC（Analog-Digital Converter）模拟-数字转换器</p><p>ADC可以将引脚上连续变化的模拟电压转换为内存中存储的数字变量，建立模拟电路到数字电路的桥梁</p><blockquote><p>DAC是数字-模拟转换器，但是PWM比DAC简单好用，一般使用DAC驱动电机，目前DAC主要应用于波形生成领域</p></blockquote><p>12位逐次逼近型ADC，1us转换时间</p><blockquote><p>分辨率：0 ~ 2^12^ -1,即0 ~ 4095 ，位数越高量化结果越精细，分辨率越高</p></blockquote><p>输入电压范围：0 ~ 3.3V，转换结果范围：0 ~ 4095</p><p>18个输入通道，可测量16个外部和2个内部信号源</p><blockquote><p>STM32F103C8T6 ADC资源：ADC1、ADC2，10个外部输入通道</p></blockquote><p>规则组和注入组两个转换单元</p><blockquote><p>一次启动一个组，可以连续转换多个数据</p></blockquote><p>模拟看门狗自动监测输入电压范围</p><blockquote><p>检测指定通道，当数值超出阈值时，自动申请中断，无需手动在主函数中进行判断</p></blockquote><h2 id="一、逐次逼近型ADC">一、逐次逼近型ADC</h2><img src="https://s2.loli.net/2022/12/11/Clv4Ln169sB5NJg.png" alt="image-20221211123629747" style="zoom:67%;" /><h2 id="二、ADC框图">二、ADC框图</h2><h3 id="2-1完整框图">2.1完整框图</h3><p><img src="https://s2.loli.net/2022/12/11/jhnaY34cfZxdgOy.png" alt="image-20221211131053264"></p><h3 id="2-2-分析">2.2 分析</h3><p><img src="https://s2.loli.net/2022/12/11/gLi4wkvq5Ds8NSj.png" alt="image-20221211134242951"></p><hr><hr><p><img src="https://s2.loli.net/2022/12/11/LlVwzEJ1khespa7.png" alt="image-20221211143348853"></p><h3 id="2-3-输入通道对应引脚">2.3 输入通道对应引脚</h3><table><thead><tr><th style="text-align:center"><strong>通道</strong></th><th style="text-align:center"><strong>ADC1</strong></th><th style="text-align:center"><strong>ADC2</strong></th><th style="text-align:center"><strong>ADC3</strong></th></tr></thead><tbody><tr><td style="text-align:center">通道0</td><td style="text-align:center">PA0</td><td style="text-align:center">PA0</td><td style="text-align:center">PA0</td></tr><tr><td style="text-align:center">通道1</td><td style="text-align:center">PA1</td><td style="text-align:center">PA1</td><td style="text-align:center">PA1</td></tr><tr><td style="text-align:center">通道2</td><td style="text-align:center">PA2</td><td style="text-align:center">PA2</td><td style="text-align:center">PA2</td></tr><tr><td style="text-align:center">通道3</td><td style="text-align:center">PA3</td><td style="text-align:center">PA3</td><td style="text-align:center">PA3</td></tr><tr><td style="text-align:center">通道4</td><td style="text-align:center">PA4</td><td style="text-align:center">PA4</td><td style="text-align:center">PF6</td></tr><tr><td style="text-align:center">通道5</td><td style="text-align:center">PA5</td><td style="text-align:center">PA5</td><td style="text-align:center">PF7</td></tr><tr><td style="text-align:center">通道6</td><td style="text-align:center">PA6</td><td style="text-align:center">PA6</td><td style="text-align:center">PF8</td></tr><tr><td style="text-align:center">通道7</td><td style="text-align:center">PA7</td><td style="text-align:center">PA7</td><td style="text-align:center">PF9</td></tr><tr><td style="text-align:center">通道8</td><td style="text-align:center">PB0</td><td style="text-align:center">PB0</td><td style="text-align:center">PF10</td></tr><tr><td style="text-align:center">通道9</td><td style="text-align:center">PB1</td><td style="text-align:center">PB1</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">通道10</td><td style="text-align:center">PC0</td><td style="text-align:center">PC0</td><td style="text-align:center">PC0</td></tr><tr><td style="text-align:center">通道11</td><td style="text-align:center">PC1</td><td style="text-align:center">PC1</td><td style="text-align:center">PC1</td></tr><tr><td style="text-align:center">通道12</td><td style="text-align:center">PC2</td><td style="text-align:center">PC2</td><td style="text-align:center">PC2</td></tr><tr><td style="text-align:center">通道13</td><td style="text-align:center">PC3</td><td style="text-align:center">PC3</td><td style="text-align:center">PC3</td></tr><tr><td style="text-align:center">通道14</td><td style="text-align:center">PC4</td><td style="text-align:center">PC4</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">通道15</td><td style="text-align:center">PC5</td><td style="text-align:center">PC5</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">通道16</td><td style="text-align:center">温度传感器</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">通道17</td><td style="text-align:center">内部参考电压</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h2 id="三、转换模式">三、转换模式</h2><p>1、单次转换，非扫描模式</p><p>2、连续转换，非扫描模式</p><p>3、单次转换，扫描模式</p><p>4、连续转换，扫描模式</p><p><img src="https://s2.loli.net/2022/12/11/bnOVq5uNzW2ZRaQ.png" alt="image-20221211144033797"></p><p><img src="https://s2.loli.net/2022/12/11/4tWJ6XFqIz8Gefh.png" alt="image-20221211144356149"></p><h3 id="四、触发控制">四、触发控制</h3><p><img src="https://s2.loli.net/2022/12/11/jWKTdzchoHPu3xR.png" alt="image-20221211144655873"></p><h3 id="五、数据对齐">五、数据对齐</h3><p>右对齐</p><p><img src="https://s2.loli.net/2022/12/11/WN8xMrd2opSHPFl.png" alt="image-20221211144528294"></p><p>左对齐</p><p><img src="https://s2.loli.net/2022/12/11/3NEQ1p57oOMHdqy.png" alt="image-20221211144533308"></p><p>一般使用右对齐，读出数据直接就是转换结果</p><p>左对齐可以降低精度，只读高八位，舍去后四位</p><h3 id="六、转换时间">六、转换时间</h3><p>AD转换的步骤：采样，保持，量化，编码</p><blockquote><p>其中采样、保持放一起，量化、编码放一起</p></blockquote><p>STM32 ADC的总转换时间为：T~CONV~ = 采样时间 + 12.5个ADC周期</p><blockquote><p>例如：当ADCCLK=14MHz，采样时间为1.5个ADC周期</p><p>T~CONV~ = 1.5 + 12.5 = 14个ADC周期 = 1μs</p></blockquote><h3 id="七、校准">七、校准</h3><p>ADC有一个内置自校准模式。校准可大幅减小因内部电容器组的变化而造成的准精度误差。校准期间，在每个电容器上都会计算出一个误差修正码(数字值)，这个码用于消除在随后的转换中每个电容器上产生的误差</p><p>建议在每次上电后执行一次校准</p><p>启动校准前， ADC必须处于关电状态超过至少两个ADC时钟周期</p><h2 id="实例：AD单通道和AD多通道">实例：AD单通道和AD多通道</h2><h3 id="AD单通道">AD单通道</h3><p>功能实现：用电位计产生0~3.3V的连续变化的模拟电压，在LCD显示转换后的数据和处理后得到的电压值</p><p>AD.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_ADCCLKConfig(RCC_PCLK2_Div6);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;<span class="comment">//模拟输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择规则组的输入通道</span></span><br><span class="line">ADC_RegularChannelConfig(ADC1,ADC_Channel_0,<span class="number">1</span>,ADC_SampleTime_55Cycles5);</span><br><span class="line"><span class="comment">//初始化ADC</span></span><br><span class="line">ADC_InitTypeDef ADC_InitTypeDefstructure;</span><br><span class="line">ADC_InitTypeDefstructure.ADC_DataAlign = ADC_DataAlign_Right;<span class="comment">//对齐方式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;<span class="comment">//触发源选择</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_Mode = ADC_Mode_Independent;<span class="comment">//配置ADC工作模式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ContinuousConvMode = DISABLE;<span class="comment">//连续转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ScanConvMode = DISABLE;<span class="comment">//扫描转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_NbrOfChannel = <span class="number">1</span>;<span class="comment">//通道数目</span></span><br><span class="line"></span><br><span class="line">ADC_Init(ADC1,&amp;ADC_InitTypeDefstructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启ADC</span></span><br><span class="line">ADC_Cmd(ADC1,ENABLE);</span><br><span class="line"><span class="comment">//校准ADC</span></span><br><span class="line">ADC_ResetCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetResetCalibrationStatus(ADC1) == SET);<span class="comment">//等待校准完成</span></span><br><span class="line">ADC_StartCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetCalibrationStatus(ADC1) == SET);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);<span class="comment">//软件触发转换</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC) == RESET);<span class="comment">//获取标志位状态</span></span><br><span class="line"><span class="keyword">return</span> ADC_GetConversionValue(ADC1);<span class="comment">//获取转换值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AD.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __AD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __AD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AD.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> value;</span><br><span class="line"><span class="type">float</span> V;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">AD_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;ADValue:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;V:0.00V&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">value = AD_GetValue();</span><br><span class="line">V = (<span class="type">float</span>)value /<span class="number">4095</span> * <span class="number">3.3</span>;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">9</span>,value,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">3</span>,V,<span class="number">1</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,(<span class="type">uint16_t</span>)(V*<span class="number">100</span>)%<span class="number">100</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1 | GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_1) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_2) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LCD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LCD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AD多通道">AD多通道</h3><p>功能实现：同时测光敏、热敏、反射红外、电位计的转换值，并显示</p><p>AD.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_ADCCLKConfig(RCC_PCLK2_Div6);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;<span class="comment">//模拟输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化ADC</span></span><br><span class="line">ADC_InitTypeDef ADC_InitTypeDefstructure;</span><br><span class="line">ADC_InitTypeDefstructure.ADC_DataAlign = ADC_DataAlign_Right;<span class="comment">//对齐方式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;<span class="comment">//触发源选择</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_Mode = ADC_Mode_Independent;<span class="comment">//配置ADC工作模式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ContinuousConvMode = DISABLE;<span class="comment">//连续转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ScanConvMode = DISABLE;<span class="comment">//扫描转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_NbrOfChannel = <span class="number">1</span>;<span class="comment">//通道数目</span></span><br><span class="line"></span><br><span class="line">ADC_Init(ADC1,&amp;ADC_InitTypeDefstructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启ADC</span></span><br><span class="line">ADC_Cmd(ADC1,ENABLE);</span><br><span class="line"><span class="comment">//校准ADC</span></span><br><span class="line">ADC_ResetCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetResetCalibrationStatus(ADC1) == SET);<span class="comment">//等待校准完成</span></span><br><span class="line">ADC_StartCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetCalibrationStatus(ADC1) == SET);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">uint8_t</span> ADC_Channel)</span>&#123;</span><br><span class="line"><span class="comment">//选择规则组的输入通道</span></span><br><span class="line">ADC_RegularChannelConfig(ADC1,ADC_Channel,<span class="number">1</span>,ADC_SampleTime_55Cycles5);</span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);<span class="comment">//软件触发转换</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC) == RESET);<span class="comment">//获取标志位状态</span></span><br><span class="line"><span class="keyword">return</span> ADC_GetConversionValue(ADC1);<span class="comment">//获取转换值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AD.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __AD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __AD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">uint8_t</span> ADC_Channel)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AD.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> AD0,AD1,AD2,AD3;</span><br><span class="line"><span class="type">float</span> V;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">AD_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;AD0:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;AD1:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&quot;AD2:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">4</span>,<span class="number">1</span>,<span class="string">&quot;AD3:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">AD0 = AD_GetValue(ADC_Channel_0);</span><br><span class="line">AD1 = AD_GetValue(ADC_Channel_1);</span><br><span class="line">AD2 = AD_GetValue(ADC_Channel_2);</span><br><span class="line">AD3 = AD_GetValue(ADC_Channel_3);</span><br><span class="line"></span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,AD0,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,AD1,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">3</span>,<span class="number">5</span>,AD2,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">4</span>,<span class="number">5</span>,AD3,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1 | GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_1) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_2) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LCD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LCD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时器</title>
      <link href="/post/2e5216dd.html"/>
      <url>/post/2e5216dd.html</url>
      
        <content type="html"><![CDATA[<h1>一、TIM定时中断</h1><p>定时器可以对输入的时钟进行<strong>计数</strong>，并在计数值达到设定值时<strong>触发中断</strong></p><blockquote><p>例：stm32中定时器的基准时钟一般是72MHZ，【周期是频率的倒数1T = 1/72us】，如果计数72个，就是1us，计数72000个，就是1ms</p></blockquote><p>16位计数器、预分频器、自动重装寄存器的时基单元，在72MHz计数时钟下可以实现最大59.65s的定时</p><blockquote><p>计数器：进行计数的寄存器，每来一个时钟，计数器加一</p><p>预分频器：对计数器时钟进行分频</p><p>自动重装寄存器：计数器的目标值，设定计多少数申请中断</p><p>2^16^=65536  预分频器和自动重装寄存器设置最大，定时器时间最大为59.65s【1/(72MHZ/65536*65536)】</p></blockquote><p>不仅具备基本的定时中断功能，而且还包含内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等多种功能</p><p>根据复杂度和应用场景分为了高级定时器、通用定时器、基本定时器三种类型</p><h1>二、定时器类型</h1><table><thead><tr><th style="text-align:center"><strong>类型</strong></th><th style="text-align:center"><strong>编号</strong></th><th style="text-align:center"><strong>总线</strong></th><th style="text-align:center"><strong>功能</strong></th></tr></thead><tbody><tr><td style="text-align:center">高级定时器</td><td style="text-align:center">TIM1、TIM8</td><td style="text-align:center">APB2</td><td style="text-align:center">拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</td></tr><tr><td style="text-align:center">通用定时器</td><td style="text-align:center">TIM2、TIM3、TIM4、TIM5</td><td style="text-align:center">APB1</td><td style="text-align:center">拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</td></tr><tr><td style="text-align:center">基本定时器</td><td style="text-align:center">TIM6、TIM7</td><td style="text-align:center">APB1</td><td style="text-align:center">拥有定时中断、主模式触发DAC的功能</td></tr></tbody></table><blockquote><p>STM32F103C8T6定时器资源：TIM1、TIM2、TIM3、TIM4</p></blockquote><h2 id="2-1基本定时器">2.1基本定时器</h2><p>TIM6和TIM7定时器的主要功能包括：</p><ul><li><p>16位自动重装载累加计数器</p></li><li><p>16位可编程(可实时修改)预分频器，用于对输入的时钟按系数为1～65536之间的任意数值分频</p></li><li><p>触发DAC的同步电路</p></li><li><p>在更新事件(计数器溢出)时产生中断/DMA请求</p></li></ul><img src="https://s2.loli.net/2022/11/29/xXP9tsyWfS4B2Hc.png" alt="image-20221126150307421" style="zoom:67%;" /><h3 id="2-1-1分频的作用">2.1.1分频的作用</h3><p>便于计算，计时更加精确</p><ul><li><p>以12MHZ为例：</p><ol><li><p>不分频</p><p>一个时钟周期为 T = 1/12 us，如果我们需要1us，需要12T，这个很好理解吧，但是我们使用的时候经常是要以秒（s）微秒（ms）进行计时的，当我们需要1ms的时候，我们就需要计数12000T，这个数是已经很大了</p></li><li><p>12分频</p><p>12分频后，12MHZ变为1MHZ，一个时钟周期为 T = 1/1 us = 1us，如果我们需要1us，需要1T；需要1ms时，只需要1000T</p></li></ol></li></ul><p>​我们很清楚的看到分频以后，计一次数就是1us，这不但利用我们去计算定时时间，而且计算的次数明显减少了，那么为什么说计数次数减少就可以提高精度呢？可以想一下平时使用的钟表，当我们使用的时间长了，表就会不太准，时钟也是一样，我们计数次数多了，难免会产生误差，一次两次小误差肯能影响不大，但是成千上百次误差的影响那可就大了</p><p>定时时间更长</p><ul><li><p>以72MHZ为例</p><ol><li><p>不分频</p><p>一个时钟周期为 T = 1/72 us，16位定时器的范围是0~65535，那么一个范围计数完成的时间大概是0.94ms</p></li><li><p>3分频</p><p>3分频后，72MHZ变为24MHZ，一个时钟周期为 T = 1/24 us ，那么一个范围计数完成的时间大概是2.73ms</p></li><li><p>72分频</p><p>72MHZ变为1MHZ，一个时钟周期为 T =1 us ，那么一个范围计数完成的时间大概是65.5ms</p></li></ol></li></ul><p>​由于分频以后，到达同一个计数时间的计数次数减少，所以在16位的定时器范围内，定时器的定时时间最大值增加【定时器计数最大值是不可改变的，2^16^，所以我们只能改变频率来改变计数最大时间】</p><h3 id="2-1-2预分频器">2.1.2预分频器</h3><p>​预分频可以以系数介于1至65536之间的任意数值对计数器时钟分频。它是通过一个16位寄存器(TIMx_PSC)的计数实现分频。因为TIMx_PSC控制寄存器具有缓冲，可以在运行过程中改变它的数值，新的预分频数值将在下一个更新事件时起作用</p><p><strong>实际分频数 = 分频器的值 + 1</strong></p><p><strong>计数器计数频率：CK_CNT = CK_PSC / (PSC + 1)</strong></p><img src="https://s2.loli.net/2022/11/29/LiHjea9y3CtvoT6.png" alt="image-20221126150902581" style="zoom: 67%;" /><p>​缓冲器（也叫作影子寄存器），是实际起作用的寄存器。比如：在计数过程中突然改变分频系数，那么一个周期前半部分和后半部分的频率就会不一致，这可能会产生一些不好的影响。但是加上缓冲器后，改变分频系数并不会立即改变这一个周期的频率，它会等到这个周期结束后，产生更新事件，才会去改变，这样就保证了stm32的严谨性</p><h3 id="2-1-3计数模式">2.1.3计数模式</h3><img src="https://s2.loli.net/2022/11/29/CmI3bSXLFlxajKH.png" alt="image-20221126190730609" style="zoom: 50%;" /><p><strong>计数器溢出频率：CK_CNT_OV  =  CK_CNT / (ARR + 1)  =  CK_PSC / (PSC + 1) / (ARR + 1)</strong></p><p>计数器<strong>使用</strong>影子寄存器  和   计数器<strong>不使用</strong>影子寄存器</p><img src="https://s2.loli.net/2022/11/29/2K5PUXlOYSMD8QT.png" alt="image-20221126192339034" style="zoom: 67%;" /><h3 id="2-1-4主模式触发DAC功能">2.1.4主模式触发DAC功能</h3><p>​当我们使用DAC时，需要每隔一段时间都要输出一段波形，按正常思路来说，我们要使用中断，每隔一段时间调用一次中断里面的代码，实现DAC转换。但是频繁调用中断会影响到主程序的进行，阻碍其他中断的进行</p><p>​如果我们使用主模式的话，就可以把定时器的<strong>更新事件</strong>映射到触发输出TRGO，然后将TRGO接到DAC触发转换引脚上，这样就不需要<strong>更新中断</strong>来实现DAC转换了。整个过程不需要软件的参与，实现了硬件的自动化</p><img src="https://s2.loli.net/2022/11/29/OYA7MyN8UnKJVRb.png" alt="image-20221126153543448" style="zoom: 50%;" /><h2 id="2-2通用定时器">2.2通用定时器</h2><p>通用TIMx (TIM2、TIM3、TIM4和TIM5)定时器功能包括：</p><ul><li><p>16位向上、向下、向上/向下自动装载计数器</p></li><li><p>16位可编程(可以实时修改)预分频器，计数器时钟频率的分频系数为1～65536之间的任意数值</p></li><li><p>4个独立通道： ─ 输入捕获 ─ 输出比较 ─ PWM生成(边缘或中间对齐模式) ─ 单脉冲模式输出</p></li><li><p>使用外部信号控制定时器和定时器互连的同步电路</p></li><li><p>如下事件发生时产生中断/DMA：</p><ul><li>─ 更新：计数器向上溢出/向下溢出，计数器初始化(通过软件或者内部/外部触发)</li><li>─ 触发事件(计数器启动、停止、初始化或者由内部/外部触发计数)</li><li>─ 输入捕获</li><li>─ 输出比较</li></ul></li><li><p>支持针对定位的增量(正交)编码器和霍尔传感器电路</p></li><li><p>触发输入作为外部时钟或者按周期的电流管理</p></li></ul><img src="https://s2.loli.net/2022/11/29/7DrZAa2GSdv9xOe.png" alt="image-20221126180204480" style="zoom:67%;" /><img src="https://s2.loli.net/2022/11/29/DU1tOzaoAjc6s5w.png" alt="image-20221126180323300" style="zoom: 67%;" /><h3 id="2-2-1计数模式">2.2.1计数模式</h3><p>向上计数模式、向下计数模式、中央对齐模式(向上/向下计数)</p><img src="https://s2.loli.net/2022/11/29/DPd8LoY5XCcarvj.png" alt="image-20221126181637041" style="zoom:67%;" /><p>向上计数模式：每次+1，加到目标值，申请中断，归零</p><p>向下计数模式：每次-1，减到目标值，申请中断，归起始值</p><p>中央对齐模式(向上/向下计数)：每次+1，加到目标值，申请中断；之后每次-1，减到起始值，申请中断</p><h2 id="2-3高级定时器">2.3高级定时器</h2><img src="https://s2.loli.net/2022/11/29/KaRTzxnmFNyL1DQ.png" alt="image-20221126182703940" style="zoom:67%;" /><h1>三、定时中断基本结构</h1><img src="https://s2.loli.net/2022/11/29/7D3u2HbwmkqO5nJ.png" alt="image-20221126183112649" style="zoom:67%;" /><p>使用中断输出控制的原因：</p><p>定时器模块中很多地方都要申请中断，定时器图中的<strong>向上折的箭头</strong>都表示要申请中断，所以需要控制这些中断，如果需要就允许，不需要就不允许</p><h3 id="时钟树">时钟树</h3><img src="https://s2.loli.net/2022/11/29/kdCRqbZ3MQrpLGz.png" alt="image-20221126193508331" style="zoom: 67%;" /><p>如果不改变SystemInit里面的配置，三种定时器中内部基准时钟均为72MHZ</p><h1>实例一、定时中断和内外部时钟代码实现</h1><h2 id="1-1、定时中断">1.1、定时中断</h2><p>**功能实现：**每隔1S计数一次</p><p>**注意：**需要手动清除中断初始化时产生的中断标记，不然默认其实值为1，而不是0</p><p>timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10000</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">7200</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位，避免刚初始化完就进入中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使能中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//void TIM2_IRQHandler(void)&#123;</span></span><br><span class="line"><span class="comment">////判断中断</span></span><br><span class="line"><span class="comment">//if(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////清除中断标志位</span></span><br><span class="line"><span class="comment">//TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Num:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; </span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,num,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//OLED_ShowNum(2,1,TIM_GetCounter(TIM2),5);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断中断</span></span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><hr><p>OLED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED_Font.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引脚配置*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_W_SCL(x)GPIO_WriteBit(GPIOB, GPIO_Pin_8, (BitAction)(x))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_W_SDA(x)GPIO_WriteBit(GPIOB, GPIO_Pin_9, (BitAction)(x))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引脚初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;</span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SDA(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  I2C开始</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_W_SDA(<span class="number">1</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SDA(<span class="number">0</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  I2C停止</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_Stop</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_W_SDA(<span class="number">0</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SDA(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  I2C发送一个字节</span></span><br><span class="line"><span class="comment">  * @param  Byte 要发送的一个字节</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_SendByte</span><span class="params">(<span class="type">uint8_t</span> Byte)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_W_SDA(Byte &amp; (<span class="number">0x80</span> &gt;&gt; i));</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);<span class="comment">//额外的一个时钟，不处理应答信号</span></span><br><span class="line">OLED_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED写命令</span></span><br><span class="line"><span class="comment">  * @param  Command 要写入的命令</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WriteCommand</span><span class="params">(<span class="type">uint8_t</span> Command)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_I2C_Start();</span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x78</span>);<span class="comment">//从机地址</span></span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x00</span>);<span class="comment">//写命令</span></span><br><span class="line">OLED_I2C_SendByte(Command); </span><br><span class="line">OLED_I2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED写数据</span></span><br><span class="line"><span class="comment">  * @param  Data 要写入的数据</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WriteData</span><span class="params">(<span class="type">uint8_t</span> Data)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_I2C_Start();</span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x78</span>);<span class="comment">//从机地址</span></span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x40</span>);<span class="comment">//写数据</span></span><br><span class="line">OLED_I2C_SendByte(Data);</span><br><span class="line">OLED_I2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED设置光标位置</span></span><br><span class="line"><span class="comment">  * @param  Y 以左上角为原点，向下方向的坐标，范围：0~7</span></span><br><span class="line"><span class="comment">  * @param  X 以左上角为原点，向右方向的坐标，范围：0~127</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_SetCursor</span><span class="params">(<span class="type">uint8_t</span> Y, <span class="type">uint8_t</span> X)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteCommand(<span class="number">0xB0</span> | Y);<span class="comment">//设置Y位置</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x10</span> | ((X &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>));<span class="comment">//设置X位置高4位</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x00</span> | (X &amp; <span class="number">0x0F</span>));<span class="comment">//设置X位置低4位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED清屏</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="type">uint8_t</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_SetCursor(j, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteData(<span class="number">0x00</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示一个字符</span></span><br><span class="line"><span class="comment">  * @param  Line 行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Char 要显示的一个字符，范围：ASCII可见字符</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> Char)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line">OLED_SetCursor((Line - <span class="number">1</span>) * <span class="number">2</span>, (Column - <span class="number">1</span>) * <span class="number">8</span>);<span class="comment">//设置光标位置在上半部分</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteData(OLED_F8x16[Char - <span class="string">&#x27; &#x27;</span>][i]);<span class="comment">//显示上半部分内容</span></span><br><span class="line">&#125;</span><br><span class="line">OLED_SetCursor((Line - <span class="number">1</span>) * <span class="number">2</span> + <span class="number">1</span>, (Column - <span class="number">1</span>) * <span class="number">8</span>);<span class="comment">//设置光标位置在下半部分</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteData(OLED_F8x16[Char - <span class="string">&#x27; &#x27;</span>][i + <span class="number">8</span>]);<span class="comment">//显示下半部分内容</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示字符串</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  String 要显示的字符串，范围：ASCII可见字符</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> *String)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; String[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, String[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED次方函数</span></span><br><span class="line"><span class="comment">  * @retval 返回值等于X的Y次方</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">OLED_Pow</span><span class="params">(<span class="type">uint32_t</span> X, <span class="type">uint32_t</span> Y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> Result = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (Y--)</span><br><span class="line">&#123;</span><br><span class="line">Result *= X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（十进制，正数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：0~4294967295</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~10</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, Number / OLED_Pow(<span class="number">10</span>, Length - i - <span class="number">1</span>) % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（十进制，带符号数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：-2147483648~2147483647</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~10</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowSignedNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">int32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="type">uint32_t</span> Number1;</span><br><span class="line"><span class="keyword">if</span> (Number &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column, <span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">Number1 = Number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">Number1 = -Number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i + <span class="number">1</span>, Number1 / OLED_Pow(<span class="number">10</span>, Length - i - <span class="number">1</span>) % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（十六进制，正数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：0~0xFFFFFFFF</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~8</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowHexNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i, SingleNumber;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">SingleNumber = Number / OLED_Pow(<span class="number">16</span>, Length - i - <span class="number">1</span>) % <span class="number">16</span>;</span><br><span class="line"><span class="keyword">if</span> (SingleNumber &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, SingleNumber + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, SingleNumber - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（二进制，正数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~16</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowBinNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, Number / OLED_Pow(<span class="number">2</span>, Length - i - <span class="number">1</span>) % <span class="number">2</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED初始化</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)<span class="comment">//上电延时</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">1000</span>; j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">OLED_I2C_Init();<span class="comment">//端口初始化</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xAE</span>);<span class="comment">//关闭显示</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xD5</span>);<span class="comment">//设置显示时钟分频比/振荡器频率</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x80</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA8</span>);<span class="comment">//设置多路复用率</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x3F</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xD3</span>);<span class="comment">//设置显示偏移</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0x40</span>);<span class="comment">//设置显示开始行</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA1</span>);<span class="comment">//设置左右方向，0xA1正常 0xA0左右反置</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xC8</span>);<span class="comment">//设置上下方向，0xC8正常 0xC0上下反置</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xDA</span>);<span class="comment">//设置COM引脚硬件配置</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x12</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0x81</span>);<span class="comment">//设置对比度控制</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0xCF</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xD9</span>);<span class="comment">//设置预充电周期</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0xF1</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xDB</span>);<span class="comment">//设置VCOMH取消选择级别</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x30</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA4</span>);<span class="comment">//设置整个显示打开/关闭</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA6</span>);<span class="comment">//设置正常/倒转显示</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0x8D</span>);<span class="comment">//设置充电泵</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x14</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xAF</span>);<span class="comment">//开启显示</span></span><br><span class="line"></span><br><span class="line">OLED_Clear();<span class="comment">//OLED清屏</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> Char)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> *String)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowSignedNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">int32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowHexNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowBinNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-2、外部时钟">1.2、外部时钟</h2><p>**功能实现：**每遮挡一次计数器+1</p><p>**注意：**如果出现遮挡一次跳跃好多次，需要添加滤波</p><p>timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择外部时钟</span></span><br><span class="line">TIM_ETRClockMode2Config(TIM2,TIM_ExtTRGPSC_OFF,TIM_ExtTRGPolarity_NonInverted,<span class="number">0x0f</span>);<span class="comment">//这里要添加滤波，不然会跳好多次</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">1</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位，避免刚初始化完就进入中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使能中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">Timer_GetCount</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> TIM_GetCounter(TIM2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//void TIM2_IRQHandler(void)&#123;</span></span><br><span class="line"><span class="comment">////判断中断</span></span><br><span class="line"><span class="comment">//if(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////清除中断标志位</span></span><br><span class="line"><span class="comment">//TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">Timer_GetCount</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Num:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;CNT:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; </span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,num,<span class="number">5</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,Timer_GetCount(),<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断中断</span></span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>四、TIM输出比较</h1><p>OC（Output Compare）输出比较</p><p>输出比较可以通过比较CNT与CCR寄存器值的关系，来对输出电平进行置1、置0或翻转的操作，用于输出一定频率和占空比的PWM波形</p><blockquote><p>CCR是输出比较寄存器</p><img src="https://s2.loli.net/2022/11/29/TVSgQeYa23qJA6u.png" alt="image-20221128195422185" style="zoom: 67%;" /></blockquote><p>每个高级定时器和通用定时器都拥有4个输出比较通道</p><p>高级定时器的前3个通道额外拥有死区生成和互补输出的功能</p><h2 id="4-1、PWM简介">4.1、PWM简介</h2><p>PWM（Pulse Width Modulation）脉冲宽度调制</p><p>在具有惯性的系统中，可以通过对一系列脉冲的宽度进行调制，来等效地获得所需要的模拟参量，常应用于电机控速等领域</p><p>PWM参数：<strong>频率</strong> = 1 / TS      **占空比 **= TON / TS      <strong>分辨率</strong> = 占空比变化步距</p><blockquote><p>占空比越大，模拟出的电压越趋近于高电平，占空比越小，模拟出的电压越趋近于低电平</p></blockquote><p><img src="https://s2.loli.net/2022/11/29/gWckmYJwxGRTQuM.png" alt="image-20221128195700005"></p><h2 id="4-2、输出比较通道">4.2、输出比较通道</h2><h3 id="4-2-1输出比较通道-通用定时器">4.2.1输出比较通道(通用定时器)</h3><img src="https://s2.loli.net/2022/11/29/O1VE3Xpk2FJuNmA.png" alt="image-20221128201040691" style="zoom: 67%;" /><h3 id="4-2-2输出比较通道-高级定时器">4.2.2输出比较通道(高级定时器)</h3><img src="https://s2.loli.net/2022/11/29/wuxyh1sdYmSfDL8.png" alt="image-20221129103943044" style="zoom:67%;" /><h2 id="4-3-输出比较模式">4.3 输出比较模式</h2><p><img src="https://s2.loli.net/2022/11/29/LQb7hR4EaISBAVk.png" alt="image-20221128203052660"></p><h2 id="4-4PWM基本结构">4.4PWM基本结构</h2><img src="https://s2.loli.net/2022/11/29/6P2Bl5JXREKVMIs.png" alt="image-20221128203914556" style="zoom:67%;" /><p>PWM频率： Freq = { CK_PSC / (PSC + 1) }  /  (ARR + 1)</p><blockquote><p>PWM的频率=计数器更新频率</p></blockquote><p>PWM占空比： Duty = CCR / (ARR + 1)</p><p>PWM分辨率： Reso = 1 / (ARR + 1)</p><blockquote><p>分辨率定义为占空比最小的变化步距，占空比变化的越细腻越好</p></blockquote><h1>五、舵机</h1><p>舵机是一种根据输入PWM信号占空比来控制输出角度的装置</p><p>输入PWM信号要求：周期为20ms，高电平宽度为0.5ms~2.5ms</p><img src="https://s2.loli.net/2022/11/29/XNZ5URiz8J1wLxG.png" alt="image-20221128210052386" style="zoom:67%;" /><p>在这里，PWM当做通讯协议使用，不是PWM等效一个模拟输出</p><img src="https://s2.loli.net/2022/11/29/hnjrV8mFR3bcKf9.png" alt="image-20221128210413737" style="zoom:67%;" /><h1>六、直流电机</h1><p>直流电机是一种将电能转换为机械能的装置，有两个电极，当电极正接时，电机正转，当电极反接时，电机反转</p><p>直流电机属于<strong>大功率器件</strong>，<strong>GPIO口无法直接驱动</strong>，需要配合电机驱动电路来操作</p><p>TB6612是一款双路H桥型的直流电机驱动芯片，可以驱动两个直流电机并且控制其转速和方向</p><img src="https://s2.loli.net/2022/11/29/hOJVKElbmrjdMf3.png" alt="image-20221128210854526" style="zoom:67%;" /><img src="https://s2.loli.net/2022/11/29/84RfNLopVDwPyXb.png" alt="image-20221128211613707" style="zoom:70%;" /><h1>实例二、PWM驱动呼吸灯&amp;舵机&amp;直流电机代码实现</h1><h2 id="2-1、PWM驱动LED呼吸灯">2.1、PWM驱动LED呼吸灯</h2><p>**功能实现：**LED实现呼吸效果</p><p>**注意：**这里用过改变CCR的值来改变占空，比达到呼吸效果；但是占空比的值是有CCR和ARR+1共同决定的</p><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">PWM_SetCompare1(i);</span><br><span class="line">Delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">PWM_SetCompare1(<span class="number">100</span>-i);</span><br><span class="line">Delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><hr><p>Delay.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  微秒级延时</span></span><br><span class="line"><span class="comment">  * @param  xus 延时时长，范围：0~233015</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint32_t</span> xus)</span></span><br><span class="line">&#123;</span><br><span class="line">SysTick-&gt;LOAD = <span class="number">72</span> * xus;<span class="comment">//设置定时器重装值</span></span><br><span class="line">SysTick-&gt;VAL = <span class="number">0x00</span>;<span class="comment">//清空当前计数值</span></span><br><span class="line">SysTick-&gt;CTRL = <span class="number">0x00000005</span>;<span class="comment">//设置时钟源为HCLK，启动定时器</span></span><br><span class="line"><span class="keyword">while</span>(!(SysTick-&gt;CTRL &amp; <span class="number">0x00010000</span>));<span class="comment">//等待计数到0</span></span><br><span class="line">SysTick-&gt;CTRL = <span class="number">0x00000004</span>;<span class="comment">//关闭定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  毫秒级延时</span></span><br><span class="line"><span class="comment">  * @param  xms 延时时长，范围：0~4294967295</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">uint32_t</span> xms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(xms--)</span><br><span class="line">&#123;</span><br><span class="line">Delay_us(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  秒级延时</span></span><br><span class="line"><span class="comment">  * @param  xs 延时时长，范围：0~4294967295</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_s</span><span class="params">(<span class="type">uint32_t</span> xs)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(xs--)</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Delay.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint32_t</span> us)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">uint32_t</span> ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_s</span><span class="params">(<span class="type">uint32_t</span> s)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="拓展：keil5自带示波器使用">拓展：keil5自带示波器使用</h2><h3 id="1-点击魔术棒">1.点击魔术棒</h3><p><img src="https://s2.loli.net/2022/11/29/viyxJ9te8qOM7g4.png" alt="image-20221128235705370"></p><h3 id="2-进入Debug">2.进入Debug</h3><p>先设置为Use Simulator，然后去设置Dialog DLL和其后面的Parameter.</p><p>其中将Dialog DLL设置为：DARMSTM.DLL</p><p>Parameter设置为-p单片机型号</p><img src="https://s2.loli.net/2022/11/29/J7hwnFYvy9reRdk.png" alt="image-20221128235745302" style="zoom: 75%;" /><h3 id="3-进入调试模式，调出示波器">3.进入调试模式，调出示波器</h3><p><img src="https://s2.loli.net/2022/11/29/o1bEQYhpl4v6qTA.png" alt="image-20221129000242745"></p><h3 id="4-点击Setup设置仿真端口">4.点击Setup设置仿真端口</h3><p>在里面加入要查看的端口，格式为PORTX.Y【X为A,B,C…;Y为1，2，3，…】</p><p><img src="https://s2.loli.net/2022/11/29/JY4VaLPX3w6oWiU.png" alt="image-20221129000321043"></p><img src="https://s2.loli.net/2022/11/29/SWRhgBnNp9k5GAe.png" alt="image-20221129000506238" style="zoom:60%;" /><img src="https://s2.loli.net/2022/11/29/qE7mSpNaxvHFA9y.png" alt="image-20221129000615129" style="zoom:70%;" /><h3 id="5-查看仿真效果">5.查看仿真效果</h3><img src="https://s2.loli.net/2022/11/29/fIkGxOhPtBDpV4M.png" alt="image-20221129000647017" style="zoom:55%;" /><h2 id="2-2、PWM驱动舵机">2.2、PWM驱动舵机</h2><p>**功能实现：**通过按键控制舵机旋转角度</p><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">20000</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC2Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare2</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare2(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare2</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Servo.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_Init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_SetAngle</span><span class="params">(<span class="type">float</span> Angle)</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_SetCompare2(Angle / <span class="number">180</span> * <span class="number">2000</span> + <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Servo.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __SERVO_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __SERVO_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_SetAngle</span><span class="params">(<span class="type">float</span> Angle)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Servo.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">float</span> Angle;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Servo_Init();</span><br><span class="line">Key_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;Angle:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum = Key_GetNum();</span><br><span class="line"><span class="keyword">if</span> (KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Angle += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">if</span> (Angle &gt; <span class="number">180</span>)</span><br><span class="line">&#123;</span><br><span class="line">Angle = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Servo_SetAngle(<span class="number">180</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>, <span class="number">7</span>, Angle, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Delay.c</p><p>Delay.h</p><h2 id="2-3、PWM驱动直流电机">2.3、PWM驱动直流电机</h2><p>**功能实现：**通过按键控制舵机旋转速度</p><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC3Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare3</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare3(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare3</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Motor.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">PWM_Init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_SetSpeed</span><span class="params">(<span class="type">int8_t</span> Speed)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_4);</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_5);</span><br><span class="line"><span class="comment">//设置速度</span></span><br><span class="line">PWM_SetCompare3(Speed);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_4);</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_5);</span><br><span class="line"><span class="comment">//设置速度</span></span><br><span class="line">PWM_SetCompare3(-Speed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Motor.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MOTOR_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_SetSpeed</span><span class="params">(<span class="type">int8_t</span> Speed)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Motor.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">int8_t</span> Speed;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Motor_Init();</span><br><span class="line">Key_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;Speed:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum = Key_GetNum();</span><br><span class="line"><span class="keyword">if</span> (KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed += <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">-100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(Speed);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">1</span>, <span class="number">7</span>, Speed, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Delay.c</p><p>Delay.h</p><h1>七、TIM输入捕获</h1><p>IC（Input Capture）输入捕获</p><p>输入捕获模式下，当通道输入引脚出现指定电平跳变时，当前CNT的值将被锁存到CCR中，可用于测量PWM波形的频率、占空比、脉冲间隔、电平持续时间等参数</p><p>每个高级定时器和通用定时器都拥有4个输入捕获通道</p><p>可配置为PWMI模式，同时测量频率和占空比</p><p>可配合主从触发模式，实现硬件全自动测量</p><h2 id="7-1频率测量">7.1频率测量</h2><p>测频法：在闸门时间T内，对上升沿计次，得到N，则频率【f~x~=N / T】</p><p>测周法：两个上升沿内，以标准频率fc计次，得到N ，则频率【f~x~=f~c~/ N】</p><p>中界频率：测频法与测周法误差相等的频率点【f~m~=√(f~c~/ T)】</p><img src="https://s2.loli.net/2022/12/01/iwBxrNQ9lemUspj.png" alt="image-20221201160008905" style="zoom:80%;" /><h2 id="7-2输入捕获通道">7.2输入捕获通道</h2><img src="https://s2.loli.net/2022/12/01/qOAbiGTH2BruX5Z.png" alt="image-20221201161146355" style="zoom: 60%;" /><img src="https://s2.loli.net/2022/12/01/5y3ou7gYpJHS1mj.png" alt="image-20221201164341495" style="zoom:67%;" /><h2 id="7-3主从触发模式">7.3主从触发模式</h2><img src="https://s2.loli.net/2022/12/01/QTKJ9ghsqVcHA8u.png" alt="image-20221201164809908" style="zoom:67%;" /><h2 id="7-4两种捕获方式基本结构">7.4两种捕获方式基本结构</h2><h3 id="7-4-1输入捕获基本结构">7.4.1输入捕获基本结构</h3><p>触发源选择只有TI1和TI2，没有TI3和TI4，如果使用从模式自动清零CNT只能使用通道1和通道2</p><p>如果使用通道3和通道4只能开启捕获中断，手动清零</p><img src="https://s2.loli.net/2022/12/01/gXKEVBmvhZp8HGt.png" alt="image-20221201165935357" style="zoom:67%;" /><h3 id="7-4-2PWMI基本结构">7.4.2PWMI基本结构</h3><img src="https://s2.loli.net/2022/12/01/aye2dWLN4b1qkYZ.png" alt="image-20221201170120062" style="zoom:67%;" /><h1>实例三、输入捕获模式测频率&amp;PWMI模式测频率占空比</h1><h2 id="3-1、输入捕获模式测频率">3.1、输入捕获模式测频率</h2><p><strong>功能实现</strong>：PA0口输出，PA6口测量</p><p>IC.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM3是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"><span class="comment">//配置捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//选择分频器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;</span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置TRGI的触发源</span></span><br><span class="line">TIM_SelectInputTrigger(TIM3, TIM_TS_TI1FP1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置从模式</span></span><br><span class="line">TIM_SelectSlaveMode(TIM3, TIM_SlaveMode_Reset);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000000</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IC.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span><span class="comment">//改变占空比</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span><span class="comment">//改变频率</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_PrescalerConfig(TIM2, Prescaler, TIM_PSCReloadMode_Update);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IC.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line">IC_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Freq:00000HZ&quot;</span>);</span><br><span class="line">PWM_SetCompare1(<span class="number">50</span>);</span><br><span class="line">PWM_SetPrescaler(<span class="number">720</span><span class="number">-1</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">6</span>,IC_GetFreq(),<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><p>OLED.h</p><h2 id="3-2、PWMI模式测量占空比">3.2、PWMI模式测量占空比</h2><p><strong>功能实现</strong>：PA0口输出，PA6口测量，双通道分别测量频率和占空比</p><p><strong>注意</strong>：可以使用TIM_PWMIConfig函数直接配置另一个通道</p><p>IC.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM3是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//选择分频器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置另一个通道的参数</span></span><br><span class="line">TIM_PWMIConfig(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置TRGI的触发源</span></span><br><span class="line">TIM_SelectInputTrigger(TIM3, TIM_TS_TI1FP1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置从模式</span></span><br><span class="line">TIM_SelectSlaveMode(TIM3, TIM_SlaveMode_Reset);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000000</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetDuty</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (TIM_GetCapture2(TIM3) + <span class="number">1</span>) * <span class="number">100</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IC.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetDuty</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span><span class="comment">//改变占空比</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span><span class="comment">//改变频率</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_PrescalerConfig(TIM2, Prescaler, TIM_PSCReloadMode_Update);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IC.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line">IC_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Freq:00000HZ&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;Duty:00%&quot;</span>);</span><br><span class="line">PWM_SetPrescaler(<span class="number">7200</span><span class="number">-1</span>);</span><br><span class="line">PWM_SetCompare1(<span class="number">90</span>);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">6</span>,IC_GetFreq(),<span class="number">5</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">6</span>,IC_GetDuty(),<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><p>OLED.h</p><h1>八、TIM编码器接口</h1><p>Encoder Interface 编码器接口</p><p>编码器接口可接收增量（正交）编码器的信号，根据编码器旋转产生的正交信号脉冲，<strong>自动控制</strong>CNT自增或自减，从而指示编码器的位置、旋转方向和旋转速度</p><p>每个高级定时器和通用定时器都拥有1个编码器接口</p><p>两个输入引脚借用了输入捕获的通道1和通道2</p><h2 id="8-1正交编码器">8.1正交编码器</h2><p>正交信号：正转和反转的位相相差90°</p><p>正交信号的优势：精度高、可以抗噪声</p><img src="https://s2.loli.net/2022/12/05/AfoNHy53CXz1uEx.png" alt="image-20221205152215829" style="zoom:67%;" /><h2 id="8-2编码器接口基本结构">8.2编码器接口基本结构</h2><p>参考手册框图：</p><img src="https://s2.loli.net/2022/12/05/Nfxs8T6S1ukdUFE.png" alt="image-20221205152823861" style="zoom: 50%;" /><p>简化原理图：</p><img src="https://s2.loli.net/2022/12/05/ZUFhknQsEprIGBw.png" alt="image-20221205154038636"  /><h2 id="8-3工作模式">8.3工作模式</h2><img src="https://s2.loli.net/2022/12/05/38ndzXlUQWKbLO2.png" alt="image-20221205154147591" style="zoom: 50%;" /><h1>实例四编码器接口测速</h1><p>Encoder.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Encoder_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM3是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6|GPIO_Pin_7;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//编码器接口是一个带方向控制的外部时钟，所以内部时钟不需要</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line"><span class="comment">//TIM_InternalClockConfig(TIM3);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值，满量程，容易转换成负数</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">1</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值，不分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体配置不完整，所以需要默认初始化</span></span><br><span class="line"><span class="comment">//通道1</span></span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//后面仍会配置极性，后面的会覆盖前面的，可以删去</span></span><br><span class="line"><span class="comment">//TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;//极性，上升沿，不反向</span></span><br><span class="line"><span class="comment">//这两项编码器用不到，可以删去，但是删去后结构体配置不完整，需要初始化一下</span></span><br><span class="line"><span class="comment">//TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;//选择分频器</span></span><br><span class="line"><span class="comment">//TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;</span></span><br><span class="line"></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置通道2</span></span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置编码器接口</span></span><br><span class="line">    TIM_EncoderInterfaceConfig(TIM3,TIM_EncoderMode_TI12,TIM_ICPolarity_Rising,TIM_ICPolarity_Rising);</span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int16_t</span> <span class="title function_">Encoder_Get</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="type">int16_t</span> temp;</span><br><span class="line">temp = TIM_GetCounter(TIM3);</span><br><span class="line">TIM_SetCounter(TIM3,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Encoder.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __ENCODER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __ENCODER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Encoder_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">int16_t</span> <span class="title function_">Encoder_Get</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10000</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">7200</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位，避免刚初始化完就进入中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使能中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Encoder.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">int16_t</span> speed;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">Encoder_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;SPEED:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; </span><br><span class="line"><span class="comment">//OLED_ShowNum(1,5,num,5);</span></span><br><span class="line">OLED_ShowSignedNum(<span class="number">2</span>,<span class="number">1</span>,speed,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断中断</span></span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span><br><span class="line">speed = Encoder_Get();</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><p>OLED.h</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
