<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OpenHarmony一站式开发环境搭建</title>
      <link href="/post/dfa045aa.html"/>
      <url>/post/dfa045aa.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>鸿蒙官方文档（<a href="https://device.harmonyos.com/cn/docs/documentation/guide/service_introduction-0000001050166905">HUAWEI DevEco Device Tool使用指南</a>）</p><p>华为视频教程（<a href="https://developer.huawei.com/consumer/cn/training/course/video/C101639988048536240">华为开发者学堂-HarmonyOS Connect 开发工具系列</a>）</p><p>配合以上教程阅读本文</p></blockquote><h1 id="一、虚拟机下载安装"><a href="#一、虚拟机下载安装" class="headerlink" title="一、虚拟机下载安装"></a>一、虚拟机下载安装</h1><p>我这里用的VMware17.0，安装方式参考这篇文章：<a href="https://mp.weixin.qq.com/s/AJ5Rio6aJr_D5NmJMKTRmA">https://mp.weixin.qq.com/s/AJ5Rio6aJr_D5NmJMKTRmA</a></p><h1 id="二、Ubuntu下载安装"><a href="#二、Ubuntu下载安装" class="headerlink" title="二、Ubuntu下载安装"></a>二、Ubuntu下载安装</h1><h2 id="2-1下载Ubuntu镜像"><a href="#2-1下载Ubuntu镜像" class="headerlink" title="2.1下载Ubuntu镜像"></a>2.1下载Ubuntu镜像</h2><p>下载地址：<a href="https://mirrors.huaweicloud.com/home">华为开源镜像站_软件开发服务_华为云 (huaweicloud.com)</a></p><p><img src="https://s2.loli.net/2023/06/10/6LpnQyvIaWZHUEV.png" alt="image-20230610125737728"></p><p>Ubuntu-Releases的镜像地址为：<a href="https://repo.huaweicloud.com/ubuntu-releases/">https://repo.huaweicloud.com/ubuntu-releases/</a></p><img src="https://s2.loli.net/2023/06/10/EuQ4UXLFc6hCYOo.png" alt="image-20230610125755434" style="zoom: 67%;" /><p>这里选择下载的是<code>ubuntu-18.04.6-desktop-amd64.iso</code></p><img src="https://s2.loli.net/2023/06/10/JHtI1vms9POF4qQ.png" alt="image-20230610125829492" style="zoom:50%;" /><img src="https://s2.loli.net/2023/06/10/FsrTShz1R4KloZb.png" alt="image-20230610130421993" style="zoom:50%;" /><h2 id="2-2虚拟机中搭建Ubuntu"><a href="#2-2虚拟机中搭建Ubuntu" class="headerlink" title="2.2虚拟机中搭建Ubuntu"></a>2.2虚拟机中搭建Ubuntu</h2><p>1.打开VMware Workstation，在【文件】选项下，找到并点击【新建虚拟机】</p><img src="https://s2.loli.net/2023/06/10/3bDVNASHc9xKCtX.png" alt="image-20230610131252618" style="zoom:50%;" /><p>2.选择【典型】</p><img src="https://s2.loli.net/2023/06/10/qTlfXHcsI5t94bO.png" alt="image-20230610131421989" style="zoom:67%;" /><p>3.选择【稍后安装操作系统】</p><img src="https://s2.loli.net/2023/06/10/9bPLqyzkupIvmSF.png" alt="image-20230610131724458" style="zoom:67%;" /><p>4.操作系统选择 Linux(L)，版本选择 Ubuntu 64位，点击 下一步</p><img src="https://s2.loli.net/2023/06/10/RGeJy4g9TPLtaqD.png" alt="image-20230610131831305" style="zoom:67%;" /><p>5.点击浏览…选择安装位置</p><img src="https://s2.loli.net/2023/06/10/fo9bzIJlvZrDKm7.png" alt="image-20230610132025049" style="zoom:67%;" /><p>6.磁盘容量尽量选择大一些，因为后面拉取源码比较大（直接100G比较好，50G后面好像会提示空间不够，拉取失败）</p><img src="https://s2.loli.net/2023/06/10/JlHhEMXcFGtikNp.png" alt="image-20230610132133558" style="zoom:67%;" /><p>7.点击 【自定义硬件】</p><img src="https://s2.loli.net/2023/06/10/yrfLw8KFO4I7pRt.png" alt="image-20230610132326637" style="zoom:67%;" /><p>8.运行内存建议选择4G</p><img src="https://s2.loli.net/2023/06/10/BDFKjlXbmP5sn2R.png" alt="image-20230610132432860" style="zoom:67%;" /><p>9.处理器可以选择2个或4个，根据自己电脑的配置来</p><img src="https://s2.loli.net/2023/06/10/N1WspEfTeKhUltM.png" alt="image-20230610132549650" style="zoom: 67%;" /><p>10.选择【新CD&#x2F;DVD(SATA)】，然后选择【使用ISO镜像文件】，点击浏览，选择Ubuntu的ISO镜像</p><img src="https://s2.loli.net/2023/06/10/IY7CHOukSzb4RMg.png" alt="image-20230610132631761" style="zoom:67%;" /><p>11.点击【网络适配器】，网络连接选择【NAT模式】</p><blockquote><p>不要看图片！！！</p></blockquote><img src="https://s2.loli.net/2023/06/10/O8m1SwL52oW9tvi.png" alt="image-20230610132755447" style="zoom:67%;" /><p>12.移除【USB控制器】和【打印机】</p><p><img src="https://s2.loli.net/2023/06/10/lbhzRIx76mfSTdW.png" alt="image-20230610132915299"></p><p>13.移除后点击【关闭】</p><img src="https://s2.loli.net/2023/06/10/yFsGaCXjStvuWJo.png" alt="image-20230610133047636" style="zoom:67%;" /><p>14.点击【完成】</p><img src="https://s2.loli.net/2023/06/10/pzS3Q9AvTE1CZdy.png" alt="image-20230610133122287" style="zoom:67%;" /><h2 id="2-3-Ubuntu安装"><a href="#2-3-Ubuntu安装" class="headerlink" title="2.3 Ubuntu安装"></a>2.3 Ubuntu安装</h2><p>1.打开 Ubuntu</p><img src="https://s2.loli.net/2023/06/10/aPFJEC4qoeDROIh.png" alt="image-20230610133315380" style="zoom: 67%;" /><p>2.这里语言选择默认的【英语】，点击【Install Ubuntu】</p><img src="https://s2.loli.net/2023/06/10/kGDit4dW9FsSBmE.png" alt="image-20230610133623902" style="zoom:67%;" /><p>3.后续步骤全部默认，全部点击【Continue】</p><p>4.时区选择【上海】</p><img src="https://s2.loli.net/2023/06/10/1bEc5jCMVk6XAKd.png" alt="image-20230610133841264" style="zoom:67%;" /><p>5.输入用户名、设置密码</p><img src="https://s2.loli.net/2023/06/10/gJRFQ8HeP1pToSV.png" alt="image-20230610134050571" style="zoom: 67%;" /><p>6.等待安装完成</p><p>7.安装完成重启</p><img src="https://s2.loli.net/2023/06/10/MjQNfl6DrP8taK9.png" alt="image-20230610134432484" style="zoom:67%;" /><blockquote><p>如果长时间停留在下面这个页面</p><p><img src="https://s2.loli.net/2023/06/10/L5SsBpfDKjXMENa.png" alt="image-20230610134702101"></p><p>请点击上面的，在里面选择【重启客户机】即可</p><p><img src="https://s2.loli.net/2023/06/10/xagDKTQbHL7NqfG.png" alt="image-20230610135226570"></p></blockquote><h1 id="三、Ubuntu配置"><a href="#三、Ubuntu配置" class="headerlink" title="三、Ubuntu配置"></a>三、Ubuntu配置</h1><p>1.登录重启后的系统</p><blockquote><p>安装VMware Tools时报错：</p><p>客户机操作系统已将 CD-ROM 门锁定，并且可能正在使用 CD-ROM，这可能会导致客户机无法识别介质的更改。如果可能，请在断开连接之前从客户机内部弹出 CD-ROM。</p><p><img src="https://s2.loli.net/2023/06/10/fXQs3kP7SEnp1MD.png" alt="image-20230610140856537"></p><p>解决方式：</p><img src="https://s2.loli.net/2023/06/10/zf4jvla6CJe2tI7.png" alt="image-20230610141118479" style="zoom:67%;" /></blockquote><p>2.置超级管理员密码，在命令提示窗口输入<code>sudo passwd</code></p><p><img src="https://s2.loli.net/2023/06/10/tZNo42T1IlfDE6X.png" alt="image-20230610145544156"></p><p>3.更新镜像源<code>sudo apt-get update</code></p><p><img src="https://s2.loli.net/2023/06/10/8UFXK7JMyWrZ6pE.png" alt="image-20230610154119295"></p><blockquote><p>如果连不上网，可以去设置里面将【网络适配器】，改为NAT模式</p></blockquote><p>4.win下拷贝可以到虚拟机中，只需要安装VMwareTools</p><p>如果发现安装完不可以实现复制功能，请参考博客：<a href="https://blog.csdn.net/weixin_52234647/article/details/126331438">(Ubuntu和Windows文件的复制粘贴功能</a></p><blockquote><p>如果在根据博客内容安装时，出现一些问题不能安装，参考这篇博客：<a href="https://blog.csdn.net/fgets__/article/details/113626387">解决方案</a></p></blockquote><h1 id="四、DevEco-Device-Tool的开发环境"><a href="#四、DevEco-Device-Tool的开发环境" class="headerlink" title="四、DevEco Device Tool的开发环境"></a>四、DevEco Device Tool的开发环境</h1><p>下载：<a href="https://device.harmonyos.com/cn/develop/ide#download">华为集成开发环境IDE DevEco Device Tool下载 | HarmonyOS设备开发</a></p><h2 id="4-1Windows环境"><a href="#4-1Windows环境" class="headerlink" title="4.1Windows环境"></a>4.1Windows环境</h2><blockquote><p>点击exe安装</p></blockquote><p>1.更改安装路径</p><img src="https://s2.loli.net/2023/06/10/tPZucL4NGIU2aJB.png" alt="image-20230610161030801" style="zoom:67%;" /><p>2.检测环境，如果没有检测到符合要求的Python和VSCode，他会自动安装</p><img src="https://s2.loli.net/2023/06/10/i8QgzsvjtxbUP2A.png" alt="image-20230610161157797" style="zoom:67%;" /><h2 id="4-2Ubuntu环境"><a href="#4-2Ubuntu环境" class="headerlink" title="4.2Ubuntu环境"></a>4.2Ubuntu环境</h2><p>1.将下载好的<code>devicetool-linux-tool-3.1.0.600.sh</code>安装文件拉到Ubuntu中</p><p><img src="https://s2.loli.net/2023/06/10/BeCE1rWId6A7VKX.png" alt="image-20230610161650440"></p><p>2.在该目录下打开命令提示窗口，输入<code>ls</code>查看该路径下是否有安装文件</p><p><img src="https://s2.loli.net/2023/06/10/xyS5PuBv9Mm2WZs.png" alt="image-20230610162056567"></p><p>3.执行如下命令，赋予安装文件可执行权限</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x devicetool-linux-tool-&#123;Version&#125;.sh</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/hRx6t7cBF5sSm4H.png" alt="image-20230610162219099"></p><p>4.执行如下命令，安装DevEco Device Tool</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./devicetool-linux-tool-&#123;Version&#125;.sh</span><br></pre></td></tr></table></figure><p>5.通过上下键选择第一个，左右键选择OK</p><img src="https://s2.loli.net/2023/06/10/NrVnTiC67xwoAmQ.png" alt="image-20230610162410716"  /><p>6.安装完成后，当界面输出“DevEco Device Tool successfully installed.”时，表示DevEco Device Tool安装成功。</p><p><img src="https://s2.loli.net/2023/06/10/lAzC8wRMijdrvuQ.png" alt="image-20230610163816606"></p><p>7.安装openssh</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/2fjWrTnXi53shpd.png" alt="image-20230610164052791"></p><p>8.启动SSH服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh</span><br></pre></td></tr></table></figure><p>9.获取当前用户的IP地址，复制这个地址，后面需要使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/DHd5GzK69rnMWlL.png" alt="image-20230610164328714"></p><blockquote><p>如果执行ifconfig命令提示“command-not-found”，请执行<strong>sudo apt-get install net-tools</strong>命令安装网络查询工具，然后重新查询IP地址，如果安装过程有问题，请参考这篇博客<a href="https://blog.csdn.net/fgets__/article/details/113626387">解决方案</a></p></blockquote><h2 id="4-3Windows远程访问Ubuntu"><a href="#4-3Windows远程访问Ubuntu" class="headerlink" title="4.3Windows远程访问Ubuntu"></a>4.3Windows远程访问Ubuntu</h2><p>1.打开VSCode</p><p>2.安装Remote SSH插件</p><img src="https://s2.loli.net/2023/06/10/Fuwd5tUTzM3A2SO.png" alt="image-20230610164603867" style="zoom: 67%;" /><p>3.在弹出的SSH连接命令输入框中输入“ssh <em>username</em>@<em>ip_address</em>”，其中ip_address为要连接的远程计算机的IP地址，username为登录远程计算机的帐号。</p><p><img src="https://s2.loli.net/2023/06/10/xYQ7PFOrWEGa1ej.png" alt="image-20230610164757753"></p><p><img src="https://s2.loli.net/2023/06/10/fYxcMImobPs2C5Q.png" alt="image-20230610164840183"></p><p>4.在弹出的输入框中，选择SSH configuration文件，选择默认的第一选项即可。</p><p>5.在SSH TARGETS中，找到远程计算机，打开远程计算机。首次连接时，在弹出的输入框中选择<strong>Linux</strong>，然后再选择<strong>Continue</strong>，然后输入登录远程计算机的密码，连接远程计算机 。</p><blockquote><p>如果打开后出现如下的弹出：</p><p><img src="https://s2.loli.net/2023/06/10/HoCA1l8kiSjn56c.png" alt="image-20230610165606955"></p><p>请打开电脑中的设置，在应用中选择可选功能，然后选择添加功能，安装openssh。</p><img src="https://s2.loli.net/2023/06/10/yOi5a6RkWSp9LzN.png" alt="image-20230610165536769" style="zoom:67%;" /><p>然后再电脑中找到.ssh文件夹，按下图操作</p><p><img src="https://s2.loli.net/2023/06/10/h2QPRjGHrnovbIE.png" alt="image-20230610172804417"></p><p>这里补充一下，权限这里需要设置成【完全控制】，不然后面修改的话会提示权限不够</p><p><img src="https://s2.loli.net/2023/06/10/R5gHydUVkaeS2AI.png" alt="image-20230610210429718"></p></blockquote><p>6.连接成功后，在下面的终端窗口中输入<code>ls</code>查看目录，验证一下</p><p><img src="https://s2.loli.net/2023/06/10/UZsXYNqI9hkAc5F.png" alt="image-20230610173337921"></p><h2 id="4-4远程访问Ubuntu环境的公钥"><a href="#4-4远程访问Ubuntu环境的公钥" class="headerlink" title="4.4远程访问Ubuntu环境的公钥"></a>4.4远程访问Ubuntu环境的公钥</h2><p>1.打开Git bash窗口，输入下面两行指令</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub username@ip</span><br></pre></td></tr></table></figure><blockquote><p>中间默认按回车就行，把目录放在默认路径下</p><p>id为用户名，IP为刚才复制的</p></blockquote><p><img src="https://s2.loli.net/2023/06/10/tOx3r9WBfNQHgVU.png" alt="image-20230610174325735"></p><p>2.在config配置文件中添加SSH Key文件信息，如下图所示，然后保存即可</p><p><img src="https://s2.loli.net/2023/06/10/rohSUD9JwRxMTVp.png" alt="image-20230610174514434"></p><p><img src="https://s2.loli.net/2023/06/10/Bft1JdzHnScsgwG.png" alt="image-20230610175050539"></p><h1 id="五、源码获取"><a href="#五、源码获取" class="headerlink" title="五、源码获取"></a>五、源码获取</h1><h2 id="5-1前期准备"><a href="#5-1前期准备" class="headerlink" title="5.1前期准备"></a>5.1前期准备</h2><blockquote><p>1.以下步骤可以直接在连接镜像后的VSCode中进行，也可以在Ubuntu中进行</p><p>2.尽量不要使用校园网，使用手机流量，不然拉取源码时容易出现各种错误</p></blockquote><p>1.安装curl</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install curl</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/06/10/3tPqQoMcjRhJ2r1.png" alt="image-20230610181022474"></p><p>2.安装repo</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -s https:<span class="comment">//gitee.com/oschina/repo/raw/fork_flow/repo-py3&gt; repo</span></span><br></pre></td></tr></table></figure><p>使用<code>cd repo</code>查看生成的文件</p><blockquote><p>如果为空，则直接将链接在浏览器中打开，将文件内容复后，打开Ubuntu，在home下找到repo将内容粘贴进去</p></blockquote><p>3.移动repo文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv repo /usr/local/bin/</span><br></pre></td></tr></table></figure><p>4.添加权限</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod a+x /usr/local/bin/repo</span><br></pre></td></tr></table></figure><p>5.测试</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -i https:<span class="comment">//repo.huaweicloud.com/repository/pypi/simple requests</span></span><br></pre></td></tr></table></figure><p>6.安装git客户端和git-lfs。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git git-lfs</span><br></pre></td></tr></table></figure><p>7.配置用户信息,这里的用户名和邮箱建议是gitte使用的用户名和邮箱</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;your-email-address&quot;</span></span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h2 id="5-2拉取源码"><a href="#5-2拉取源码" class="headerlink" title="5.2拉取源码"></a>5.2拉取源码</h2><p>1.创建OpenHarmony_master文件夹</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p OpenHarmony_master</span><br></pre></td></tr></table></figure><p>2.进入OpenHarmony_master文件夹</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd OpenHarmony_master</span><br></pre></td></tr></table></figure><p>3.拉取源码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repo init -u https:<span class="comment">//gitee.com/openharmony/manifest.git -b master --no-repo-verify</span></span><br><span class="line">repo init -u https:<span class="comment">//gitee.com/openharmony/manifest.git -b refs/tags/OpenHarmony-v3.0-LTS --no-repo-verify</span></span><br><span class="line">repo sync -c</span><br><span class="line">repo forall -c <span class="string">&#x27;git lfs pull&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>报错提示：No such file or directory</p><p>解决方式：</p><p>1.使用<code>which python3</code>找到路径</p><p>2.使用<code>sudo ln -s /usr/bin/python3 /usr/bin/python</code></p><p>3.输入<code>python --version</code>,如果出现版本，则成功</p><p>4.重新执行命令，进行安装</p></blockquote><p>出现下面的界面表示成功</p><p><img src="https://s2.loli.net/2023/06/10/COJtEVIyY4sAu89.png" alt="image-20230610185331396"></p><blockquote><p>如果出现错误，请参考以下内容</p><p><img src="https://s2.loli.net/2023/06/10/ijctZEMPFqTgJHp.png" alt="image-20230610185402267"></p></blockquote><p>4.同步代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo sync -c</span><br></pre></td></tr></table></figure><blockquote><p>时间较长，耐心等待</p></blockquote><blockquote><p>如果出现如下错误或者<code>**error: Cannot ***:ManifestInvalidRevisionError</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; curl <span class="number">56</span> GnuTLS recv <span class="title function_">error</span> <span class="params">(<span class="number">-9</span>)</span>: A TLS packet with unexpected length was received.</span><br><span class="line">fatal: The remote end hung up unexpectedly</span><br><span class="line">fatal: early EOF</span><br><span class="line">fatal: index-pack failed</span><br></pre></td></tr></table></figure><p>解决方式：</p><p>1.网络不好，这个是最主要的原因</p><p>2.更改设置【最后在使用】(其中ens33是你ifconfig中的IP地址前的，根据自己实际情况设置)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//httpBuffer加大</span></span><br><span class="line">git config --global http.postBuffer <span class="number">524288000</span></span><br><span class="line"><span class="comment">//压缩配置</span></span><br><span class="line">git config --global core.compression <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">sudo ifconfig  ens33 mtu <span class="number">14000</span></span><br></pre></td></tr></table></figure><p>如果上述方法不能解决，那么就更说明网络不好…..（我将校园网换成流量就成功了）【使用数据线连接电脑和手机，手机设置通过USB共享网络，网速最好】</p></blockquote><p>5.拉取大文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">repo forall -c <span class="string">&#x27;git lfs pull&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="5-3执行prebuilts"><a href="#5-3执行prebuilts" class="headerlink" title="5.3执行prebuilts"></a>5.3执行prebuilts</h2><p>在源码根目录下执行prebuilts脚本，安装编译器及二进制工具。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash build/prebuilts_download.sh</span><br></pre></td></tr></table></figure><blockquote><p>中间如果提示pip版本过低，则升级一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip -i https:<span class="comment">//pypi.douban.com/simple</span></span><br></pre></td></tr></table></figure><p>如果升不上去，参考这篇博客，升级Python版本：<a href="https://blog.csdn.net/Lijingru8/article/details/120193590"> 将Python升级到3.6版本以上（Ubuntu）</a></p></blockquote><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><blockquote><p>我搭建完环境后，在VSCode里面去编译项目时没有成功，找了很久也没能解决这个问题，所以短期内打算先不使用这个一站式开发了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BearPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>郑州轻工业大学2022-2023（2）数据结构题目集</title>
      <link href="/post/ca5fa603.html"/>
      <url>/post/ca5fa603.html</url>
      
        <content type="html"><![CDATA[<h1 id="6-1-线性表元素的区间删除"><a href="#6-1-线性表元素的区间删除" class="headerlink" title="6-1 线性表元素的区间删除"></a>6-1 线性表元素的区间删除</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Delete</span><span class="params">(List L, ElementType minD, ElementType maxD)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= L-&gt;Last; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;Data[i] &lt;= minD || L-&gt;Data[i] &gt;= maxD) &#123;</span><br><span class="line">            L-&gt;Data[p++] = L-&gt;Data[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;Last = p - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-2-有序表的插入"><a href="#6-2-有序表的插入" class="headerlink" title="6-2 有序表的插入"></a>6-2 有序表的插入</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">ListInsertSort</span><span class="params">(SqList *L, DataType x)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> temp = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; L-&gt;items[i] &lt; x; i++) &#123;</span><br><span class="line">        temp++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ListInsert(L, temp, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-3-合并两个有序数组"><a href="#6-3-合并两个有序数组" class="headerlink" title="6-3 合并两个有序数组"></a>6-3 合并两个有序数组</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> m, <span class="type">int</span> *b, <span class="type">int</span> n, <span class="type">int</span> *c)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m &amp;&amp; j &lt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; b[j])</span><br><span class="line">            c[k++] = a[i++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            c[k++] = b[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; m) &#123;</span><br><span class="line">        c[k++] = a[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; n) &#123;</span><br><span class="line">        c[k++] = b[j++];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-4-顺序表操作集"><a href="#6-4-顺序表操作集" class="headerlink" title="6-4 顺序表操作集"></a>6-4 顺序表操作集</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">MakeEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">    List <span class="built_in">list</span>;</span><br><span class="line">    <span class="built_in">list</span> = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    <span class="built_in">list</span>-&gt;Last = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Position <span class="title function_">Find</span><span class="params">(List L, ElementType X)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXSIZE; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (L-&gt;Data[i] == X)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">Insert</span><span class="params">(List L, ElementType X, Position P)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (L-&gt;Last == MAXSIZE - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;FULL&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (P &lt; <span class="number">0</span> || P &gt; L-&gt;Last + <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ILLEGAL POSITION&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = L-&gt;Last; i &gt;= P; i--) &#123;</span><br><span class="line">        L-&gt;Data[i + <span class="number">1</span>] = L-&gt;Data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;Data[P] = X;</span><br><span class="line">    L-&gt;Last++;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">Delete</span><span class="params">(List L, Position P)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (P &lt; <span class="number">0</span> || P &gt; L-&gt;Last) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;POSITION %d EMPTY&quot;</span>, P);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = P; i &lt; L-&gt;Last; i++) &#123;</span><br><span class="line">        L-&gt;Data[i] = L-&gt;Data[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    L-&gt;Last--;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-5-递增的整数序列链表的插入"><a href="#6-5-递增的整数序列链表的插入" class="headerlink" title="6-5 递增的整数序列链表的插入"></a>6-5 递增的整数序列链表的插入</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Insert</span><span class="params">(List L, ElementType X)</span> &#123;</span><br><span class="line">    List p, s;</span><br><span class="line">    p = L;</span><br><span class="line">    s = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> Node));</span><br><span class="line">    s-&gt;Data = X;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p-&gt;Next &amp;&amp; p-&gt;Next-&gt;Data &lt; X) &#123;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    s-&gt;Next = p-&gt;Next;</span><br><span class="line">    p-&gt;Next = s;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-6-删除单链表偶数节点"><a href="#6-6-删除单链表偶数节点" class="headerlink" title="6-6 删除单链表偶数节点"></a>6-6 删除单链表偶数节点</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">createlist</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">p</span>, *<span class="title">s</span>, *<span class="title">l</span>;</span></span><br><span class="line">    p = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    p-&gt;data = m;</span><br><span class="line">    p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    s = p;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        l = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line">        l-&gt;data = m;</span><br><span class="line">        l-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        s-&gt;next = l;</span><br><span class="line">        s = l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">deleteeven</span><span class="params">(<span class="keyword">struct</span> ListNode *head)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">p</span> =</span> <span class="literal">NULL</span>, *s = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (head &amp;&amp; head-&gt;data % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        p = head;</span><br><span class="line">        head = head-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    s = head;</span><br><span class="line">    <span class="keyword">while</span> (s-&gt;next) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s-&gt;next-&gt;data % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            s-&gt;next = s-&gt;next-&gt;next;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s = s-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-7-逆序数据建立链表"><a href="#6-7-逆序数据建立链表" class="headerlink" title="6-7 逆序数据建立链表"></a>6-7 逆序数据建立链表</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> ListNode *<span class="title function_">createlist</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">head</span>, *<span class="title">p</span>;</span></span><br><span class="line">    head = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        p = (<span class="keyword">struct</span> ListNode *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> ListNode));</span><br><span class="line">        p-&gt;next = head-&gt;next;</span><br><span class="line">        p-&gt;data = m;</span><br><span class="line">        head-&gt;next = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head-&gt;next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-8-求链表的倒数第m个元素"><a href="#6-8-求链表的倒数第m个元素" class="headerlink" title="6-8 求链表的倒数第m个元素"></a>6-8 求链表的倒数第m个元素</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ElementType <span class="title function_">Find</span><span class="params">(List L, <span class="type">int</span> m)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    PtrToNode p, s;</span><br><span class="line">    p = s = L;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">        <span class="keyword">if</span> (!p)</span><br><span class="line">            <span class="keyword">return</span> ERROR;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        s = s-&gt;Next;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s-&gt;Data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-9-两个有序链表序列的合并"><a href="#6-9-两个有序链表序列的合并" class="headerlink" title="6-9 两个有序链表序列的合并"></a>6-9 两个有序链表序列的合并</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">List <span class="title function_">Merge</span><span class="params">( List L1, List L2 )</span></span><br><span class="line">&#123;</span><br><span class="line">    List pa,pb,pc;</span><br><span class="line">    pa=L1-&gt;Next;</span><br><span class="line">    pb=L2-&gt;Next;</span><br><span class="line">    List L=(List)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">    pc=L;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(pa&amp;&amp;pb)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(pa-&gt;Data&gt;pb-&gt;Data)</span><br><span class="line">        &#123;</span><br><span class="line">            pc-&gt;Next=pb;</span><br><span class="line">            pb=pb-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            pc-&gt;Next=pa;</span><br><span class="line">            pa=pa-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">        pc=pc-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(pa)</span><br><span class="line">        pc-&gt;Next = pa;</span><br><span class="line">    <span class="keyword">if</span>(pb)</span><br><span class="line">        pc-&gt;Next = pb;</span><br><span class="line">    L1-&gt;Next=<span class="literal">NULL</span>;</span><br><span class="line">    L2-&gt;Next=<span class="literal">NULL</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-10-二叉树的遍历"><a href="#6-10-二叉树的遍历" class="headerlink" title="6-10 二叉树的遍历"></a>6-10 二叉树的遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InorderTraversal</span><span class="params">(BinTree BT)</span> &#123;<span class="comment">//中序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        InorderTraversal(BT-&gt;Left);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, BT-&gt;Data);</span><br><span class="line">        InorderTraversal(BT-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreorderTraversal</span><span class="params">(BinTree BT)</span> &#123;<span class="comment">//先序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, BT-&gt;Data);</span><br><span class="line">        PreorderTraversal(BT-&gt;Left);</span><br><span class="line">        PreorderTraversal(BT-&gt;Right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PostorderTraversal</span><span class="params">(BinTree BT)</span> &#123;<span class="comment">//后序遍历</span></span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        PostorderTraversal(BT-&gt;Left);</span><br><span class="line">        PostorderTraversal(BT-&gt;Right);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, BT-&gt;Data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LevelorderTraversal</span><span class="params">(BinTree BT)</span> &#123;</span><br><span class="line">    BinTree B[<span class="number">100</span>];<span class="comment">//结构体数组</span></span><br><span class="line">    BinTree T;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!BT)<span class="keyword">return</span>;<span class="comment">//树为空，返回</span></span><br><span class="line">    <span class="keyword">if</span> (BT)<span class="comment">//不为空</span></span><br><span class="line">    &#123;</span><br><span class="line">        B[i++] = BT;<span class="comment">//根节点入队</span></span><br><span class="line">        <span class="keyword">while</span> (i != j)<span class="comment">//队列不空</span></span><br><span class="line">        &#123;</span><br><span class="line">            T = B[j++];<span class="comment">//出队</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, T-&gt;Data);</span><br><span class="line">            <span class="keyword">if</span> (T-&gt;Left) B[i++] = T-&gt;Left;</span><br><span class="line">            <span class="keyword">if</span> (T-&gt;Right) B[i++] = T-&gt;Right;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="6-11-二叉树的非递归遍历"><a href="#6-11-二叉树的非递归遍历" class="headerlink" title="6-11 二叉树的非递归遍历"></a>6-11 二叉树的非递归遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">InorderTraversal</span><span class="params">( BinTree BT )</span>&#123;<span class="comment">//中序遍历</span></span><br><span class="line">    BinTree T=BT;</span><br><span class="line">    Stack S =CreateStack();</span><br><span class="line">    <span class="keyword">while</span>(T||!IsEmpty(S))&#123;</span><br><span class="line">        <span class="keyword">while</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            Push(S,T);</span><br><span class="line">            T=T-&gt;Left;</span><br><span class="line">        &#125;</span><br><span class="line">        T=Pop(S);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>,T-&gt;Data);</span><br><span class="line">        T=T-&gt;Right;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PreorderTraversal</span><span class="params">( BinTree BT )</span>&#123;<span class="comment">//先序遍历</span></span><br><span class="line">    BinTree T=BT;</span><br><span class="line">    Stack S =CreateStack();</span><br><span class="line">    <span class="keyword">while</span>(T||!IsEmpty(S))&#123;</span><br><span class="line">        <span class="keyword">while</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            Push(S,T);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>,T-&gt;Data);</span><br><span class="line">            T=T-&gt;Left;</span><br><span class="line">        &#125;</span><br><span class="line">        T=Pop(S);</span><br><span class="line">        T=T-&gt;Right;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PostorderTraversal</span><span class="params">( BinTree BT )</span>&#123;<span class="comment">//后序遍历</span></span><br><span class="line">    BinTree T=BT;</span><br><span class="line">    Stack S =CreateStack();</span><br><span class="line">    <span class="keyword">while</span>(T||!IsEmpty(S))&#123;</span><br><span class="line">        <span class="keyword">while</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            T-&gt;flag=<span class="number">0</span>;</span><br><span class="line">            Push(S,T);</span><br><span class="line">            T=T-&gt;Left;</span><br><span class="line">        &#125;</span><br><span class="line">        T=Peek(S);</span><br><span class="line">        <span class="keyword">if</span>(T-&gt;flag==<span class="number">0</span>)&#123;</span><br><span class="line">            T-&gt;flag++;</span><br><span class="line">            T=T-&gt;Right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            T=Pop(S);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>,T-&gt;Data);</span><br><span class="line">            T=<span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-12-求二叉树高度"><a href="#6-12-求二叉树高度" class="headerlink" title="6-12 求二叉树高度"></a>6-12 求二叉树高度</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">GetHeight</span><span class="params">(BinTree BT)</span> &#123;</span><br><span class="line">    <span class="type">int</span> lNum, rNum, Height;</span><br><span class="line">    <span class="keyword">if</span> (BT) &#123;</span><br><span class="line">        lNum = GetHeight(BT-&gt;Left);</span><br><span class="line">        rNum = GetHeight(BT-&gt;Right);</span><br><span class="line">        <span class="keyword">if</span> (lNum &gt; rNum)</span><br><span class="line">            Height = lNum;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Height = rNum;</span><br><span class="line">        <span class="keyword">return</span> Height + <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-13-邻接矩阵存储图的深度优先遍历"><a href="#6-13-邻接矩阵存储图的深度优先遍历" class="headerlink" title="6-13 邻接矩阵存储图的深度优先遍历"></a>6-13 邻接矩阵存储图的深度优先遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DFS</span><span class="params">(MGraph Graph, Vertex V, <span class="type">void</span> (*Visit)(Vertex))</span> &#123;</span><br><span class="line">    Vertex i;</span><br><span class="line">    Visit(V);</span><br><span class="line">    Visited[V] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; Graph-&gt;Nv; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Graph-&gt;G[V][i] == <span class="number">1</span> &amp;&amp; !Visited[i]) &#123;</span><br><span class="line">            DFS(Graph, i, Visit);<span class="comment">//进行递归</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-14-邻接表存储图的广度优先遍历"><a href="#6-14-邻接表存储图的广度优先遍历" class="headerlink" title="6-14 邻接表存储图的广度优先遍历"></a>6-14 邻接表存储图的广度优先遍历</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">BFS</span><span class="params">(LGraph Graph, Vertex S, <span class="type">void</span> (*Visit)(Vertex))</span> &#123;</span><br><span class="line">    Visited[S] = <span class="literal">true</span>;<span class="comment">//标记起始点</span></span><br><span class="line">    Visit(S);</span><br><span class="line">    <span class="type">int</span> <span class="built_in">queue</span>[<span class="number">1000</span>], front = <span class="number">0</span>, rear = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">queue</span>[rear++] = S;<span class="comment">//起始点入队列</span></span><br><span class="line">    PtrToAdjVNode temp;<span class="comment">//temp就代表当前点的邻接点的下标</span></span><br><span class="line">    <span class="keyword">while</span> (front &lt; rear) &#123;<span class="comment">//队伍不为空</span></span><br><span class="line">        temp = Graph-&gt;G[<span class="built_in">queue</span>[front++]].FirstEdge;</span><br><span class="line">        <span class="keyword">while</span> (temp) &#123;</span><br><span class="line">            <span class="type">int</span> p = temp-&gt;AdjV;<span class="comment">//把temp中的下标提取出来</span></span><br><span class="line">            <span class="keyword">if</span> (!Visited[p]) &#123;<span class="comment">//如果p点没有被标记的话</span></span><br><span class="line">                Visited[p] = <span class="literal">true</span>;</span><br><span class="line">                Visit(p);</span><br><span class="line">                <span class="built_in">queue</span>[rear++] = p;<span class="comment">//储存在队列中</span></span><br><span class="line">            &#125;</span><br><span class="line">            temp = temp-&gt;Next;<span class="comment">//指向下一个邻接点</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-1-一元多项式的乘法与加法运算"><a href="#7-1-一元多项式的乘法与加法运算" class="headerlink" title="7-1 一元多项式的乘法与加法运算"></a>7-1 一元多项式的乘法与加法运算</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElementType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">List</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></span><br><span class="line">    ElementType coe;<span class="comment">//系数</span></span><br><span class="line">    ElementType <span class="built_in">exp</span>;<span class="comment">//指数</span></span><br><span class="line">    List Next;<span class="comment">//下一个节点</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(List L, ElementType coe, ElementType <span class="built_in">exp</span>)</span>;<span class="comment">//插入</span></span><br><span class="line">List <span class="title function_">Multi</span><span class="params">(List p1, List p2)</span>;<span class="comment">//乘法</span></span><br><span class="line">List <span class="title function_">Plus</span><span class="params">(List p1, List p2)</span>;<span class="comment">//加法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(List p1, List p2)</span>;<span class="comment">//比较系数大小</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    List p1, p2;</span><br><span class="line">    List p;</span><br><span class="line">    <span class="type">int</span> num1, num2, coe, <span class="built_in">exp</span>;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    p1 = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p2 = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p1-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    p2-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num1);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num1; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;coe, &amp;<span class="built_in">exp</span>);</span><br><span class="line">        Insert(p1, coe, <span class="built_in">exp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num2);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num2; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;coe, &amp;<span class="built_in">exp</span>);</span><br><span class="line">        Insert(p2, coe, <span class="built_in">exp</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//乘法运算</span></span><br><span class="line">    p = Multi(p1-&gt;Next, p2-&gt;Next);</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;Next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d &quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);<span class="comment">//非最后一个节点,不换行打印,后接空格</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);<span class="comment">//最后一个节点,换行打印</span></span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加法运算</span></span><br><span class="line">    p = Plus(p1-&gt;Next, p2-&gt;Next);</span><br><span class="line">    <span class="keyword">if</span> (p) &#123;</span><br><span class="line">        <span class="keyword">while</span> (p) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;Next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d &quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p-&gt;coe, p-&gt;<span class="built_in">exp</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            p = p-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//防止出现p1,p2抵消为零的情况</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0 0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向链表中添加元素</span></span><br><span class="line"><span class="comment"> * @param L 需要添加的链表</span></span><br><span class="line"><span class="comment"> * @param coefficient 系数</span></span><br><span class="line"><span class="comment"> * @param exponent 指数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(List L, ElementType coe, ElementType <span class="built_in">exp</span>)</span> &#123;</span><br><span class="line">    List s, p;</span><br><span class="line">    p = L;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p-&gt;Next)<span class="comment">//找到最后一个节点</span></span><br><span class="line">        p = p-&gt;Next;</span><br><span class="line"></span><br><span class="line">    s = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    s-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    s-&gt;coe = coe;</span><br><span class="line">    s-&gt;<span class="built_in">exp</span> = <span class="built_in">exp</span>;</span><br><span class="line"></span><br><span class="line">    p-&gt;Next = s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个多项式相乘</span></span><br><span class="line"><span class="comment"> * @param p1 代表多项式1的链表</span></span><br><span class="line"><span class="comment"> * @param p2 代表多项式2的链表</span></span><br><span class="line"><span class="comment"> * @return p 相乘后生成的新链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List <span class="title function_">Multi</span><span class="params">(List p1, List p2)</span> &#123;</span><br><span class="line">    List p, p1a, p2a, s;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    p = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    p1a = p1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p1a) &#123;</span><br><span class="line">        p2a = p2;<span class="comment">//确保p1多项式中的每一项可以与p2多项式中的每一项分别相乘</span></span><br><span class="line">        s = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">        s-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (p2a) &#123;<span class="comment">//与p2多项式中的每一项分别相乘</span></span><br><span class="line">            Insert(s, p1a-&gt;coe * p2a-&gt;coe, p1a-&gt;<span class="built_in">exp</span> + p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">            p2a = p2a-&gt;Next;</span><br><span class="line">        &#125;</span><br><span class="line">        s = s-&gt;Next;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            p = p-&gt;Next;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * 如果是p1第一项与p2每一项相乘,那么先将链表p向后移一位,将头结点屏蔽</span></span><br><span class="line"><span class="comment">             * 因为默认初始化的P1头结点有默认的exp = 0,coe = 0,这两个数据是多余的</span></span><br><span class="line"><span class="comment">             * 如果不后移,那么头结点默认的数值0将会一直尾随整个乘法运算,导致最后的结果后面多两个0 0</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        p = Plus(p, s);<span class="comment">//相加,确保同类项合并</span></span><br><span class="line">        p1a = p1a-&gt;Next;</span><br><span class="line">        <span class="built_in">free</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较两多项式指数大小</span></span><br><span class="line"><span class="comment"> * @param p1 代表多项式1的链表</span></span><br><span class="line"><span class="comment"> * @param p2 代表多项式2的链表</span></span><br><span class="line"><span class="comment"> * @return 返回值为0时表示两指数相同,可以进行加法运算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">compare</span><span class="params">(List p1, List p2)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (p1-&gt;<span class="built_in">exp</span> &gt; p2-&gt;<span class="built_in">exp</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//p1指数大</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (p1-&gt;<span class="built_in">exp</span> &lt; p2-&gt;<span class="built_in">exp</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//p1指数小</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//指数相同</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个多项式相加</span></span><br><span class="line"><span class="comment"> * @param p1 代表多项式1的链表</span></span><br><span class="line"><span class="comment"> * @param p2 代表多项式2的链表</span></span><br><span class="line"><span class="comment"> * @return p 相加后生成的新链表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List <span class="title function_">Plus</span><span class="params">(List p1, List p2)</span> &#123;</span><br><span class="line">    List p, p1a, p2a;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line">    p = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> LNode));</span><br><span class="line">    p-&gt;Next = <span class="literal">NULL</span>;</span><br><span class="line">    p1a = p1;</span><br><span class="line">    p2a = p2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (p1a &amp;&amp; p2a) &#123;</span><br><span class="line">        temp = compare(p1a, p2a);</span><br><span class="line">        <span class="comment">//判断指数大小,同指数才可以运算</span></span><br><span class="line">        <span class="keyword">switch</span> (temp) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="comment">//当前p1a的指数大,将当前p1a的数据放入新链表</span></span><br><span class="line">                Insert(p, p1a-&gt;coe, p1a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">                p1a = p1a-&gt;Next;<span class="comment">//p1a向后移动,p2a不改变</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">                <span class="comment">//当前p2a的指数大,将当前p2a的数据放入新链表</span></span><br><span class="line">                Insert(p, p2a-&gt;coe, p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">                p2a = p2a-&gt;Next;<span class="comment">//p2a向后移动,p1a不改变</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="comment">//指数相同,进行运算</span></span><br><span class="line">                <span class="keyword">if</span> ((p1a-&gt;coe + p2a-&gt;coe) == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//系数为0,数据不放入新链表,直接将p1a和p2a后移</span></span><br><span class="line">                    p1a = p1a-&gt;Next;</span><br><span class="line">                    p2a = p2a-&gt;Next;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//数据放入新链表,p1a和p2a后移</span></span><br><span class="line">                    Insert(p, p1a-&gt;coe + p2a-&gt;coe, p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">                    p1a = p1a-&gt;Next;</span><br><span class="line">                    p2a = p2a-&gt;Next;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p1a) &#123;</span><br><span class="line">        <span class="comment">//p1a的项数多,将剩余项放入链表</span></span><br><span class="line">        Insert(p, p1a-&gt;coe, p1a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">        p1a = p1a-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (p2a) &#123;</span><br><span class="line">        <span class="comment">//p2a的项数多,将剩余项放入链表</span></span><br><span class="line">        Insert(p, p2a-&gt;coe, p2a-&gt;<span class="built_in">exp</span>);</span><br><span class="line">        p2a = p2a-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    p = p-&gt;Next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-2-符号配对"><a href="#7-2-符号配对" class="headerlink" title="7-2 符号配对"></a>7-2 符号配对</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Maxsize 105</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> *<span class="title">Stack</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">    <span class="type">char</span> *<span class="built_in">array</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Stack <span class="title function_">creat</span><span class="params">()</span>;<span class="comment">//创建空栈</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cheekEmpty</span><span class="params">(Stack s)</span>;<span class="comment">//判断栈是否为空</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">push</span><span class="params">(Stack s, <span class="type">char</span> x)</span>;<span class="comment">//添加新元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pop</span><span class="params">(Stack s)</span>;<span class="comment">//删除</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">top</span><span class="params">(Stack s)</span>;<span class="comment">//取出</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="type">char</span> str[<span class="number">200</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    Stack s = creat();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (gets(str)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">&#x27;.&#x27;</span> &amp;&amp; !str[<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span>( i=<span class="number">0</span>; str[i]; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">&#x27;(&#x27;</span>||str[i]==<span class="string">&#x27;[&#x27;</span>||str[i]==<span class="string">&#x27;&#123;&#x27;</span>||str[i]==<span class="string">&#x27;)&#x27;</span>||str[i]==<span class="string">&#x27;&#125;&#x27;</span> ||str[i]==<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">                a[j++]=str[i];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;/&#x27;</span>&amp;&amp;str[i+<span class="number">1</span>]==<span class="string">&#x27;*&#x27;</span>)&#123;</span><br><span class="line">                a[j++]=<span class="string">&#x27;&lt;&#x27;</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">&#x27;*&#x27;</span>&amp;&amp;str[i+<span class="number">1</span>]==<span class="string">&#x27;/&#x27;</span>)&#123;</span><br><span class="line">                a[j++]=<span class="string">&#x27;&gt;&#x27;</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="string">&#x27;(&#x27;</span> || a[i] == <span class="string">&#x27;[&#x27;</span> || a[i] == <span class="string">&#x27;&#123;&#x27;</span> || a[i] == <span class="string">&#x27;&lt;&#x27;</span>) &#123;</span><br><span class="line">            push(s, a[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;)&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;(&#x27;</span>) &#123;</span><br><span class="line">                pop(s);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;]&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;[&#x27;</span>) pop(s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;&#125;&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;&#123;&#x27;</span>) pop(s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">&#x27;&gt;&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s-&gt;top != <span class="number">-1</span> &amp;&amp; top(s) == <span class="string">&#x27;&lt;&#x27;</span>) pop(s);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ch = a[i];</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!flag &amp;&amp; cheekEmpty(s)) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!cheekEmpty(s)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (top(s) == <span class="string">&#x27;&lt;&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;/*-?\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c-?\n&quot;</span>, top(s));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;&gt;&#x27;</span>) <span class="built_in">printf</span>(<span class="string">&quot;?-*/\n&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;?-%c\n&quot;</span>, ch);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建新栈</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Stack <span class="title function_">creat</span><span class="params">()</span> &#123;</span><br><span class="line">    Stack s = (Stack) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> StackRecord));</span><br><span class="line">    s-&gt;top = <span class="number">-1</span>;</span><br><span class="line">    s-&gt;<span class="built_in">array</span> = (<span class="type">char</span> *) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">char</span>) * Maxsize);</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否为空栈</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">cheekEmpty</span><span class="params">(Stack s)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (s-&gt;top == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *添加元素</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> * @param x</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">push</span><span class="params">(Stack s, <span class="type">char</span> x)</span> &#123;</span><br><span class="line">    s-&gt;<span class="built_in">array</span>[++(s-&gt;top)] = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *删除</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">pop</span><span class="params">(Stack s)</span> &#123;</span><br><span class="line">    s-&gt;top--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *取出</span></span><br><span class="line"><span class="comment"> * @param s</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">top</span><span class="params">(Stack s)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> s-&gt;<span class="built_in">array</span>[s-&gt;top];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-3-银行业务队列简单模拟"><a href="#7-3-银行业务队列简单模拟" class="headerlink" title="7-3 银行业务队列简单模拟"></a>7-3 银行业务队列简单模拟</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAX = <span class="number">1010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> a[MAX], b[MAX], cnta, cntb;</span><br><span class="line">    cnta = cntb = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;temp);</span><br><span class="line">        <span class="keyword">if</span> (temp % <span class="number">2</span>) a[++cnta] = temp;</span><br><span class="line">        <span class="keyword">else</span> b[++cntb] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>, x = <span class="number">1</span>, y = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &lt;= cnta || y &lt;= cntb) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= cnta) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag++) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[x++]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= cnta) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag++) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[x++]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y &lt;= cntb) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag++) <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, b[y++]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="7-4-顺序存储的二叉树的最近的公共祖先问题"><a href="#7-4-顺序存储的二叉树的最近的公共祖先问题" class="headerlink" title="7-4 顺序存储的二叉树的最近的公共祖先问题"></a>7-4 顺序存储的二叉树的最近的公共祖先问题</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i, j, m;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">1000</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;i, &amp;j);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (a[i] == <span class="number">0</span>)<span class="comment">//查错</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ERROR: T[%d] is NULL\n&quot;</span>, i);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[j] == <span class="number">0</span>)<span class="comment">//查错</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ERROR: T[%d] is NULL\n&quot;</span>, j);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    m = find(i, j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, m, a[m]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查找公共祖先,二分查找</span></span><br><span class="line"><span class="comment"> * @param i </span></span><br><span class="line"><span class="comment"> * @param j </span></span><br><span class="line"><span class="comment"> * @return </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (i == j) &#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &gt; j) &#123;</span><br><span class="line">        <span class="keyword">return</span> find(i / <span class="number">2</span>, j);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">return</span> find(i, j / <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-5-修理牧场"><a href="#7-5-修理牧场" class="headerlink" title="7-5 修理牧场"></a>7-5 修理牧场</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">HuffmanTreeNode</span> &#123;</span></span><br><span class="line">    ElemType data;  <span class="comment">//哈夫曼树中节点的权值</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">HuffmanTreeNode</span> *<span class="title">left</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">HuffmanTreeNode</span> *<span class="title">right</span>;</span></span><br><span class="line">&#125; HuffmanTreeNode, *HuffmanTree;</span><br><span class="line"></span><br><span class="line">HuffmanTree <span class="title function_">createHuffmanTree</span><span class="params">(ElemType arr[], <span class="type">int</span> N)</span> &#123;</span><br><span class="line">    HuffmanTree treeArr[N];</span><br><span class="line">    HuffmanTree tree, pRoot = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;  <span class="comment">//初始化结构体指针数组,数组中每一个元素为一个结构体指针类型</span></span><br><span class="line">        tree = (HuffmanTree) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HuffmanTreeNode));</span><br><span class="line">        tree-&gt;data = arr[i];</span><br><span class="line">        tree-&gt;left = tree-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">        treeArr[i] = tree;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;  <span class="comment">//进行 n-1 次循环建立哈夫曼树</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//k1为当前数组中第一个非空树的索引，k2为第二个非空树的索引</span></span><br><span class="line">        <span class="type">int</span> k1 = <span class="number">-1</span>, k2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (treeArr[j] != <span class="literal">NULL</span> &amp;&amp; k1 == <span class="number">-1</span>) &#123;</span><br><span class="line">                k1 = j;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (treeArr[j] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                k2 = j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//循环遍历当前数组，找出最小值索引k1,和次小值索引k2</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = k2; j &lt; N; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (treeArr[j] != <span class="literal">NULL</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (treeArr[j]-&gt;data &lt; treeArr[k1]-&gt;data) &#123;<span class="comment">//最小</span></span><br><span class="line">                    k2 = k1;</span><br><span class="line">                    k1 = j;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (treeArr[j]-&gt;data &lt; treeArr[k2]-&gt;data) &#123;<span class="comment">//次小</span></span><br><span class="line">                    k2 = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//由最小权值树和次最小权值树建立一棵新树,pRoot指向树根结点</span></span><br><span class="line">        pRoot = (HuffmanTree) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HuffmanTreeNode));</span><br><span class="line">        pRoot-&gt;data = treeArr[k1]-&gt;data + treeArr[k2]-&gt;data;</span><br><span class="line">        pRoot-&gt;left = treeArr[k1];</span><br><span class="line">        pRoot-&gt;right = treeArr[k2];</span><br><span class="line"></span><br><span class="line">        treeArr[k1] = pRoot; <span class="comment">//将新生成的数加入到数组中k1的位置</span></span><br><span class="line">        treeArr[k2] = <span class="literal">NULL</span>; <span class="comment">//k2位置为空</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pRoot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ElemType <span class="title function_">calculateWeightLength</span><span class="params">(HuffmanTree ptrTree, <span class="type">int</span> len)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (ptrTree == <span class="literal">NULL</span>) &#123; <span class="comment">//空树返回0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ptrTree-&gt;left == <span class="literal">NULL</span> &amp;&amp; ptrTree-&gt;right == <span class="literal">NULL</span>) &#123; <span class="comment">//访问到叶子节点</span></span><br><span class="line">            <span class="keyword">return</span> ptrTree-&gt;data * len;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> calculateWeightLength(ptrTree-&gt;left, len + <span class="number">1</span>) + calculateWeightLength(ptrTree-&gt;right, len + <span class="number">1</span>); <span class="comment">//向下递归计算</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    ElemType arr[<span class="number">10001</span>];</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt; N)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arr[i++]);</span><br><span class="line"></span><br><span class="line">    HuffmanTree pRoot = createHuffmanTree(arr, N);  <span class="comment">//返回指向哈夫曼树根节点的指针</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, calculateWeightLength(pRoot, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-6-公路村村通"><a href="#7-6-公路村村通" class="headerlink" title="7-6 公路村村通"></a>7-6 公路村村通</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> fa[<span class="number">1005</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> l;</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    <span class="type">int</span> weight;</span><br><span class="line">&#125; Node;</span><br><span class="line"></span><br><span class="line">Node p[<span class="number">3005</span>];</span><br><span class="line"><span class="type">int</span> n, m, sum, cnt;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">cmp</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    Node *p1 = (Node *) a;</span><br><span class="line">    Node *p2 = (Node *) b;</span><br><span class="line">    <span class="keyword">return</span> p1-&gt;weight - p2-&gt;weight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Find</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (x == fa[x]) ? (x) : (fa[x] = Find(fa[x]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Union</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    fa[Find(x)] = Find(y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        fa[i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;p[i].l, &amp;p[i].r, &amp;p[i].weight);</span><br><span class="line">    qsort(p, m, <span class="keyword">sizeof</span>(Node), cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Find(p[i].l) != Find(p[i].r)) &#123;</span><br><span class="line">            sum += p[i].weight;</span><br><span class="line">            Union(p[i].l, p[i].r);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt == n - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt == n - <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-7-畅通工程之最低成本建设问题"><a href="#7-7-畅通工程之最低成本建设问题" class="headerlink" title="7-7 畅通工程之最低成本建设问题"></a>7-7 畅通工程之最低成本建设问题</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">path</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">&#125; p[<span class="number">3000</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">1001</span>], n, m;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) f[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">getf</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (f[k] == k) <span class="keyword">return</span> f[k];</span><br><span class="line">    <span class="keyword">return</span> f[k] = getf(f[k]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">cmp</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> ((<span class="keyword">struct</span> path *) a)-&gt;c - ((<span class="keyword">struct</span> path *) b)-&gt;c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;p[i].a, &amp;p[i].b, &amp;p[i].c);</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(p, m, <span class="keyword">sizeof</span>(p[<span class="number">0</span>]), cmp);</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (getf(p[i].a) != getf(p[i].b)) &#123;</span><br><span class="line">            ans += p[i].c;</span><br><span class="line">            c++;</span><br><span class="line">            f[getf(p[i].a)] = getf(p[i].b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (c &lt; n - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;Impossible\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-8-最短工期"><a href="#7-8-最短工期" class="headerlink" title="7-8 最短工期"></a>7-8 最短工期</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, ans;</span><br><span class="line"><span class="type">int</span> mp[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="type">int</span> l[<span class="number">100</span>], q[<span class="number">100</span>], t[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a, b, c, head = <span class="number">0</span>, tail = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(mp, <span class="number">-1</span>, <span class="keyword">sizeof</span>(mp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        mp[a][b] = c;</span><br><span class="line">        l[b]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!l[i]) &#123;</span><br><span class="line">            q[tail++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (head &lt; tail) &#123;</span><br><span class="line">        <span class="type">int</span> temp = q[head++];</span><br><span class="line">        <span class="keyword">if</span> (t[temp] &gt; ans) ans = t[temp];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mp[temp][i] != <span class="number">-1</span>) &#123;</span><br><span class="line">                l[i]--;</span><br><span class="line">                <span class="keyword">if</span> (!l[i]) q[tail++] = i;</span><br><span class="line">                <span class="keyword">if</span> (t[i] &lt; t[temp] + mp[temp][i]) &#123;</span><br><span class="line">                    t[i] = t[temp] + mp[temp][i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (tail &lt; n) <span class="built_in">printf</span>(<span class="string">&quot;Impossible&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-9-哈利·波特的考试"><a href="#7-9-哈利·波特的考试" class="headerlink" title="7-9 哈利·波特的考试"></a>7-9 哈利·波特的考试</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-9 哈利·波特的考试</span></span><br><span class="line"><span class="comment"> *  最短路径     迪杰斯特拉算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxInt 2147483647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> arcs[<span class="number">102</span>][<span class="number">102</span>];</span><br><span class="line">    <span class="type">int</span> vexnum, arcnum;</span><br><span class="line">&#125; MGraph;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> final[<span class="number">102</span>];<span class="comment">//final[w]=1表示求得顶点v0至vw的最短路径 </span></span><br><span class="line"><span class="type">int</span> D[<span class="number">102</span>];  <span class="comment">//记录v0到vi的当前最短路径长度</span></span><br><span class="line"><span class="type">int</span> P[<span class="number">102</span>]; <span class="comment">//记录v0到vi的当前最短路径vi的前驱</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i, u, j, m, v, min, w, k, a, b, c, min1 = <span class="number">999999</span>, max = <span class="number">-991111</span>, p = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Dijkstra</span><span class="params">(MGraph G, <span class="type">int</span> v0)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; G.vexnum; v++)    <span class="comment">//初始化数据</span></span><br><span class="line">    &#123;</span><br><span class="line">        final[v] = <span class="number">0</span>;            <span class="comment">//全部顶点初始化为未知最短路径状态</span></span><br><span class="line">        D[v] = G.arcs[v0][v];<span class="comment">// 将与v0点有连线的顶点加上权值</span></span><br><span class="line">        P[v] = <span class="number">-1</span>;                <span class="comment">//初始化路径数组P为-1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    D[v0] = <span class="number">0</span>;  <span class="comment">//v0至v0路径为0</span></span><br><span class="line">    final[v0] = <span class="number">1</span>;    <span class="comment">// v0至v0不需要求路径</span></span><br><span class="line">    <span class="comment">// 开始主循环，每次求得v0到某个v顶点的最短路径</span></span><br><span class="line">    <span class="keyword">for</span> (v = <span class="number">1</span>; v &lt; G.vexnum; v++) &#123;</span><br><span class="line">        min = maxInt;    <span class="comment">// 当前所知离v0顶点的最近距离</span></span><br><span class="line">        <span class="keyword">for</span> (w = <span class="number">0</span>; w &lt; G.vexnum; w++) <span class="comment">// 寻找离v0最近的顶点</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!final[w] &amp;&amp; D[w] &lt; min) &#123;</span><br><span class="line">                k = w;</span><br><span class="line">                min = D[w];    <span class="comment">// w顶点离v0顶点更近</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        final[k] = <span class="number">1</span>;    <span class="comment">// 将目前找到的最近的顶点置为1</span></span><br><span class="line">        <span class="keyword">for</span> (w = <span class="number">0</span>; w &lt; G.vexnum; w++) <span class="comment">// 修正当前最短路径及距离</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果经过v顶点的路径比现在这条路径的长度短的话</span></span><br><span class="line">            <span class="keyword">if</span> (!final[w] &amp;&amp; (min + G.arcs[k][w] &lt; D[w])) &#123; <span class="comment">// 说明找到了更短的路径，修改D[w]和P[w]</span></span><br><span class="line">                D[w] = min + G.arcs[k][w];  <span class="comment">// 修改当前路径长度</span></span><br><span class="line">                P[w] = k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    MGraph G;</span><br><span class="line">    <span class="built_in">memset</span>(final, <span class="number">0</span>, <span class="keyword">sizeof</span>(final));</span><br><span class="line">    <span class="built_in">memset</span>(D, <span class="number">0x3f3f3f3f</span>, <span class="keyword">sizeof</span>(D));</span><br><span class="line">    <span class="built_in">memset</span>(G.arcs, <span class="number">0x3f3f3f3f</span>, <span class="keyword">sizeof</span>(G.arcs));   <span class="comment">//邻接矩阵一定要初始化</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;G.vexnum, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">        G.arcs[a - <span class="number">1</span>][b - <span class="number">1</span>] = c;</span><br><span class="line">        G.arcs[b - <span class="number">1</span>][a - <span class="number">1</span>] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (u = <span class="number">0</span>; u &lt; G.vexnum; u++) &#123;</span><br><span class="line">        max = <span class="number">-9999999</span>;</span><br><span class="line">        Dijkstra(G, u);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; G.vexnum; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (D[j] &gt; max)</span><br><span class="line">                max = D[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (max &lt; min1) &#123;</span><br><span class="line">            min1 = max;</span><br><span class="line">            p = u + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (p == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, p, min1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="7-10-旅游规划"><a href="#7-10-旅游规划" class="headerlink" title="7-10 旅游规划"></a>7-10 旅游规划</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-10 旅游规划</span></span><br><span class="line"><span class="comment"> *  最短路径  弗洛伊德算法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 500</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Infinite 65534</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> N, M, S, D;<span class="comment">//城市的个数 高速公路的条数 出发地 目的地</span></span><br><span class="line"><span class="type">int</span> Dist[MAXN][MAXN], Cost[MAXN][MAXN];<span class="comment">//距离与花费矩阵</span></span><br><span class="line"><span class="type">int</span> dist[MAXN], cost[MAXN], visit[MAXN];<span class="comment">//最短距离与花费 标记数组</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Inicialization</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindTheWay</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FindMinWay</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;N, &amp;M, &amp;S, &amp;D);<span class="comment">//城市的个数 高速公路的条数 出发地 目的地</span></span><br><span class="line">    Inicialization();<span class="comment">//初始化</span></span><br><span class="line">    FindTheWay();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, dist[D], cost[D]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Inicialization</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; N; j++)</span><br><span class="line">            Dist[i][j] = Cost[i][j] = Infinite;<span class="comment">//矩阵初始化为无限值</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> v1, v2, d, c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;v1, &amp;v2, &amp;d, &amp;c);</span><br><span class="line">        Dist[v1][v2] = Dist[v2][v1] = d;<span class="comment">//输入距离路径</span></span><br><span class="line">        Cost[v1][v2] = Cost[v2][v1] = c;<span class="comment">//输入花费路径</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        dist[i] = cost[i] = Infinite;<span class="comment">//矩阵初始化为无限值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindTheWay</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    dist[S] = cost[S] = <span class="number">0</span>;<span class="comment">//出发地为0</span></span><br><span class="line">    visit[S] = <span class="number">1</span>;<span class="comment">//出发地访问标记</span></span><br><span class="line">    <span class="type">int</span> v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//记录出发地直达的路径</span></span><br><span class="line">        <span class="keyword">if</span> (!visit[i] &amp;&amp; Dist[S][i] &lt; Infinite) <span class="comment">//如果没访问 且有路径</span></span><br><span class="line">        &#123;</span><br><span class="line">            dist[i] = Dist[S][i];</span><br><span class="line">            cost[i] = Cost[S][i];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        v = FindMinWay();<span class="comment">//找出最短出发地直达且未访问的城市</span></span><br><span class="line">        <span class="keyword">if</span> (v == ERROR) <span class="keyword">break</span>;</span><br><span class="line">        visit[v] = <span class="number">1</span>;<span class="comment">//找出城市的访问标记</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//循环每个城市</span></span><br><span class="line">            <span class="keyword">if</span> (!visit[i] &amp;&amp; Dist[v][i] &lt; Infinite)<span class="comment">//如果未访问且有路径</span></span><br><span class="line">                <span class="keyword">if</span> ((dist[v] + Dist[v][i] &lt; dist[i]) ||</span><br><span class="line">                    (dist[v] + Dist[v][i] == dist[i] &amp;&amp; cost[v] + Cost[v][i] &lt; cost[i])) &#123;<span class="comment">//如果从先到该城市再到另一城市距离小于直接到另一城市</span></span><br><span class="line">                    <span class="comment">//或者从先到该城市再到另一城市距离等于直接到另一城市，且花费少</span></span><br><span class="line">                    dist[i] = dist[v] + Dist[v][i];<span class="comment">//更新最短路径</span></span><br><span class="line">                    cost[i] = cost[v] + Cost[v][i];</span><br><span class="line">                &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">FindMinWay</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> min = Infinite;</span><br><span class="line">    <span class="type">int</span> temp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)<span class="comment">//循环每个城市 找出最短的路径</span></span><br><span class="line">        <span class="keyword">if</span> (!visit[i] &amp;&amp; dist[i] &lt; min) &#123;</span><br><span class="line">            min = dist[i];</span><br><span class="line">            temp = i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (min == Infinite) <span class="keyword">return</span> ERROR;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-11-QQ帐户的申请与登陆"><a href="#7-11-QQ帐户的申请与登陆" class="headerlink" title="7-11 QQ帐户的申请与登陆"></a>7-11 QQ帐户的申请与登陆</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-11 QQ帐户的申请与登陆</span></span><br><span class="line"><span class="comment"> *  哈希表  分离链接法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*账号与密码最大长度的定义</span></span><br><span class="line"><span class="comment">它们的最大长度需要比题目所给的大一位</span></span><br><span class="line"><span class="comment">这是因为还需要一个位置来储存&#x27;\0&#x27;来判断字符串的结尾*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Password_Len 17</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Max_Account_Len 11</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxTableSize 1000000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*各种状态的定义</span></span><br><span class="line"><span class="comment">最好用正数表示成功的状态</span></span><br><span class="line"><span class="comment">用负数或0表示失败的状态</span></span><br><span class="line"><span class="comment">这样会让强迫症看了舒服一点*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_WrongPW   -2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_Exist     -1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ERROR_NOTExist  0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> New_OK          1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Login_OK        2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> AccountType[Max_Account_Len];<span class="comment">//账号类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> PasswordType[Max_Password_Len];<span class="comment">//密码类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> Index;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    New, Log</span><br><span class="line">&#125; Pattern;<span class="comment">//两种模式，新建账号与登入账号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    AccountType Account;</span><br><span class="line">    PasswordType Password;</span><br><span class="line">&#125; ElemType;<span class="comment">//数据类型的定义，每个对应一个用户，内含用户的账号和密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//链表指针的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">PtrToLNode</span>;</span></span><br><span class="line"><span class="comment">//链表结点的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span></span><br><span class="line">    PtrToLNode Next;</span><br><span class="line">    ElemType Data;</span><br><span class="line">&#125; LNode;</span><br><span class="line"><span class="keyword">typedef</span> PtrToLNode List;<span class="comment">//链表的定义</span></span><br><span class="line"><span class="keyword">typedef</span> PtrToLNode Position;<span class="comment">//哈希表中结点位置的定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//哈希表的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TblNode</span> *<span class="title">HashTable</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TblNode</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> TableSize;<span class="comment">//哈希表的大小</span></span><br><span class="line">    List Heads;<span class="comment">//储存各个列表头节点的数组</span></span><br><span class="line">&#125; TblNode;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">NextPrime</span><span class="params">(<span class="type">int</span> N)</span><span class="comment">//返回N的下一个素数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, P;</span><br><span class="line">    P = N % <span class="number">2</span> ? N + <span class="number">2</span> : N + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//P为N之后的第一个奇数</span></span><br><span class="line">    <span class="keyword">while</span> (P &lt; MaxTableSize) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = (<span class="type">int</span>) <span class="built_in">sqrt</span>(P); i &gt; <span class="number">2</span>; i--)<span class="comment">//因为只考虑奇数，所以i为2时就结束了</span></span><br><span class="line">            <span class="keyword">if</span> (P % i == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">break</span>;<span class="comment">//i为2说明P为素数</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            P += <span class="number">2</span>;<span class="comment">//i!=2说明P不是素数，则P指向下一个奇数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Hash</span><span class="params">(<span class="type">int</span> Key, <span class="type">int</span> TableSize)</span> &#123;<span class="comment">//返回Key值相对应的哈希值，即其在哈希表中的储存下标</span></span><br><span class="line">    <span class="keyword">return</span> Key % TableSize;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HashTable <span class="title function_">CreateTable</span><span class="params">(<span class="type">int</span> TableSize)</span> &#123;    <span class="comment">//构造空的哈希表</span></span><br><span class="line">    HashTable H;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    H = (HashTable) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(TblNode));</span><br><span class="line">    H-&gt;TableSize = NextPrime(TableSize);</span><br><span class="line">    H-&gt;Heads = (List) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode) * H-&gt;TableSize);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H-&gt;TableSize; i++) &#123;</span><br><span class="line">        H-&gt;Heads[i].Data.Account[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        H-&gt;Heads[i].Data.Password[<span class="number">0</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        H-&gt;Heads[i].Next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> H;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Position <span class="title function_">Find</span><span class="params">(HashTable H, ElemType Key)</span> &#123;</span><br><span class="line">    Position Pos;</span><br><span class="line">    Index p;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(Key.Account) &gt; <span class="number">5</span>) <span class="comment">//账号大于5位时取最后5位</span></span><br><span class="line">        p = Hash(atoi(Key.Account +</span><br><span class="line">                      <span class="built_in">strlen</span>(Key.Account) - <span class="number">5</span>), H-&gt;TableSize);</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//账号不大于5位则等于它本身</span></span><br><span class="line">        p = Hash(atoi(Key.Account), H-&gt;TableSize);</span><br><span class="line">    Pos = H-&gt;Heads[p].Next;</span><br><span class="line">    <span class="keyword">while</span> (Pos &amp;&amp; <span class="built_in">strcmp</span>(Key.Account, Pos-&gt;Data.Account))</span><br><span class="line">        Pos = Pos-&gt;Next;</span><br><span class="line">    <span class="keyword">return</span> Pos;<span class="comment">//Pos指向用户数据的位置，没有注册就返回NULL</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">NewOrLog</span><span class="params">(HashTable H, ElemType Key, Pattern P)</span> &#123;    <span class="comment">//返回状态参数</span></span><br><span class="line">    Position Pos, NewPos;</span><br><span class="line">    Index p;</span><br><span class="line">    Pos = Find(H, Key);</span><br><span class="line">    <span class="keyword">switch</span> (P) &#123;</span><br><span class="line">        <span class="keyword">case</span> Log:</span><br><span class="line">            <span class="keyword">if</span> (Pos == <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> ERROR_NOTExist;<span class="comment">//登陆时不存在账号</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Pos-&gt;Data.Password, Key.Password) ||</span><br><span class="line">                     (<span class="built_in">strlen</span>(Key.Password) &gt; <span class="number">16</span> || <span class="built_in">strlen</span>(Key.Password) &lt; <span class="number">6</span>))</span><br><span class="line">                <span class="keyword">return</span> ERROR_WrongPW; <span class="comment">//密码错误或格式错误</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> Login_OK;<span class="comment">//账号和密码均正确，可以登录</span></span><br><span class="line">        <span class="keyword">case</span> New:</span><br><span class="line">            <span class="keyword">if</span> (Pos != <span class="literal">NULL</span>)</span><br><span class="line">                <span class="keyword">return</span> ERROR_Exist; <span class="comment">//新建账号时发现已经存在这样的账号了</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                NewPos = (Position) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">                <span class="built_in">strcpy</span>(NewPos-&gt;Data.Account, Key.Account);</span><br><span class="line">                <span class="built_in">strcpy</span>(NewPos-&gt;Data.Password, Key.Password);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strlen</span>(Key.Account) &gt; <span class="number">5</span>)</span><br><span class="line">                    p = Hash(atoi(Key.Account +</span><br><span class="line">                                  <span class="built_in">strlen</span>(Key.Account) - <span class="number">5</span>), H-&gt;TableSize);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    p = Hash(atoi(Key.Account), H-&gt;TableSize);</span><br><span class="line">                NewPos-&gt;Next = H-&gt;Heads[p].Next;</span><br><span class="line">                H-&gt;Heads[p].Next = NewPos;</span><br><span class="line">                <span class="keyword">return</span> New_OK; <span class="comment">//插入新值并返回插入成功</span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DestroyTable</span><span class="params">(HashTable H)</span> &#123;    <span class="comment">//销毁哈希表</span></span><br><span class="line">    PtrToLNode p, q;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H-&gt;TableSize; i++) &#123;</span><br><span class="line">        q = H-&gt;Heads[i].Next;</span><br><span class="line">        <span class="keyword">while</span> (q) &#123;</span><br><span class="line">            p = q-&gt;Next;</span><br><span class="line">            <span class="built_in">free</span>(q);</span><br><span class="line">            q = p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(H);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="type">int</span> N, i;</span><br><span class="line">    ElemType Key;</span><br><span class="line">    <span class="type">char</span> Input;</span><br><span class="line">    Pattern P;</span><br><span class="line">    HashTable H;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line">    H = CreateTable(<span class="number">2</span> * N);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;\n%c %s %s&quot;</span>, &amp;Input, Key.Account, Key.Password);</span><br><span class="line">        P = (Input == <span class="string">&#x27;L&#x27;</span>) ? Log : New;</span><br><span class="line">        <span class="keyword">switch</span> (NewOrLog(H, Key, P)) &#123;<span class="comment">//最后根据不同返回值输出对应状态即可</span></span><br><span class="line">            <span class="keyword">case</span> ERROR_Exist:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR: Exist\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ERROR_NOTExist:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR: Not Exist\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ERROR_WrongPW:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ERROR: Wrong PW\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> Login_OK:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Login: OK\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> New_OK:</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;New: OK\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    DestroyTable(H);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-12-人以群分"><a href="#7-12-人以群分" class="headerlink" title="7-12 人以群分"></a>7-12 人以群分</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-12 人以群分</span></span><br><span class="line"><span class="comment"> *  排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">comfunc</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *elem1, <span class="type">const</span> <span class="type">void</span> *elem2)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_character</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, i;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100001</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    qsort(a, n, <span class="keyword">sizeof</span>(<span class="type">int</span>), comfunc);</span><br><span class="line">    sort_character(a, n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">comfunc</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *elem1, <span class="type">const</span> <span class="type">void</span> *elem2)</span> &#123;</span><br><span class="line">    <span class="type">int</span> *p1 = (<span class="type">int</span> *) elem1;</span><br><span class="line">    <span class="type">int</span> *p2 = (<span class="type">int</span> *) elem2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> *p1 - *p2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort_character</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">int</span> i, j, n1, n2, sum1, sum2, dif, dif1, dif2;</span><br><span class="line"></span><br><span class="line">    sum1 = sum2 = <span class="number">0</span>;</span><br><span class="line">    dif = dif1 = dif2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        n1 = n2 = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n1; i++)</span><br><span class="line">            sum1 += p[i];</span><br><span class="line">        <span class="keyword">for</span> (i = n1; i &lt; n; i++)</span><br><span class="line">            sum2 += p[i];</span><br><span class="line">        dif = <span class="built_in">abs</span>(sum2 - sum1);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        n1 = n2 = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n1; i++)</span><br><span class="line">            sum1 += p[i];</span><br><span class="line">        <span class="keyword">for</span> (i = n / <span class="number">2</span> + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            sum2 += p[i];</span><br><span class="line">        dif1 = <span class="built_in">abs</span>(sum1 + p[n1] - sum2);</span><br><span class="line">        dif2 = <span class="built_in">abs</span>(sum2 + p[n2] - sum1);</span><br><span class="line">        dif = (dif1 &gt; dif2) ? dif1 : dif2;</span><br><span class="line">        <span class="keyword">if</span> (dif1 &gt; dif2)</span><br><span class="line">            n1++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n2++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Outgoing #: %d\n&quot;</span>, n2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Introverted #: %d\n&quot;</span>, n1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Diff = %d\n&quot;</span>, dif);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-13-寻找大富翁"><a href="#7-13-寻找大富翁" class="headerlink" title="7-13 寻找大富翁"></a>7-13 寻找大富翁</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-13 寻找大富翁</span></span><br><span class="line"><span class="comment"> *  堆排序和选择排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>   <span class="comment">//堆排序；  注意:此算法中，下标从1开始</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max 1000010</span></span><br><span class="line"><span class="type">int</span> num[max];</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sift</span><span class="params">(<span class="type">int</span> *num, <span class="type">int</span> low, <span class="type">int</span> high)</span>  <span class="comment">//将下标为low位置上的点调到适当位置</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j, temp;</span><br><span class="line">    i = low;</span><br><span class="line">    j = <span class="number">2</span> * i;   <span class="comment">//num[j]是num[i]的左孩子结点；</span></span><br><span class="line">    temp = num[i];  <span class="comment">//待调整的结点</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= high) &#123;</span><br><span class="line">        <span class="keyword">if</span> (j &lt; high &amp;&amp; num[j] &lt; num[j + <span class="number">1</span>])   <span class="comment">//如果右孩子比较大，则把j指向右孩子，j变为2*i+1；</span></span><br><span class="line">            ++j;</span><br><span class="line">        <span class="keyword">if</span> (temp &lt; num[j]) &#123;</span><br><span class="line">            num[i] = num[j];    <span class="comment">//将num[j]调整到双亲结点的位置上；</span></span><br><span class="line">            i = j;   <span class="comment">//修改i和j的值，以便继续向下调整；</span></span><br><span class="line">            j = i * <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;     <span class="comment">//调整结束；</span></span><br><span class="line">    &#125;</span><br><span class="line">    num[i] = temp;   <span class="comment">//被调整的结点放入最终位置</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, m, i, temp, count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line">    <span class="keyword">if</span> (n &lt; m) m = n;   <span class="comment">//注意，有一个测试点是n小于m的情况，这时，只用排前n个;</span></span><br><span class="line">    <span class="keyword">for</span> (i = n / <span class="number">2</span>; i &gt;= <span class="number">1</span>; i--)  <span class="comment">//所有结点建立初始堆</span></span><br><span class="line">        sift(num, i, n);</span><br><span class="line">    <span class="keyword">for</span> (i = n; i &gt;= <span class="number">2</span>; i--)   <span class="comment">//进行n-1次循环，完成堆排序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*以下3句换出了根节点中的关键字，将其放入最终位置*/</span></span><br><span class="line">        temp = num[<span class="number">1</span>];</span><br><span class="line">        num[<span class="number">1</span>] = num[i];</span><br><span class="line">        num[i] = temp;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, num[i]);</span><br><span class="line">        <span class="keyword">if</span> (count == m) <span class="keyword">break</span>;  <span class="comment">//打印前m个；</span></span><br><span class="line">        sift(num, <span class="number">1</span>, i - <span class="number">1</span>);    <span class="comment">//减少了1个关键字的无序序列，继续调整。</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (m == n) <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, num[<span class="number">1</span>]);  <span class="comment">//当n&lt;m的特殊情况下，上面只打印了n~2，还有最后一个下标为1的没有打印，故再打印一个。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7-14-PAT排名汇总"><a href="#7-14-PAT排名汇总" class="headerlink" title="7-14 PAT排名汇总"></a>7-14 PAT排名汇总</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 7-14 PAT排名汇总</span></span><br><span class="line"><span class="comment"> *  快速排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> id[<span class="number">14</span>];                <span class="comment">//考号</span></span><br><span class="line">    <span class="type">int</span> score;                  <span class="comment">//分数</span></span><br><span class="line">    <span class="type">int</span> kc;                     <span class="comment">//考场</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">a</span>[30000];</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">bigger</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s1, <span class="type">const</span> <span class="type">char</span> *s2)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (s1[i] &gt; s2[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (s1[i] &lt; s2[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">qsort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l;</span><br><span class="line">    <span class="type">int</span> j = r;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">t</span> =</span> a[l];</span><br><span class="line">    <span class="keyword">while</span> (i != j) &#123;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; (a[j].score &lt; t.score || a[j].score == t.score &amp;&amp; bigger(a[j].id, t.id)))</span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; (a[i].score &gt; t.score || a[i].score == t.score &amp;&amp; bigger(t.id, a[i].id)))</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">stu</span> <span class="title">s</span> =</span> a[i];</span><br><span class="line">            a[i] = a[j];</span><br><span class="line">            a[j] = s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    a[l] = a[i];</span><br><span class="line">    a[i] = t;</span><br><span class="line"></span><br><span class="line">    qsort(l, i - <span class="number">1</span>);</span><br><span class="line">    qsort(i + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Copy</span><span class="params">(<span class="type">int</span> *b2, <span class="type">int</span> *b1, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        b2[i] = b1[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n, j, i, top = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; k; j++) &#123;</span><br><span class="line">            <span class="type">char</span> id[<span class="number">14</span>];</span><br><span class="line">            <span class="type">int</span> score;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, id, &amp;score);</span><br><span class="line">            a[top].score = score;</span><br><span class="line">            a[top].kc = i;</span><br><span class="line">            <span class="built_in">strcpy</span>(a[top].id, id);</span><br><span class="line">            top++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    qsort(<span class="number">0</span>, top - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> levall = <span class="number">1</span>, b1[n + <span class="number">1</span>], b2[n + <span class="number">1</span>], score = a[<span class="number">0</span>].score;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        b1[i] = <span class="number">1</span>, b2[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, top);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d\n&quot;</span>, a[<span class="number">0</span>].id, <span class="number">1</span>, a[<span class="number">0</span>].kc, <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> llevall = <span class="number">1</span>;            <span class="comment">//上一个总排名</span></span><br><span class="line">    levall = <span class="number">2</span>;                   <span class="comment">//总排名</span></span><br><span class="line"></span><br><span class="line">    Copy(b2, b1, n);</span><br><span class="line">    b1[a[<span class="number">0</span>].kc]++;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; top; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].score == a[i - <span class="number">1</span>].score) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d\n&quot;</span>, a[i].id, llevall, a[i].kc, b2[a[i].kc]);</span><br><span class="line">            levall++;</span><br><span class="line">            b1[a[i].kc]++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d\n&quot;</span>, a[i].id, levall, a[i].kc, b1[a[i].kc]);</span><br><span class="line">            llevall = levall;</span><br><span class="line">            levall++;</span><br><span class="line"></span><br><span class="line">            Copy(b2, b1, n);</span><br><span class="line">            b1[a[i].kc]++;                    <span class="comment">//考场的排名</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ZZULI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tex Live下载</title>
      <link href="/post/f00df655.html"/>
      <url>/post/f00df655.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><blockquote><p>镜像下载网址：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/CTAN/">CTAN | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p></blockquote><p><img src="https://s2.loli.net/2023/04/10/Fl8EvMWGS25b1d7.png" alt="image-20230407174031122"></p><blockquote><p>下载完成后，解压，打开，双击批处理文件进行安装</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/FThWR9M5mdKxaLN.png" alt="image-20230407174116660"></p><blockquote><p>切换镜像源</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/zrU3ZH9okqxdwJM.png" alt="image-20230407180752177"></p><blockquote><p>单击Advanced，进行设置</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/142uoWQ9sXNbGcz.png" alt="image-20230407174205691"></p><blockquote><p>修改安装路径</p></blockquote><img src="https://s2.loli.net/2023/04/10/U2gF7toGq1jaLWB.png" alt="image-20230407174344805" style="zoom: 67%;" /><blockquote><p>进入漫长的等待，等四千五百多个包安装完</p></blockquote><blockquote><p>等待…</p></blockquote><blockquote><p>等待…</p></blockquote><blockquote><p>After a long, long time</p></blockquote><blockquote><p>出现下面的界面代表安装完成</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/NHAfXaQ654hzUOd.png" alt="image-20230407202201931"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><blockquote><p>在cmd中依次输入latex -v , tex -v, xelatex -v, pdflatex -v，如果看见版本号即安装成功</p></blockquote><p><img src="https://s2.loli.net/2023/04/10/9PVl4X2vAtponQu.png" alt="image-20230407202354595"></p><blockquote><p>如果出现***不是内部或外部变量，则需要配置环境变量</p></blockquote><p>添加xxx\texlive\2023\bin\win32</p><blockquote><p>不过新版本应该默认勾选了添加环境变量</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anaconda卸载</title>
      <link href="/post/17e3fb48.html"/>
      <url>/post/17e3fb48.html</url>
      
        <content type="html"><![CDATA[<p>一、以管理员身份运行Anaconda Prompt</p><p>二、查看anaconda的环境信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><p>三、删除除base外的其他环境</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n your_env_name(虚拟环境名称) --<span class="built_in">all</span></span><br></pre></td></tr></table></figure><p>四、下载anaocnda-clean包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install -c anaconda anaconda-clean</span><br></pre></td></tr></table></figure><p>五、输入以下指令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anaconda-clean --yes</span><br></pre></td></tr></table></figure><p>执行这个指令会生成一个backup file，这个文件在之后可以删除掉</p><p>六、使用卸载程序卸载</p><p>运行在anaconda安装路径下的<code>Uninstall-Anaconda3.exe</code></p><p>七、直接删除剩余的文件夹</p><p>解决python的pip安装opencv非常慢的问题：<br>opencv-python文件比较大，用以下命令：<br>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> opencv-python</p><p>当然，安装其他包，可以用：<br>pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> xxxxxx<br>其中xxxxxx就是要安装的包</p><p>这里使用的清华大学的镜像包，速度比较快，相比于翻墙等其他方法，简单很多。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32CubeMX安装</title>
      <link href="/post/45675238.html"/>
      <url>/post/45675238.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、STM32CubeMX下载"><a href="#一、STM32CubeMX下载" class="headerlink" title="一、STM32CubeMX下载"></a>一、STM32CubeMX下载</h1><blockquote><p><strong>官网地址</strong>：<a href="https://www.st.com/zh/development-tools/stm32cubemx.html#get-software">STM32CubeMX - STM32Cube初始化代码生成器 - 意法半导体STMicroelectronics</a></p><p>官网下载需要注册账号</p><p>网盘链接（6.8）：</p><p>链接：<a href="https://pan.baidu.com/s/1kiSD3hMxjB7ds3zk093eug?pwd=yvpq">https://pan.baidu.com/s/1kiSD3hMxjB7ds3zk093eug?pwd=yvpq</a><br>提取码：yvpq</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/4hwRofItbnax7F8.png" alt="image-20230406132652808"></p><h1 id="二、JRE下载、安装"><a href="#二、JRE下载、安装" class="headerlink" title="二、JRE下载、安装"></a>二、JRE下载、安装</h1><p>这里STM32CubeMX使用需要JRE环境，不过现在JRE已经集成到JDK中了，不需要单独安装，所以这里直接下载JDK即可</p><blockquote><p>链接：<a href="https://pan.baidu.com/s/1IuYbyeED61E9qa8hRWcl1w?pwd=bq03">https://pan.baidu.com/s/1IuYbyeED61E9qa8hRWcl1w?pwd=bq03</a><br>提取码：bq03</p></blockquote><p>由于不需要编写Java程序，所以这里的安装一切默认【或者中间修改一下安装路径】，不需要配置环境变量</p><h1 id="三、CubeMX安装"><a href="#三、CubeMX安装" class="headerlink" title="三、CubeMX安装"></a>三、CubeMX安装</h1><blockquote><p>一切默认，中间只需要更换一下安装路径</p></blockquote><img src="https://s2.loli.net/2023/04/06/GNdM9BOaRjXwtWA.png" alt="image-20230406145741710" style="zoom: 67%;" /><img src="https://s2.loli.net/2023/04/06/Lw1ghqjMzbrO4sf.png" alt="image-20230406145804402" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/06/jrzgIWfkHuFU2Xh.png" alt="image-20230406145844132" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/06/sy3Lgwofe2RikMD.png" alt="image-20230406145942453" style="zoom:67%;" /><img src="https://s2.loli.net/2023/04/06/fxTiaqncDQVPJjk.png" alt="image-20230406150036442" style="zoom:67%;" /><h1 id="四、基本配置"><a href="#四、基本配置" class="headerlink" title="四、基本配置"></a>四、基本配置</h1><h2 id="1-更改存放芯片包的位置"><a href="#1-更改存放芯片包的位置" class="headerlink" title="1.更改存放芯片包的位置"></a>1.更改存放芯片包的位置</h2><blockquote><p>打开软件，点击【Help】-&gt;【Updater Settings】</p></blockquote><img src="https://s2.loli.net/2023/04/06/RIuUYVjgeptrviN.png" alt="image-20230406150503036" style="zoom: 50%;" /><img src="https://s2.loli.net/2023/04/06/lL7hXCNosdqD1Fg.png" alt="image-20230406150804885" style="zoom:67%;" /><h2 id="2-安装芯片包"><a href="#2-安装芯片包" class="headerlink" title="2.安装芯片包"></a>2.安装芯片包</h2><blockquote><p>点击【Help】-&gt;【Manage embedded software packages】</p></blockquote><img src="https://s2.loli.net/2023/04/06/CwSWY94mx1atybs.png" alt="image-20230406150916064" style="zoom:60%;" /><blockquote><p>选择自己的开发版型号，进行安装</p></blockquote><img src="https://s2.loli.net/2023/04/06/npWAGjM5Kbt3PCu.png" alt="image-20230406151059393" style="zoom:67%;" /><blockquote><p>等待安装</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/AhdQ4okECMbOIxt.png" alt="image-20230406151113614"></p><blockquote><p>安装完成后，芯片前面会变绿</p></blockquote><img src="https://s2.loli.net/2023/04/06/zNfY5XCJ9Avohy8.png" alt="image-20230406151210065" style="zoom: 67%;" /><h1 id="五、测试"><a href="#五、测试" class="headerlink" title="五、测试"></a>五、测试</h1><h2 id="1、基本配置"><a href="#1、基本配置" class="headerlink" title="1、基本配置"></a>1、基本配置</h2><blockquote><p>新建项目,【file】-&gt;【new project】</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/YUNJPEZLosCSmzi.png" alt="image-20230406151422379"></p><blockquote><p>选择芯片</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/oC839fHbpZKmNTI.png" alt="image-20230406151642740"></p><blockquote><p>芯片配置：RCC、SYS、GPIO、时钟</p></blockquote><blockquote><p><strong>RCC:</strong></p></blockquote><img src="https://s2.loli.net/2023/04/06/ovX4H3nA2SGZw5s.png" alt="image-20230406152148371" style="zoom:67%;" /><blockquote><p><strong>SYS:</strong></p></blockquote><img src="https://s2.loli.net/2023/04/06/fXDQaVmRKr8cYjv.png" alt="image-20230406152244643" style="zoom:67%;" /><blockquote><p><strong>GPIO:</strong></p></blockquote><p>在右侧芯片图中点击PA2引脚，并设置为Output</p><p><img src="https://s2.loli.net/2023/04/06/5b1z7j6wU2tyofB.png" alt="image-20230406152417178"></p><p>在左侧进行引脚具体参数配置</p><img src="https://s2.loli.net/2023/04/06/lykciDfhsHpYS6Z.png" alt="image-20230406152616933" style="zoom:67%;" /><blockquote><p>时钟</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/OtTQj3KUP9o6EzB.png" alt="image-20230406152831324"></p><h2 id="2-文件生成"><a href="#2-文件生成" class="headerlink" title="2.文件生成"></a>2.文件生成</h2><blockquote><p>选择文件路径，选择【MDK-ARM】，版本为【V5】</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/sW6ei9dcBrQmUja.png" alt="image-20230406153201270"></p><blockquote><p>设置生成文件</p></blockquote><p><img src="https://s2.loli.net/2023/04/06/JcBKS9u6jyYiap1.png" alt="image-20230406153548772"></p><img src="https://s2.loli.net/2023/04/06/g75HAXWpY6KFzfu.png" alt="image-20230406153644277" style="zoom:50%;" /><h2 id="3-最终生成文件"><a href="#3-最终生成文件" class="headerlink" title="3.最终生成文件"></a>3.最终生成文件</h2><p><img src="https://s2.loli.net/2023/04/06/Pq1i3lLjpzanIAc.png" alt="image-20230406153734704"></p><h2 id="4-打开文件，编译测试"><a href="#4-打开文件，编译测试" class="headerlink" title="4.打开文件，编译测试"></a>4.打开文件，编译测试</h2><p><img src="https://s2.loli.net/2023/04/06/2NBtnOk31SCXlob.png" alt="image-20230406153846661"></p><blockquote><p>打开工程后，找到main函数，在while循环中添加下列代码</p></blockquote><img src="https://s2.loli.net/2023/04/06/qV43D7LsiRF5Aj1.png" alt="image-20230406165320245" style="zoom:67%;" /><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HAL_GPIO_TogglePin(LED1_GPIO_Port,LED1_Pin);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><blockquote><p>烧录下载程序，LED灯闪烁</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯备赛题解（小蜜蜂）（二）</title>
      <link href="/post/8c52194e.html"/>
      <url>/post/8c52194e.html</url>
      
        <content type="html"><![CDATA[<h1 id="必备基础技能训练15-项"><a href="#必备基础技能训练15-项" class="headerlink" title="必备基础技能训练15 项"></a>必备基础技能训练15 项</h1><h2 id="【基础08】外部中断的基本操作"><a href="#【基础08】外部中断的基本操作" class="headerlink" title="【基础08】外部中断的基本操作"></a>【基础08】外部中断的基本操作</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到2～3 引脚，使S4 和S5 按键一端接地，S4 按键的另一端接到单片机的P32&#x2F;INT0 引脚，S5 按键的另一端接到单片机的P33&#x2F;INT1 引脚。</p><p>2、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>3、控制L1 指示灯循环闪烁。</p><p>4、将P32&#x2F;INT0 引脚定义成外部中断，下降沿触发，使能相关中断控制位。即按下S5按键就会产生一个外部中断触发信号，进入外部中断服务函数。</p><p>5、在外部中断服务函数中，点亮L8 指示灯，延时片刻后，熄灭。</p></blockquote><p><img src="https://s2.loli.net/2023/03/31/mGjzhYtIBO1PM9N.png" alt="image-20230328225146398"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit L1 = P0^<span class="number">0</span>;</span><br><span class="line">sbit L2 = P0^<span class="number">1</span>;</span><br><span class="line">sbit L3 = P0^<span class="number">2</span>;</span><br><span class="line">sbit L4 = P0^<span class="number">3</span>;</span><br><span class="line">sbit L5 = P0^<span class="number">4</span>;</span><br><span class="line">sbit L6 = P0^<span class="number">5</span>;</span><br><span class="line">sbit L7 = P0^<span class="number">6</span>;</span><br><span class="line">sbit L8 = P0^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;     <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InterruptInit</span><span class="params">(<span class="type">void</span>)</span>;       <span class="comment">// 外部中断初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 08外部中断的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">4</span>);    <span class="comment">// 初始化74HC138</span></span><br><span class="line">    InterruptInit(); <span class="comment">// 初始化外部中断</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// LED1循环闪烁</span></span><br><span class="line">        L1 = <span class="number">0</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        L1 = <span class="number">1</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InterruptInit</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 外部中断初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    IT0 = <span class="number">1</span>; <span class="comment">// 设置外部中断0为下降沿触发</span></span><br><span class="line">    EX0 = <span class="number">1</span>; <span class="comment">// 开启外部中断0</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开启总中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Interrupt0</span><span class="params">(<span class="type">void</span>)</span> interrupt 0 <span class="comment">// 外部中断0服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    L8 = <span class="number">0</span>;</span><br><span class="line">    Delay(<span class="number">2000</span>);</span><br><span class="line">    L8 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础09】定时器实现秒闪功能"><a href="#【基础09】定时器实现秒闪功能" class="headerlink" title="【基础09】定时器实现秒闪功能"></a>【基础09】定时器实现秒闪功能</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、利用定时&#x2F;计数器T0 的模式1 实现50ms 的间隔定时。</p><p>3、在50ms 间隔定时的基础上，每隔1 秒L1 指示灯闪烁一次，即L1 指示灯循环点亮<br>0.5 秒，熄灭0.5 秒。</p><p>4、每隔10 秒L8 指示灯闪烁1 次，即L1 指示灯循环点亮5 秒，熄灭5 秒。</p></blockquote><blockquote><p>通过STC-ISP生成中断初始化函数</p><p>再在其中开启中断：ET0、EA、PT0</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;REG51.H&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit L1 = P0^<span class="number">0</span>;</span><br><span class="line">sbit L8 = P0^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span>;         <span class="comment">// 定时器0初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">4</span>);  <span class="comment">// 初始化74HC138</span></span><br><span class="line">    Timer0_Init(); <span class="comment">// 初始化定时器0</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 50毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TMOD |= <span class="number">0x01</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;      <span class="comment">// 清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">1</span>;      <span class="comment">// 定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">    ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Routine</span><span class="params">()</span> interrupt 1<span class="comment">// 定时器0中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">    i++;</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">10</span> == <span class="number">0</span>) <span class="comment">// 500ms</span></span><br><span class="line">    &#123;</span><br><span class="line">        L1 = ~L1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">100</span>) <span class="comment">// 5s</span></span><br><span class="line">    &#123;</span><br><span class="line">        i  = <span class="number">0</span>;</span><br><span class="line">        L8 = ~L8;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础10】定时器实现秒表功能"><a href="#【基础10】定时器实现秒表功能" class="headerlink" title="【基础10】定时器实现秒表功能"></a>【基础10】定时器实现秒表功能</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，利用定时器T0、数码管和2 个独立按键，设计并实现一个秒表，具有启动、暂停和清零功能。</p><p>1、秒表的显示格式：分-秒-0.05 秒（即50ms）</p><ul><li>如8 分26 秒900 毫秒，显示为：08-26-18</li></ul><p>2、独立按键S4 定义为：启动&#x2F;暂停，即第1 次按下启动秒表，再次按下暂停秒表。</p><p>3、独立按键S5 定义为：清零。</p><p>4、按键均为按下有效。</p></blockquote><blockquote><p>注意一下临界条件判断</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3^<span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3^<span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line">sbit Key3 = P3^<span class="number">2</span>; <span class="comment">// 按键3</span></span><br><span class="line">sbit Key4 = P3^<span class="number">3</span>; <span class="comment">// 按键4</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>, <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span>;                                        <span class="comment">// LED显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span>;                                <span class="comment">// 定时器0初始化</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> min = <span class="number">0</span>, sec = <span class="number">0</span>, ssec = <span class="number">0</span>; <span class="comment">// 分，秒，毫秒</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag1 = <span class="number">0</span>, flag2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 10定时器实现秒表功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    Timer0_Init();</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);<span class="keyword">while</span> (Key1 == <span class="number">0</span>);Delay(<span class="number">20</span>);<span class="comment">// 去抖</span></span><br><span class="line"></span><br><span class="line">            flag1 = !flag1;<span class="comment">// 按下一次开始，再按一次暂停</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Key2 == <span class="number">0</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);<span class="keyword">while</span> (Key2 == <span class="number">0</span>);Delay(<span class="number">20</span>);<span class="comment">// 去抖</span></span><br><span class="line"></span><br><span class="line">            flag2 = !flag2;</span><br><span class="line">        &#125;</span><br><span class="line">        Display();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">    <span class="comment">// 消影</span></span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    P0 = <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span> <span class="comment">// LED显示</span></span><br><span class="line">&#123;</span><br><span class="line">    LED_Shu(<span class="number">0</span>, min / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">1</span>, min % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">2</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">3</span>, sec / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">4</span>, sec % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">5</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">6</span>, ssec / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">7</span>, ssec % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 50毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TMOD |= <span class="number">0x01</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;      <span class="comment">// 清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">1</span>;      <span class="comment">// 定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">    ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Routine</span><span class="params">()</span> interrupt 1 <span class="comment">// 定时器0中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag1 == <span class="number">1</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">        ssec++;</span><br><span class="line">        <span class="keyword">if</span> (ssec == <span class="number">20</span>) &#123;</span><br><span class="line">            ssec = <span class="number">0</span>;</span><br><span class="line">            sec++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sec &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            sec = <span class="number">0</span>;</span><br><span class="line">            min++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (min &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">            min = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag2 == <span class="number">1</span>) &#123;</span><br><span class="line">        min = <span class="number">0</span>, sec = <span class="number">0</span>, ssec = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础11】利用PWM-控制灯光亮度"><a href="#【基础11】利用PWM-控制灯光亮度" class="headerlink" title="【基础11】利用PWM 控制灯光亮度"></a>【基础11】利用PWM 控制灯光亮度</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，利用PWM 脉宽信号实现独立按键S7 对L1 指示灯亮度变化的控制：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、PWM 脉宽信号的频率为100Hz。</p><p>3、L1 指示灯有4 种亮度，分别是：完全熄灭、10%的亮度、50%的亮度和90%的亮度。</p><p>4、按下S7 按键，循环切换L1 指示灯的四种亮度模式，如下图所示：</p><p><img src="https://s2.loli.net/2023/03/28/CoixpVcvUKyP8bt.png" alt="image-20230328133736650"></p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;REG51.H&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3^<span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit L1   = P0^<span class="number">0</span>; <span class="comment">// LED1</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span>;     <span class="comment">// 定时器0初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">()</span>;           <span class="comment">// 74HC138初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>; <span class="comment">// 延迟函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> PWM_flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag     = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init();</span><br><span class="line">    Timer0_Init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);<span class="keyword">while</span> (Key1 == <span class="number">0</span>);Delay(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">                EA = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">                PWM_flag = <span class="number">10</span>;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">                PWM_flag = <span class="number">50</span>;</span><br><span class="line">                flag = <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">2</span>) &#123;</span><br><span class="line">                PWM_flag = <span class="number">90</span>;</span><br><span class="line">                flag = <span class="number">3</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (flag == <span class="number">3</span>) &#123;</span><br><span class="line">                PWM_flag = <span class="number">0</span>;</span><br><span class="line">                EA = <span class="number">0</span>; <span class="comment">// 开总中断</span></span><br><span class="line">                L1 = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 100微秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">    TMOD &amp;= <span class="number">0xF0</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TMOD |= <span class="number">0x01</span>; <span class="comment">// 设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>;   <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TF0 = <span class="number">0</span>;      <span class="comment">// 清除TF0标志</span></span><br><span class="line">    TR0 = <span class="number">1</span>;      <span class="comment">// 定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">    ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">()</span> <span class="comment">// 74HC138初始化函数</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line"></span><br><span class="line">    HC138_A = <span class="number">0</span>;</span><br><span class="line">    HC138_B = <span class="number">0</span>;</span><br><span class="line">    HC138_C = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer0_Routine</span><span class="params">()</span> interrupt 1 <span class="comment">// 定时器0中断服务程序</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> count;</span><br><span class="line"></span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">    count++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count == PWM_flag) &#123;</span><br><span class="line">        L1 = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (count == <span class="number">100</span>) &#123;</span><br><span class="line">        L1 = <span class="number">0</span>;</span><br><span class="line">        count = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础12】串行接口的基本操作"><a href="#【基础12】串行接口的基本操作" class="headerlink" title="【基础12】串行接口的基本操作"></a>【基础12】串行接口的基本操作</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、初始化串口为模式1，即8 位UART 模式，波特率9600，允许接收。</p><p>2、数据发送采用查询方式，数据接收采用中断方式。</p><p>3、系统上电初始化之后，单片机向上位机发送两个字节：0x5a 和0xa5（串口助手以十六进制HEX 发送和显示）。</p><p>4、串口每成功接收到一个字节后，在该字节基础上加1，然后通过串口发送回上位机。</p><p>5、注意89C52 单片机和IAP15F2K61S2 单片机串口应用的差别，使用9600 波特率时，晶振时钟选择11.0592MHz。</p></blockquote><p><img src="https://s2.loli.net/2023/03/31/pTz1NEZrkhdSOPj.png" alt="image-20230331223135943"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>; <span class="comment">// IAP15F2K61S新增配置</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Date;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span>;                  <span class="comment">// 串口初始化函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Send_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span>; <span class="comment">// 发送数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 12串行接口的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    UART_Init();</span><br><span class="line">    Send_Data(<span class="number">0X5A</span>);</span><br><span class="line">    Send_Data(<span class="number">0XA5</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">()</span> <span class="comment">// 串口初始化函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// STC-ISP 波特率设置模块</span></span><br><span class="line">    <span class="comment">//  11.0592MHz 9600bps 串口1 8位数据 定时器1（8位自动重载） 12T</span></span><br><span class="line"></span><br><span class="line">    TMOD &amp;= <span class="number">0x0F</span>; <span class="comment">// 清除定时器1模式位</span></span><br><span class="line">    TMOD |= <span class="number">0x20</span>; <span class="comment">// 设定定时器1为8位自动重装方式</span></span><br><span class="line">    TL1 = <span class="number">0xFD</span>;   <span class="comment">// 设定定时初值</span></span><br><span class="line">    TH1 = <span class="number">0xFD</span>;   <span class="comment">// 设定定时器重装值</span></span><br><span class="line">    ET1 = <span class="number">0</span>;      <span class="comment">// 禁止定时器1中断</span></span><br><span class="line">    TR1 = <span class="number">1</span>;      <span class="comment">// 启动定时器1</span></span><br><span class="line">    EA  = <span class="number">1</span>;      <span class="comment">// 开总中断</span></span><br><span class="line">    PT1 = <span class="number">0</span>;      <span class="comment">// 定时器1为低优先级中断</span></span><br><span class="line">    ES  = <span class="number">1</span>;      <span class="comment">// 串口中断允许</span></span><br><span class="line"></span><br><span class="line">    SCON = <span class="number">0x50</span>; <span class="comment">// 8位数据,可变波特率</span></span><br><span class="line"></span><br><span class="line">    AUXR = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Routine</span><span class="params">(<span class="type">void</span>)</span> interrupt 4 <span class="comment">// 串口中断函数，接受数据</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (RI == <span class="number">1</span>) &#123;</span><br><span class="line">        Date = SBUF;</span><br><span class="line">        Send_Data(Date + <span class="number">1</span>);</span><br><span class="line">        RI = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Send_Data</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span> <span class="comment">// 发送数据</span></span><br><span class="line">&#123;</span><br><span class="line">    SBUF = dat;</span><br><span class="line">    <span class="keyword">while</span> (TI == <span class="number">0</span>);</span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础13】串行接口的进阶应用"><a href="#【基础13】串行接口的进阶应用" class="headerlink" title="【基础13】串行接口的进阶应用"></a>【基础13】串行接口的进阶应用</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、初始化串口为模式1，即8 位UART 模式，波特率9600，允许接收。</p><p>2、数据发送采用查询方式，数据接收采用中断方式。</p><p>3、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯，通过串口向上位机发送字符串：“Welcome to XMF system！”，回车换行。</p><p>4、上位机通过串口发送单字节命令，控制单片机的8 个LED 灯开关，单片机响应正确的控制命令后，完成相应的灯光操作。</p><p>5、上位机通过串口发送单字节命令，读取单片机运行信息，单片机响应正确的读取命令后，向上位机返回指定的信息。</p><p>6、上位机与单片机的通信规约如下表：</p><p><img src="https://s2.loli.net/2023/03/28/LjcKZkXGp8vYFma.png" alt="image-20230328133857154"></p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>; <span class="comment">// IAP15F2K61S新增配置</span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span>;                   <span class="comment">// 初始化串口</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span>;  <span class="comment">// 串口发送一个字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentDate</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *str)</span>; <span class="comment">// 串口发送字符串</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138_Init</span><span class="params">(<span class="type">void</span>)</span>;                  <span class="comment">// 初始化74HC138</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Data = <span class="number">0x00</span>; <span class="comment">// 接收到的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 13串行接口的进阶应用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    UART_Init();  <span class="comment">// 初始化串口</span></span><br><span class="line">    HC138_Init(); <span class="comment">// 初始化74HC138</span></span><br><span class="line">    UART_SentDate(<span class="string">&quot;Welcome to XMF system!\r\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Data != <span class="number">0x00</span>) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (Data &amp; <span class="number">0xf0</span>) &#123;</span><br><span class="line">                <span class="comment">// 模式判断</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0xa0</span>: <span class="comment">// 控制L1~L4灯</span></span><br><span class="line">                    P0 = <span class="number">0xff</span>;</span><br><span class="line">                    P0 = P0 &amp; (~Data | <span class="number">0xf0</span>);</span><br><span class="line">                    Data = <span class="number">0x00</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0xb0</span>: <span class="comment">// 控制L5~L8灯</span></span><br><span class="line">                    P0 = <span class="number">0xff</span>;</span><br><span class="line">                    P0 = P0 &amp; ((~Data &lt;&lt; <span class="number">4</span>) | <span class="number">0x0f</span>);</span><br><span class="line">                    Data = <span class="number">0x00</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0xc0</span>: <span class="comment">// 返回状态</span></span><br><span class="line">                    UART_SentDate(<span class="string">&quot;The System is Running...\r\n&quot;</span>);</span><br><span class="line">                    Data = <span class="number">0x00</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 初始化串口</span></span><br><span class="line">&#123;</span><br><span class="line">    PCON &amp;= <span class="number">0x7F</span>; <span class="comment">// 波特率不倍速</span></span><br><span class="line">    SCON = <span class="number">0x50</span>;  <span class="comment">// 8位数据,可变波特率</span></span><br><span class="line">    TMOD &amp;= <span class="number">0x0F</span>; <span class="comment">// 清除定时器1模式位</span></span><br><span class="line">    TMOD |= <span class="number">0x20</span>; <span class="comment">// 设定定时器1为8位自动重装方式</span></span><br><span class="line"></span><br><span class="line">    TL1 = <span class="number">0xFD</span>; <span class="comment">// 设定定时初值</span></span><br><span class="line">    TH1 = <span class="number">0xFD</span>; <span class="comment">// 设定定时器重装值</span></span><br><span class="line">    ET1 = <span class="number">0</span>;    <span class="comment">// 禁止定时器1中断</span></span><br><span class="line">    TR1 = <span class="number">1</span>;    <span class="comment">// 启动定时器1</span></span><br><span class="line">    EA  = <span class="number">1</span>;    <span class="comment">// 使能总中断</span></span><br><span class="line">    PT1 = <span class="number">0</span>;    <span class="comment">// 定时器1为低优先级中断</span></span><br><span class="line">    ES  = <span class="number">1</span>;    <span class="comment">// 使能串口中断</span></span><br><span class="line"></span><br><span class="line">    AUXR = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Routine</span><span class="params">(<span class="type">void</span>)</span> interrupt 4 <span class="comment">// 串口中断函数，接受数据</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (RI == <span class="number">1</span>) &#123;</span><br><span class="line">        Data = SBUF; <span class="comment">// 读取数据</span></span><br><span class="line">        RI   = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span> <span class="comment">// 串口发送一个字节</span></span><br><span class="line">&#123;</span><br><span class="line">    SBUF = dat;</span><br><span class="line">    <span class="keyword">while</span> (!TI);</span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SentDate</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> *str)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        UART_SentByte(*str++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">    HC138_B = <span class="number">0</span>;</span><br><span class="line">    HC138_A = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="【基础14】存储器映射扩展技术应用"><a href="#【基础14】存储器映射扩展技术应用" class="headerlink" title="【基础14】存储器映射扩展技术应用"></a>【基础14】存储器映射扩展技术应用</h2><blockquote><p>新建工程，以MM 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、循环实现以下功能：</p><ul><li>首先，点亮指示灯低4 位，关闭高4 位，延时片刻；</li><li>接着，点亮指示灯的高4 位，关闭低4 位，延时片刻；</li><li>然后，关闭所有指示灯。</li><li>接着，依次逐个点亮数码管的所有段码，每次只点亮一个数码管。</li></ul><p>3、外部扩展资源的地址映射关系：</p><ul><li>LED 指示灯—- 0x8000；</li><li>蜂鸣器与继电器—-0xa000；</li><li>数码管位选—-0xc000；</li><li>数码管段码—-0xe000</li></ul><p>4、关于CT107D 存储器映射扩展MM 编程模式的设计提示：CT107D 平台的J13 要将1-2 脚短接，选择MM 模式。<br>程序中引入头文件“absacc.h”，通过XBYTE 关键字来直接操作扩展资源。</p><p>存储器映射扩展方式要占用单片机的P3.6 引脚。</p></blockquote><p><strong>IO扩展：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;        <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC573</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> i)</span>; <span class="comment">// 选择HC573</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 14存储器映射扩展技术应用(IO扩展)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        Select_HC573(<span class="number">4</span>);</span><br><span class="line">        P0 = <span class="number">0xf0</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0x0f</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            Select_HC573(<span class="number">6</span>);</span><br><span class="line">            P0 = <span class="number">0x01</span> &lt;&lt; i;</span><br><span class="line">            Select_HC573(<span class="number">7</span>);</span><br><span class="line">            P0 = <span class="number">0x00</span>;</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        P0 = <span class="number">0xff</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC573</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> i)</span> <span class="comment">// 选择HC573</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">switch</span> (i) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0x80</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0xa0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0xc0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            P2 = (P2 &amp; <span class="number">0X1f</span>) | <span class="number">0xe0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><hr><p><strong>存储器扩展：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;reg51.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;absacc.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>; <span class="comment">// 延迟函数</span></span><br><span class="line"></span><br><span class="line">voidmain(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xf0</span>;</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xf0</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0x0f</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        XBYTE[<span class="number">0x8000</span>] = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            XBYTE[<span class="number">0xc000</span>] = <span class="number">0x01</span> &lt;&lt; i;</span><br><span class="line">            XBYTE[<span class="number">0xe000</span>] = <span class="number">0x00</span>;</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        XBYTE[<span class="number">0xe000</span>] = <span class="number">0xff</span>;</span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础15】工厂灯光控制系统"><a href="#【基础15】工厂灯光控制系统" class="headerlink" title="【基础15】工厂灯光控制系统"></a>【基础15】工厂灯光控制系统</h2><blockquote><p>新建工程，分别以I&#x2F;O 模式和MM 模式编写代码，在CT107D 单片机综合训练平台上，实现灯光的本地操作和远程控制，并通过串口远程读取系统的运行时间，模拟实现工厂灯光控制系统。具体功能要求如下：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、首先检测LED 指示灯，从L1 到L8 依次逐个点亮，再依次逐个熄灭；然后检测数码管，从左到右依次点亮数码管的所有段码，再依次从左到右熄灭。</p><p>3、系统从上电开始显示系统运行时间，从00 时00 分00 秒开始，显示格式：</p><p><img src="https://s2.loli.net/2023/03/28/3xan1A7u2YTHRvV.png" alt="image-20230328134034643"></p><p>4、8 个LED 指示灯分为2 组：L1、L2、L3 和L4 为远程控制组，L7 和L8 为本地控制组。远程控制组的指LED 示灯由上位机通过串口发送命令控制开关，本地控制组的LED 指示灯由独立按键控制开关。按键松开有效，S5 按键控制L7 指示灯，S4 按键控制L8 指示灯。</p><p>5、串口工作在模式1，即8 位UART 模式，波特率为9600（使用9600 波特率时，晶振时钟选择11.0592MHz。如果是其他频率的系统时钟，需要降低波特率，可选择用2400，否则串口通信可能出现乱码，无法正常收发数据）。</p><p>6、上位机通过串口控制下位机的L1 到L4 指示灯和读取系统运行时间。</p><p>7、上位机和单片机的串口通信规约如下表：</p><p><img src="https://s2.loli.net/2023/03/28/FkKgLlC9XZRaAxc.png" alt="image-20230328134045274"></p><p>控制命令为一个字节，高4 位为命令类型，低4 位为执行参数。控制灯光开关命令中，低4 位每1 位控制一个LED 灯的开关，无返回值。读取运行时间命令中，低4 位保留，各位为0，返回3 个字节的时间数据，用16 进制的BCD 码表示，先发时，再发分，后发秒。如果系统运行的时间为12 时24 分16 秒，收到读取时间命令字后，返回：0x12 0x24 0x16。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REGX52.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sfr AUXR = <span class="number">0x8e</span>; <span class="comment">// IAP15F2K61S新增配置</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>, <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line">sbit Key1 = P3^<span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3^<span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line"></span><br><span class="line">sbit L7   = P0^<span class="number">6</span>; <span class="comment">// LED1</span></span><br><span class="line">sbit L8   = P0^<span class="number">7</span>; <span class="comment">// LED1</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>; <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC138</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 初始化74HC138</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Show_Time</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//数码管显示时间</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Time0_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//定时器初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//初始化串口</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">()</span>;<span class="comment">//设备判断</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Key</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//判断按键</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span>;<span class="comment">//发送字节</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Data</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//判断串口数据</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> hour=<span class="number">0</span>,min=<span class="number">0</span>,sec=<span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> Data = <span class="number">0x00</span>; <span class="comment">// 接收到的数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">Time0_Init();</span><br><span class="line">UART_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">0</span>)<span class="comment">//第一次运行，设备检验</span></span><br><span class="line">&#123;</span><br><span class="line">check();</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">Show_Time();<span class="comment">//数码管显示时间</span></span><br><span class="line">Check_Key();<span class="comment">//判断按键</span></span><br><span class="line">Check_Data();<span class="comment">//判断串口数据</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span><span class="comment">//延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line"><span class="keyword">while</span>(t)&#123;</span><br><span class="line">i = <span class="number">2</span>;</span><br><span class="line">j = <span class="number">239</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (--j);</span><br><span class="line">&#125; <span class="keyword">while</span> (--i);</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Select_HC138</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(n)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x80</span>;<span class="comment">//Y4输出0，选择LED控制</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xa0</span>;<span class="comment">//Y5输出0，选择蜂鸣器和继电器控制</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xc0</span>;<span class="comment">//Y6输出0，选择数码管位选</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0xe0</span>;<span class="comment">//Y7输出0，选择数码管段码</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">P2 = (P2 &amp; <span class="number">0x1f</span>) | <span class="number">0x00</span>;<span class="comment">//所有锁存器不选择</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">Select_HC138(<span class="number">6</span>);</span><br><span class="line">P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">Select_HC138(<span class="number">7</span>);</span><br><span class="line">P0 = Duanma[num];</span><br><span class="line"></span><br><span class="line"><span class="comment">//消影</span></span><br><span class="line">Delay(<span class="number">1</span>);</span><br><span class="line">    P0 = <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Show_Time</span><span class="params">()</span><span class="comment">//数码管显示时间</span></span><br><span class="line">&#123;</span><br><span class="line">LED_Shu(<span class="number">0</span>, hour / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">1</span>, hour % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">2</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">3</span>, min / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">4</span>, min % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">5</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">6</span>, sec / <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">7</span>, sec % <span class="number">10</span>);</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Time0_Init</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//50毫秒@12.000MHz</span></span><br><span class="line">&#123;</span><br><span class="line">TMOD &amp;= <span class="number">0xF0</span>;<span class="comment">//设置定时器模式</span></span><br><span class="line">TMOD |= <span class="number">0x01</span>;<span class="comment">//设置定时器模式</span></span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">TF0 = <span class="number">0</span>;<span class="comment">//清除TF0标志</span></span><br><span class="line">TR0 = <span class="number">1</span>;<span class="comment">//定时器0开始计时</span></span><br><span class="line"></span><br><span class="line">ET0 = <span class="number">1</span>; <span class="comment">// 允许定时器0中断</span></span><br><span class="line">    EA  = <span class="number">1</span>; <span class="comment">// 开总中断</span></span><br><span class="line">    PT0 = <span class="number">0</span>; <span class="comment">// 定时器0为低优先级中断</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">check</span><span class="params">()</span><span class="comment">//设备判断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = <span class="number">0xff</span> &lt;&lt; i;</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">P0 = ~(<span class="number">0xff</span> &lt;&lt; i);</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Select_HC138(<span class="number">6</span>);</span><br><span class="line">P0 = <span class="number">0x01</span> &lt;&lt; i;</span><br><span class="line">Select_HC138(<span class="number">7</span>);</span><br><span class="line">P0 = <span class="number">0x00</span>;</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Select_HC138(<span class="number">6</span>);</span><br><span class="line">P0 = ~(<span class="number">0x01</span> &lt;&lt; i);</span><br><span class="line">Select_HC138(<span class="number">7</span>);</span><br><span class="line">P0 = <span class="number">0xFF</span>;</span><br><span class="line">Delay(<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Key</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Key1 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Show_Time();</span><br><span class="line"><span class="keyword">while</span>(Key1 == <span class="number">0</span>) </span><br><span class="line">Show_Time();</span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line">L8 = ~L8;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Key2 == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Show_Time();</span><br><span class="line"><span class="keyword">while</span>(Key2 == <span class="number">0</span>) </span><br><span class="line">Show_Time();</span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line">L7 = ~L7;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Init</span><span class="params">(<span class="type">void</span>)</span><span class="comment">//9600bps@11.0592MHz</span></span><br><span class="line">&#123;</span><br><span class="line">SCON = <span class="number">0x50</span>;<span class="comment">//8位数据,可变波特率</span></span><br><span class="line">TMOD &amp;= <span class="number">0x0F</span>;<span class="comment">//清除定时器1模式位</span></span><br><span class="line">TMOD |= <span class="number">0x20</span>;<span class="comment">//设定定时器1为8位自动重装方式</span></span><br><span class="line">TL1 = <span class="number">0xFD</span>;<span class="comment">//设定定时初值</span></span><br><span class="line">TH1 = <span class="number">0xFD</span>;<span class="comment">//设定定时器重装值</span></span><br><span class="line">ET1 = <span class="number">0</span>;<span class="comment">//禁止定时器1中断</span></span><br><span class="line">TR1 = <span class="number">1</span>;<span class="comment">//启动定时器1</span></span><br><span class="line"></span><br><span class="line">ES = <span class="number">1</span>;</span><br><span class="line">AUXR = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_SendByte</span><span class="params">(<span class="type">unsigned</span> <span class="type">char</span> dat)</span></span><br><span class="line">&#123;</span><br><span class="line">SBUF = dat;</span><br><span class="line">    <span class="keyword">while</span> (!TI);</span><br><span class="line">    TI = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Check_Data</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Data != <span class="number">0x00</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(Data &amp; <span class="number">0xf0</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0xa0</span>:<span class="comment">//远程灯光控制命令</span></span><br><span class="line">Select_HC138(<span class="number">4</span>);</span><br><span class="line">                P0 = <span class="number">0xff</span>;</span><br><span class="line">P0 = P0 &amp; (~Data | <span class="number">0xf0</span>);</span><br><span class="line">Select_HC138(<span class="number">0</span>);</span><br><span class="line">Data = <span class="number">0x00</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">0xb0</span>:<span class="comment">//读取现场系统运行时间命令</span></span><br><span class="line">UART_SendByte((hour / <span class="number">10</span> &lt;&lt; <span class="number">4</span>) | (hour % <span class="number">10</span>));</span><br><span class="line">UART_SendByte((min / <span class="number">10</span> &lt;&lt; <span class="number">4</span>) | (min % <span class="number">10</span>));</span><br><span class="line">UART_SendByte((sec / <span class="number">10</span> &lt;&lt; <span class="number">4</span>) | (sec % <span class="number">10</span>));</span><br><span class="line">Data = <span class="number">0x00</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Time0_Run</span><span class="params">(<span class="type">void</span>)</span> interrupt 1</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    TL0 = <span class="number">0xB0</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line">    TH0 = <span class="number">0x3C</span>; <span class="comment">// 设置定时初始值</span></span><br><span class="line"></span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">20</span>)<span class="comment">//1s</span></span><br><span class="line">&#123;</span><br><span class="line">sec++;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(sec == <span class="number">60</span>)&#123;</span><br><span class="line">min++;</span><br><span class="line">sec = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(min == <span class="number">60</span>)&#123;</span><br><span class="line">hour++;</span><br><span class="line">min = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(hour == <span class="number">24</span>)</span><br><span class="line">hour = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">UART_Run</span><span class="params">(<span class="type">void</span>)</span> interrupt 4</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RI == <span class="number">1</span>) &#123;</span><br><span class="line">        Data = SBUF;</span><br><span class="line">        RI = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云图床搭建</title>
      <link href="/post/b9a4e327.html"/>
      <url>/post/b9a4e327.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、登录阿里云"><a href="#一、登录阿里云" class="headerlink" title="一、登录阿里云"></a>一、登录阿里云</h1><blockquote><p>注册、登录、<strong>实名认证</strong></p></blockquote><h1 id="二、购买对象存储OSS"><a href="#二、购买对象存储OSS" class="headerlink" title="二、购买对象存储OSS"></a>二、购买对象存储OSS</h1><blockquote><p>在产品中找到对象存储OSS</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319790.png" alt="image-20230330223507765"></p><blockquote><p>我是新用户，这里先购买三个月的使用期</p></blockquote><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319791.png" alt="image-20230330223639443" style="zoom:50%;" /><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319792.png" alt="image-20230330223704380" style="zoom:50%;" /><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319793.png" alt="image-20230330223742995" style="zoom: 67%;" /><h1 id="三、开通对象存储服务-OSS"><a href="#三、开通对象存储服务-OSS" class="headerlink" title="三、开通对象存储服务 OSS"></a>三、开通对象存储服务 OSS</h1><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319794.png" alt="image-20230330223927065"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319795.png" alt="image-20230330223941173"></p><h1 id="四、创建bucket"><a href="#四、创建bucket" class="headerlink" title="四、创建bucket"></a>四、创建bucket</h1><blockquote><p>选择左侧的bucket列表，然后选择右侧的创建Bucket</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319796.png" alt="image-20230330224142694"></p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319798.png" alt="image-20230330224739606" style="zoom:67%;" /><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319799.png" alt="image-20230330225000992" style="zoom:67%;" /><blockquote><p>HDFS、版本控制、服务端加密方式、实时日志查询、定时备份   都不开通，不然需要另外收费</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319800.png" alt="image-20230330225608062"></p><blockquote><p>地域结点只要复制 oss-cn-beijing 即可，后面的.aliyuncs.com不需要；后面会用到这个地域结点</p></blockquote><h1 id="五、获取AccessKey"><a href="#五、获取AccessKey" class="headerlink" title="五、获取AccessKey"></a>五、获取AccessKey</h1><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319801.png" alt="image-20230330225714598"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319802.png" alt="image-20230330225744760"></p><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319803.png" alt="image-20230330225804403"></p><blockquote><p>在弹出的页面里，记住你的 <strong>accessKeyId</strong> 和 <strong>accessKeySecret</strong></p></blockquote><h1 id="六、下载配置PicGo"><a href="#六、下载配置PicGo" class="headerlink" title="六、下载配置PicGo"></a>六、下载配置PicGo</h1><p>下载：<a href="https://github.com/Molunerfinn/PicGo/releases">Releases · Molunerfinn&#x2F;PicGo (github.com)</a></p><p>图床设置：</p><ul><li><p>设定Keyld：填写刚刚获得的<code>AccessKeyID</code></p></li><li><p>设定KeySecret：填写<code>AccessKeyIDSecret</code></p></li><li><p>设定Bucket：填写bucket名称，这里填写的是你所创建的bucket名字，不是浏览器里的域名</p></li><li><p>确认存储区域：填写你的地域节点，注意复制的格式</p></li><li><p>指定存储路径：其实就是自定义一个文件夹的名字，以 &#x2F; 结尾；它会自动在你所创建的Bucket里面创建一个文件夹，并把图片上传进去，因此我们不需要在Bucket里面手动的创建这个文件夹</p></li></ul><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319804.png" alt="image-20230330230810995"  /><blockquote><p>打开时间戳命名</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319805.png" alt="image-20230330230906779"></p><h1 id="七、测试Typroa使用图床"><a href="#七、测试Typroa使用图床" class="headerlink" title="七、测试Typroa使用图床"></a>七、测试Typroa使用图床</h1><p> 配置信息</p><ul><li>打开设置:<code>文件--&gt;偏好设置---&gt;图像</code></li><li>选择:复制图片到 .&#x2F;assets 文件夹</li><li>勾选附加选项:和下图一样即可</li><li>设置PicGo的安装路径即可：xxx&#x2F;xxx&#x2F;PicGo.exe</li></ul><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319806.png" alt="image-20230330231059792"></p><blockquote><p>验证</p></blockquote><p><img src="https://yhblog-bucket.oss-cn-beijing.aliyuncs.com/images/202303302319807.png" alt="image-20230330231247517"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯备赛题解（小蜜蜂）（一）</title>
      <link href="/post/b97e48cf.html"/>
      <url>/post/b97e48cf.html</url>
      
        <content type="html"><![CDATA[<h1 id="必备基础技能训练15-项"><a href="#必备基础技能训练15-项" class="headerlink" title="必备基础技能训练15 项"></a>必备基础技能训练15 项</h1><h2 id="【基础01】LED-指示灯的基本控制"><a href="#【基础01】LED-指示灯的基本控制" class="headerlink" title="【基础01】LED 指示灯的基本控制"></a>【基础01】LED 指示灯的基本控制</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭8 个LED 灯。</p><p>2、循环实现LED 跑马灯控制，控制要求为：</p><ul><li>首先，8 个LED 灯同时闪烁3 次；</li><li>然后，从L1 灯至L8 灯依次点亮；</li><li>接着，从L1 灯至L8 灯依次熄灭</li></ul></blockquote><img src="https://s2.loli.net/2023/03/28/Yg8dBNpSmPT5FKk.png" alt="image-20230327212535768" style="zoom:60%;" /><p><strong>代码实现：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    HC138_A = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">    HC138_B = <span class="number">0</span>;</span><br><span class="line">    HC138_C = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 8个LED灯同时闪烁3次</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            P0 = <span class="number">0X00</span>; <span class="comment">// P0口输出1</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">            P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 八个灯依次点亮</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = (<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 八个灯依次熄灭</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = ~(<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础02】蜂鸣器和继电器的基本控制"><a href="#【基础02】蜂鸣器和继电器的基本控制" class="headerlink" title="【基础02】蜂鸣器和继电器的基本控制"></a>【基础02】蜂鸣器和继电器的基本控制</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、循环实现以下功能：</p><ul><li>首先，8 个LED 灯同时闪烁3 次；</li><li>接着，从L1 灯至L8 灯依次点亮；</li><li>然后，继电器吸合，延时片刻，继电器断开；</li><li>接着，从L1 灯至L8 灯依次熄灭；</li><li>最后，蜂鸣器鸣叫一会后关闭。</li></ul></blockquote><p><img src="https://s2.loli.net/2023/03/28/i4Eb1mR85hK2Dxz.png" alt="image-20230327221234377"></p><blockquote><p><strong>注意达林顿管的存在</strong></p></blockquote><p><strong>代码实现：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        HC138_C = <span class="number">0</span>; <span class="comment">// 设置74HC138为 000  0</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i;</span><br><span class="line">    HC138Init(<span class="number">0</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        HC138Init(<span class="number">4</span>); <span class="comment">// 开始控制LED灯</span></span><br><span class="line">        <span class="comment">// 8个LED灯同时闪烁3次</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            P0 = <span class="number">0X00</span>; <span class="comment">// P0口输出1</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">            P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 八个灯依次点亮</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = (<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HC138Init(<span class="number">5</span>); <span class="comment">// 开始控制继电器</span></span><br><span class="line">        P0 = <span class="number">0x10</span>;      <span class="comment">// 继电器吸合 0001 0000 虽然低电平驱动，但是由于达林顿管的存在，给高电平</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0X00</span>; <span class="comment">// 继电器断开</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        HC138Init(<span class="number">4</span>); <span class="comment">// 开始控制LED灯</span></span><br><span class="line">        <span class="comment">// 八个灯依次熄灭</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P0 = ~(<span class="number">0Xff</span> &lt;&lt; i);</span><br><span class="line">            Delay(<span class="number">1000</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        HC138Init(<span class="number">5</span>); <span class="comment">// 开始控制蜂鸣器</span></span><br><span class="line">        P0 = <span class="number">0x40</span>;      <span class="comment">// 继电器吸合 0100 0000</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">        P0 = <span class="number">0X00</span>; <span class="comment">// 继电器断开</span></span><br><span class="line">        Delay(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础03】数码管的静态显示"><a href="#【基础03】数码管的静态显示" class="headerlink" title="【基础03】数码管的静态显示"></a>【基础03】数码管的静态显示</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、8 个数码管从左至右，逐个数码管依次显示“0”到“9”的10 个数字。</p><ul><li>即左边第1 个数码管依次显示“0”到“9”，其他数码管熄灭；接着左边第2 个数码管</li><li>依次显示“0”到“9”，其他数码管熄灭…依次类推，直到8 个数码管显示完成。</li></ul><p>3、8 个数码管同时显示“0”到“9”的10 个数字和“A”到“F”的6 个字母。</p><p>4、循环实现上面2 组数码管的显示功能。</p></blockquote><p><img src="https://s2.loli.net/2023/03/28/tSfzslkIneCT7Fv.png" alt="image-20230327223845970"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">16</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i, j;</span><br><span class="line">    HC138Init(<span class="number">0</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 从左到右每个数码管依次显示0~9</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">9</span>; j++) &#123;</span><br><span class="line">                LED_Shu(i, j);</span><br><span class="line">                Delay(<span class="number">500</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 所有数码管同时显示0~F</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">16</span>; i++) &#123;</span><br><span class="line">            HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">            P0 = <span class="number">0XFF</span>;</span><br><span class="line">            HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">            P0 = Duanma[i];</span><br><span class="line">            Delay(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础04】数码管的动态显示"><a href="#【基础04】数码管的动态显示" class="headerlink" title="【基础04】数码管的动态显示"></a>【基础04】数码管的动态显示</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>2、在8 位数码管中，左边4 位数码管显示年份“2018”，接着2 位是分隔符“–”，靠右的2 位数码管显示月份。</p><ul><li>从1 月份开始，每隔一段时间加1 个月，到12 月之后又从1 月开始递增，如此循环往复。</li></ul></blockquote><blockquote><p>主要delay时间，扫描时间过慢会导致数码管闪烁</p><p>记得消抖</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">18</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>, <span class="number">0xbf</span>, <span class="number">0x7f</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_LED</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                        <span class="comment">// LED私有延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span>;                                        <span class="comment">// LED显示</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> mounth = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 04动态数码管显示</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">0</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        mounth++;</span><br><span class="line">        <span class="keyword">if</span> (mounth &gt; <span class="number">12</span>)</span><br><span class="line">            mounth = <span class="number">1</span>;</span><br><span class="line">        Delay_LED(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_LED</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// LED私有延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        Display(); <span class="comment">// 边计数，边显示，保证计数过程不会中断显示</span></span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">    <span class="comment">// 消影</span></span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">    P0 = <span class="number">0xFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Display</span><span class="params">()</span> <span class="comment">// LED显示</span></span><br><span class="line">&#123;</span><br><span class="line">    LED_Shu(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">    LED_Shu(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    LED_Shu(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    LED_Shu(<span class="number">3</span>, <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">4</span>, <span class="number">16</span>);</span><br><span class="line">    LED_Shu(<span class="number">5</span>, <span class="number">16</span>);</span><br><span class="line"></span><br><span class="line">    LED_Shu(<span class="number">6</span>, mounth / <span class="number">10</span>);</span><br><span class="line">    LED_Shu(<span class="number">7</span>, mounth % <span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础05】独立按键的基本操作"><a href="#【基础05】独立按键的基本操作" class="headerlink" title="【基础05】独立按键的基本操作"></a>【基础05】独立按键的基本操作</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到2～3 引脚，使S4、S5、S6 和S7 成为4 个独立按键。</p><p>2、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>3、循环扫描按键状态，在确认按键按下时，进行去抖动处理。当S7 按键按下时，点亮L1 指示灯，松开后熄灭；当S6 按键按下时，点亮L2 指示灯，松开后熄灭；当S5 按键按下时，点亮L3 指示灯，松开后熄灭；当S4 按键按下时，点亮L4 指示灯，松开后熄灭。</p></blockquote><p><img src="https://s2.loli.net/2023/03/28/jRyiJObdUlMaDVT.png" alt="image-20230328170430023"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3 ^ <span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3 ^ <span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line">sbit Key3 = P3 ^ <span class="number">2</span>; <span class="comment">// 按键3</span></span><br><span class="line">sbit Key4 = P3 ^ <span class="number">3</span>; <span class="comment">// 按键4</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;     <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 05独立按键的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    HC138Init(<span class="number">4</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key1 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XFE</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key2 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key2 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XFD</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key3 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key3 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XFB</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key4 == <span class="number">0</span>) &#123;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">            <span class="keyword">while</span> (Key4 == <span class="number">0</span>)</span><br><span class="line">                P0 = <span class="number">0XF7</span>;</span><br><span class="line">            Delay(<span class="number">20</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            P0 = <span class="number">0XFF</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础06】独立按键的扩展应用"><a href="#【基础06】独立按键的扩展应用" class="headerlink" title="【基础06】独立按键的扩展应用"></a>【基础06】独立按键的扩展应用</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到2～3 引脚，使S4、S5、S6 和S7 成为4 个独立按键。</p><p>2、S7 和S6 为选择键，确定控制键控制那组LED 指示灯；S5 和S4 为控制键，按键按下时点亮指定的LED 指示灯，按键松开，LED 指示灯熄灭。</p><p>3、按下S7 按键，点亮L1 指示灯，S6 按键按下无效，不响应操作；此时S5 控制L3 指示灯，S4 控制L4 指示灯；再次按下S7 按键，L1 指示灯熄灭，S6 按键按下有效。</p><p>4、按下S6 按键，点亮L2 指示灯，S7 按键按下无效，不响应操作；此时S5 控制L5 指示灯，S4 控制L6 指示灯；再次按下S6 按键，L2 指示灯熄灭，S7 按键按下有效。<br>5、在S7 和S6 按键都不按下的情况下，即L1 和L2 指示灯均未点亮时，控制键不能操作，S5 和S4 按键按下无效。</p><p>6、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>7、循环扫描按键状态，根据按键的按下情况，进行相应的处理。</p></blockquote><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2 ^ <span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2 ^ <span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2 ^ <span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit Key1 = P3 ^ <span class="number">0</span>; <span class="comment">// 按键1</span></span><br><span class="line">sbit Key2 = P3 ^ <span class="number">1</span>; <span class="comment">// 按键2</span></span><br><span class="line">sbit Key3 = P3 ^ <span class="number">2</span>; <span class="comment">// 按键3</span></span><br><span class="line">sbit Key4 = P3 ^ <span class="number">3</span>; <span class="comment">// 按键4</span></span><br><span class="line"></span><br><span class="line">sbit L1 = P0 ^ <span class="number">0</span>;</span><br><span class="line">sbit L2 = P0 ^ <span class="number">1</span>;</span><br><span class="line">sbit L3 = P0 ^ <span class="number">2</span>;</span><br><span class="line">sbit L4 = P0 ^ <span class="number">3</span>;</span><br><span class="line">sbit L5 = P0 ^ <span class="number">4</span>;</span><br><span class="line">sbit L6 = P0 ^ <span class="number">5</span>;</span><br><span class="line">sbit L7 = P0 ^ <span class="number">6</span>;</span><br><span class="line">sbit L8 = P0 ^ <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;     <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>; <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span>;               <span class="comment">// 读取按键值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 06独立按键的扩展应用</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> flag1 = <span class="number">0</span>, flag2 = <span class="number">0</span>; <span class="comment">// 用于标记按键1和按键2的状态</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> KeyNum;               <span class="comment">// 用于存放按键值</span></span><br><span class="line"></span><br><span class="line">    HC138Init(<span class="number">4</span>);</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        KeyNum = ReadKeyNum();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (KeyNum == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">0</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag1 = <span class="number">1</span>; <span class="comment">// 第一次按下按键1</span></span><br><span class="line">            L1    = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (KeyNum == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">1</span> &amp;&amp; flag2 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag1 = <span class="number">0</span>; <span class="comment">// 第二次按下按键1</span></span><br><span class="line">            L1    = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (KeyNum == <span class="number">2</span> &amp;&amp; flag2 == <span class="number">0</span> &amp;&amp; flag1 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag2 = <span class="number">1</span>; <span class="comment">// 第一次按下按键2</span></span><br><span class="line">            L2    = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (KeyNum == <span class="number">2</span> &amp;&amp; flag2 == <span class="number">1</span> &amp;&amp; flag1 == <span class="number">0</span>) &#123;</span><br><span class="line">            flag2 = <span class="number">0</span>; <span class="comment">// 第二次按下按键2</span></span><br><span class="line">            L2    = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (Key3 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag1 == <span class="number">1</span>) &#123; <span class="comment">// 状态1</span></span><br><span class="line">                L3 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag2 == <span class="number">1</span>) &#123; <span class="comment">// 状态2</span></span><br><span class="line">                L5 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        L3 = <span class="number">1</span>;</span><br><span class="line">        L5 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (Key4 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (flag1 == <span class="number">1</span>) &#123; <span class="comment">// 状态1</span></span><br><span class="line">                L4 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag2 == <span class="number">1</span>) &#123; <span class="comment">// 状态2</span></span><br><span class="line">                L6 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        L4 = <span class="number">1</span>;</span><br><span class="line">        L6 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span> <span class="comment">// 读取按键值</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Key1 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key1 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key2 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key2 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key3 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key3 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Key4 == <span class="number">0</span>) &#123;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">while</span> (Key4 == <span class="number">0</span>)</span><br><span class="line">            ;</span><br><span class="line">        Delay(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="【基础07】矩阵键盘的基本操作"><a href="#【基础07】矩阵键盘的基本操作" class="headerlink" title="【基础07】矩阵键盘的基本操作"></a>【基础07】矩阵键盘的基本操作</h2><blockquote><p>新建工程，以I&#x2F;O 模式编写代码，在CT107D 单片机综合训练平台上，实现以下功能：</p><p>1、将CT107D 上J5 处跳帽接到1～2 引脚，使S4 到S19 成为4X4 的矩阵键盘。</p><p>2、系统上电后，关闭蜂鸣器，关闭继电器，关闭8 个LED 灯。</p><p>3、循环扫描矩阵键盘状态，发现有按键按下，等待其松开后，在数码管的最左边1 位显示相应的数字。从左至右，从上到下，依次显示“0”到“F”。即按下S7，显示“0”，按下S11 显示“1”，按下S15 显示“2”，按下S6 显示“4”…依次类推。</p></blockquote><p><img src="https://s2.loli.net/2023/03/28/OquyaXFlRmjJd6o.png" alt="image-20230328192636670"></p><p><strong>实现代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;REG51.H&quot;</span></span></span><br><span class="line"></span><br><span class="line">sbit HC138_A = P2^<span class="number">5</span>; <span class="comment">// 74HC138的A引脚</span></span><br><span class="line">sbit HC138_B = P2^<span class="number">6</span>; <span class="comment">// 74HC138的B引脚</span></span><br><span class="line">sbit HC138_C = P2^<span class="number">7</span>; <span class="comment">// 74HC138的C引脚</span></span><br><span class="line"></span><br><span class="line">sbit line1 = P3^<span class="number">0</span>; <span class="comment">// 第一行</span></span><br><span class="line">sbit line2 = P3^<span class="number">1</span>; <span class="comment">// 第二行</span></span><br><span class="line">sbit line3 = P3^<span class="number">2</span>; <span class="comment">// 第三行</span></span><br><span class="line">sbit line4 = P3^<span class="number">3</span>; <span class="comment">// 第四行</span></span><br><span class="line"></span><br><span class="line">sbit col1 = P3^<span class="number">7</span>; <span class="comment">// 第一列</span></span><br><span class="line">sbit col2 = P3^<span class="number">6</span>; <span class="comment">// 第二列</span></span><br><span class="line">sbit col3 = P3^<span class="number">5</span>; <span class="comment">// 第三列</span></span><br><span class="line">sbit col4 = P3^<span class="number">4</span>; <span class="comment">// 第四列</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> code Duanma[<span class="number">16</span>] = &#123;<span class="number">0xc0</span>, <span class="number">0xf9</span>, <span class="number">0xa4</span>, <span class="number">0xb0</span>, <span class="number">0x99</span>, <span class="number">0x92</span>, <span class="number">0x82</span>, <span class="number">0xf8</span>, <span class="number">0x80</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x80</span>, <span class="number">0xc6</span>, <span class="number">0xc0</span>, <span class="number">0x86</span>, <span class="number">0x8e</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span>;                            <span class="comment">// 延迟函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span>;                        <span class="comment">// 74HC138初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span>; <span class="comment">// 数码管显示函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span>;                                     <span class="comment">// 扫描矩阵键盘</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> KeyNumber = <span class="number">1</span>;                            <span class="comment">// 按键值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        ReadKeyNum();</span><br><span class="line">        LED_Shu(<span class="number">0</span>, KeyNumber);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">HC138Init</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> n)</span> <span class="comment">// 74HC138初始化</span></span><br><span class="line">&#123;</span><br><span class="line">    P2 = <span class="number">0x00</span>; <span class="comment">// P2口输出0</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">4</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>;</span><br><span class="line">        HC138_B = <span class="number">0</span>; <span class="comment">// 设置74HC138为 100  4</span></span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">5</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 101  5</span></span><br><span class="line">        HC138_B = <span class="number">0</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">6</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 110  6</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">7</span>) &#123;</span><br><span class="line">        HC138_C = <span class="number">1</span>; <span class="comment">// 设置74HC138为 111  7</span></span><br><span class="line">        HC138_B = <span class="number">1</span>;</span><br><span class="line">        HC138_A = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Shu</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> location, <span class="type">unsigned</span> <span class="type">int</span> num)</span> <span class="comment">// 数码管显示函数</span></span><br><span class="line">&#123;</span><br><span class="line">    P0 = <span class="number">0XFF</span>; <span class="comment">// P0口输出0</span></span><br><span class="line">    HC138Init(<span class="number">6</span>); <span class="comment">// 位选</span></span><br><span class="line">    P0 = <span class="number">0x01</span> &lt;&lt; location;</span><br><span class="line">    HC138Init(<span class="number">7</span>); <span class="comment">// 段选</span></span><br><span class="line">    P0 = Duanma[num];</span><br><span class="line">    Delay(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ReadKeyNum</span><span class="params">()</span><span class="comment">// 扫描矩阵键盘</span></span><br><span class="line">&#123;</span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">1</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">2</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">3</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">4</span>;&#125;</span><br><span class="line"></span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">5</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">6</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">7</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">8</span>;&#125;</span><br><span class="line"></span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">9</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">10</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">11</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">12</span>;&#125;</span><br><span class="line"></span><br><span class="line">    P3 = <span class="number">0XFF</span>; <span class="comment">// P3口输出1</span></span><br><span class="line">    line4 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(col1 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col1 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">13</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col2 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col2 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">14</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col3 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col3 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">15</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(col4 == <span class="number">0</span>)&#123;Delay(<span class="number">20</span>);<span class="keyword">while</span>(col4 == <span class="number">0</span>);Delay(<span class="number">20</span>);KeyNumber = <span class="number">16</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode开发51单片机</title>
      <link href="/post/593df09b.html"/>
      <url>/post/593df09b.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装插件-EIDE"><a href="#一、安装插件-EIDE" class="headerlink" title="一、安装插件(EIDE)"></a>一、安装插件(EIDE)</h1><p><img src="https://s2.loli.net/2023/03/27/gzYncHyOQfkTtrx.png" alt="image-20230327131445564"></p><h1 id="二、配置Keil-C51路径"><a href="#二、配置Keil-C51路径" class="headerlink" title="二、配置Keil C51路径"></a>二、配置Keil C51路径</h1><p><img src="https://s2.loli.net/2023/03/27/A5xiou3GMS1Lg2t.png" alt="image-20230327131639841"></p><p><img src="https://s2.loli.net/2023/03/27/gTRKO5FHth1XwAx.png" alt="image-20230327131952964"></p><h1 id="三、新建项目"><a href="#三、新建项目" class="headerlink" title="三、新建项目"></a>三、新建项目</h1><blockquote><p>建立8位MCU项目</p></blockquote><img src="https://s2.loli.net/2023/03/27/4M5tfReuC1Gb8kw.png" alt="image-20230327132104007" style="zoom:60%;" /><h1 id="四、修改编译器"><a href="#四、修改编译器" class="headerlink" title="四、修改编译器"></a>四、修改编译器</h1><p><img src="https://s2.loli.net/2023/03/27/obfUq7KtP6vzkR2.png" alt="image-20230327132454865"></p><h1 id="五、创建文件夹"><a href="#五、创建文件夹" class="headerlink" title="五、创建文件夹"></a>五、创建文件夹</h1><blockquote><p>创建一个存放代码的文件夹，并将其添加到项目中</p></blockquote><p><img src="https://s2.loli.net/2023/03/27/SRyjWUe5zmTakZg.png" alt="image-20230327132917570"></p><p><img src="https://s2.loli.net/2023/03/27/i4UBN9D7atmwTWg.png" alt="image-20230327133018498"></p><p><img src="https://s2.loli.net/2023/03/27/jRXG21PwWZLFgTu.png" alt="image-20230327133104574"></p><h1 id="六、新建文件，进行测试"><a href="#六、新建文件，进行测试" class="headerlink" title="六、新建文件，进行测试"></a>六、新建文件，进行测试</h1><blockquote><p>正常方式在SRC文件夹下创建文件</p></blockquote><p><img src="https://s2.loli.net/2023/03/27/BjI8lVZSKQyxRCo.png" alt="image-20230327133325819"></p><blockquote><p>编译</p></blockquote><p><img src="https://s2.loli.net/2023/03/27/PAJulqQMj6hatwD.png" alt="image-20230327133606472"></p><blockquote><p>使用烧录软件将生成的hex文件下载</p></blockquote><blockquote><p>流水灯代码</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;REG51.H&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrins.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> t)</span> <span class="comment">// 延迟函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i, j;</span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        i = <span class="number">2</span>;</span><br><span class="line">        j = <span class="number">239</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (--j)</span><br><span class="line">                ;</span><br><span class="line">        &#125; <span class="keyword">while</span> (--i);</span><br><span class="line">        t--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> i;</span><br><span class="line">    P2 = <span class="number">0XFE</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            P2 =_crol_(P2,<span class="number">1</span>);;</span><br><span class="line">            Delay(<span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 51单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署和添加域名</title>
      <link href="/post/26f271be.html"/>
      <url>/post/26f271be.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、Netlify建站"><a href="#一、Netlify建站" class="headerlink" title="一、Netlify建站"></a>一、Netlify建站</h1><h2 id="1-1-注册"><a href="#1-1-注册" class="headerlink" title="1.1 注册"></a>1.1 注册</h2><p>去官网进行注册<a href="https://www.netlify.com/">Netlify</a></p><p>绑定自己的GitHub账号</p><h2 id="1-2-导入GitHub仓库"><a href="#1-2-导入GitHub仓库" class="headerlink" title="1.2 导入GitHub仓库"></a>1.2 导入GitHub仓库</h2><blockquote><center>根据提示操作进行,一切默认</center></blockquote><p><img src="https://s2.loli.net/2023/03/26/9YFsDfw65bTSaEW.png" alt="image-20230326222940859"></p><h2 id="1-3-查看部署好的网站"><a href="#1-3-查看部署好的网站" class="headerlink" title="1.3 查看部署好的网站"></a>1.3 查看部署好的网站</h2><p>我的通过Netlify部署完是：<a href="https://yhhomea.netlify.app/">yhhomea.netlify.app</a>【这里还没有绑定自己的域名，下图的已经绑定域名】</p><p><img src="https://s2.loli.net/2023/03/26/HoM3eDCNpcduwnl.png" alt="image-20230326223506287"></p><blockquote><p>现在打开Netlify部署的网址打开速度较慢，后面通过使用ClouldFlare  CDN加速来提高访问速度</p></blockquote><h1 id="二、配置域名"><a href="#二、配置域名" class="headerlink" title="二、配置域名"></a>二、配置域名</h1><h2 id="2-1-购买域名（新用户1元一年"><a href="#2-1-购买域名（新用户1元一年" class="headerlink" title="2.1 购买域名（新用户1元一年)"></a>2.1 购买域名（新用户1元一年)</h2><blockquote><p>这里推荐新用户购买</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/buvGL4TYMCHnm8V.png" alt="image-20230326224318175"></p><blockquote><p>在购买域名前，要先进行实名认证</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/QoeKvZHVMU341Ik.png" alt="image-20230326224358372"></p><blockquote><p>根据提示进行实名认证</p></blockquote><h2 id="2-2-域名解析"><a href="#2-2-域名解析" class="headerlink" title="2.2 域名解析"></a>2.2 域名解析</h2><p>打开阿里云域名控制台，找到自己购买的域名</p><p><img src="https://s2.loli.net/2023/03/26/JyHadFNrPITWSlf.png" alt="image-20230326224602967"></p><p><img src="https://s2.loli.net/2023/03/26/Q5ATXNgWs9R23vn.png" alt="image-20230326224642133"></p><blockquote><p>根据下图继续，添加两条解析</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/AlXurgvtOdJQ9sy.png" alt="image-20230326224849545"></p><h2 id="2-3-Netlify中添加自己的域名"><a href="#2-3-Netlify中添加自己的域名" class="headerlink" title="2.3 Netlify中添加自己的域名"></a>2.3 Netlify中添加自己的域名</h2><img src="https://s2.loli.net/2023/03/26/nydREVZoWtSPMDG.png" alt="image-20230326225009874" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/7syDUiYP9EhTSZp.png" alt="image-20230326225113745" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/FJglKmABp1Izj5u.png" alt="image-20230326225221188" style="zoom:67%;" /><h1 id="三、ClouldFlare加速"><a href="#三、ClouldFlare加速" class="headerlink" title="三、ClouldFlare加速"></a>三、ClouldFlare加速</h1><h2 id="3-1-注册Clouldflare并登陆"><a href="#3-1-注册Clouldflare并登陆" class="headerlink" title="3.1 注册Clouldflare并登陆"></a>3.1 注册<a href="https://www.cloudflare.com/zh-cn/">Clouldflare</a>并登陆</h2><p>这里可能需要挂梯子</p><h2 id="3-2-添加站点"><a href="#3-2-添加站点" class="headerlink" title="3.2 添加站点"></a>3.2 添加站点</h2><img src="https://s2.loli.net/2023/03/26/JVQou3i1CfENLUz.png" alt="image-20230326225419354" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/v3l7cda1qsToMPp.png" alt="image-20230326225444129" style="zoom:67%;" /><img src="https://s2.loli.net/2023/03/26/jcLBAosISvO1u4Z.png" alt="image-20230326225524687" style="zoom:67%;" /><h2 id="3-3-阿里云配置DNS"><a href="#3-3-阿里云配置DNS" class="headerlink" title="3.3 阿里云配置DNS"></a>3.3 阿里云配置DNS</h2><blockquote><p>找到下图所示的两个NS</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/gntAQIUDRl9VHLz.png" alt="image-20230326225800489"></p><blockquote><p>进入阿里云域名控制台，找到你购买的域名，点击管理</p></blockquote><p><img src="https://s2.loli.net/2023/03/26/BcjDAxHO71gYCpW.png" alt="image-20230326225906299"></p><img src="https://s2.loli.net/2023/03/26/cs1Ll4k7rPmfgB5.png" alt="image-20230326230006959" style="zoom:67%;" /><p><img src="https://s2.loli.net/2023/03/26/nxGMFyVPKcAZzbq.png" alt="image-20230326230042311"></p><blockquote><p>完成后点击确定</p></blockquote><h2 id="3-4-等待clouldflare确定邮箱"><a href="#3-4-等待clouldflare确定邮箱" class="headerlink" title="3.4 等待clouldflare确定邮箱"></a>3.4 等待clouldflare确定邮箱</h2><p>配置完成后，clouldflare会有邮件通知</p><img src="https://s2.loli.net/2023/03/26/igL8BXW3AsuEvcS.png" alt="image-20230326230339133" style="zoom:50%;" /><h1 id="四、配置成功后最终效果"><a href="#四、配置成功后最终效果" class="headerlink" title="四、配置成功后最终效果"></a>四、配置成功后最终效果</h1><blockquote><ul><li><p><img src="https://s2.loli.net/2023/03/26/mfAPFpOywDj8U79.png" alt="image-20230326230411162"></p></li><li><p><img src="https://s2.loli.net/2023/03/26/EgNHVdR9nsBCfjK.png" alt="image-20230326230506557"></p></li><li><p><img src="https://s2.loli.net/2023/03/26/LPuqYxpoNhnivdX.png" alt="image-20230326230524184"></p></li><li><p>你购买的域名网址可以访问博客</p></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/post/9639fcc6.html"/>
      <url>/post/9639fcc6.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>环境准备：</p><p>1.安装git</p><p>2.安装node.js</p><p>3.最好下载一个代码编辑器（例如：VScode、Sublime Text、notepad++等）</p></blockquote><h1 id="一、安装HEXO"><a href="#一、安装HEXO" class="headerlink" title="一、安装HEXO"></a>一、安装HEXO</h1><h2 id="打开cmd，输入以下命令"><a href="#打开cmd，输入以下命令" class="headerlink" title="打开cmd，输入以下命令"></a>打开cmd，输入以下命令</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="报错及解决方法"><a href="#报错及解决方法" class="headerlink" title="报错及解决方法"></a>报错及解决方法</h3><p><img src="https://s2.loli.net/2023/03/23/1mHePG8cLuF7ARD.png" alt="image-20230323223026426"></p><p>参考这篇博客，文档的权限进行提升：</p><blockquote><p><a href="https://blog.csdn.net/qq_44075310/article/details/128255366">(2条消息) npm安装报错（npm ERR! code EPERM npm ERR! syscall mkdir npm ERR! path C:\Program Files\nodejs\node_ca…）_晴雷的博客-CSDN博客</a></p></blockquote><p>如果发现，根据博客里面的步骤进行更改时，无法修改某一文档的权限时，根据报错时的提醒，单独修改某一文件夹的权限</p><p><img src="https://s2.loli.net/2023/03/23/mJWjPwkTDLsMrvc.png" alt="image-20230323224706032"></p><h1 id="二、初始化化文件夹"><a href="#二、初始化化文件夹" class="headerlink" title="二、初始化化文件夹"></a>二、初始化化文件夹</h1><h3 id="2-1-选择一个盘，创建一个blog文件夹"><a href="#2-1-选择一个盘，创建一个blog文件夹" class="headerlink" title="2.1 选择一个盘，创建一个blog文件夹"></a>2.1 选择一个盘，创建一个blog文件夹</h3><p><img src="https://s2.loli.net/2023/03/23/ULxgmTq8zs2l4Ev.png" alt="image-20230323225108988"></p><h3 id="2-2-通过cmd窗口，切换盘符，进入该文件夹"><a href="#2-2-通过cmd窗口，切换盘符，进入该文件夹" class="headerlink" title="2.2 通过cmd窗口，切换盘符，进入该文件夹"></a>2.2 通过cmd窗口，切换盘符，进入该文件夹</h3><p><img src="https://s2.loli.net/2023/03/23/HDnZmhvbCo9Qiz7.png" alt="image-20230323225304833"></p><h3 id="2-3-初始化"><a href="#2-3-初始化" class="headerlink" title="2.3 初始化"></a>2.3 初始化</h3><p>在blog文件夹下输入以下指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>如果出现以下错误</p><p><img src="https://s2.loli.net/2023/03/23/R8S2yiOZkTXqx9h.png" alt="image-20230323225645297"></p><p>多试几次，网络原因，克隆失败（可以直接开加速器或者挂梯子）</p><p>出现Start blogging with Hexo!表示初始化成功</p><p><img src="https://s2.loli.net/2023/03/23/8kzA6oFwhSdQr1n.png" alt="image-20230323225756201"></p><h1 id="三、搭建"><a href="#三、搭建" class="headerlink" title="三、搭建"></a>三、搭建</h1><h3 id="3-1-继续输入以下指令"><a href="#3-1-继续输入以下指令" class="headerlink" title="3.1 继续输入以下指令"></a>3.1 继续输入以下指令</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/23/OaWmFYKiQX1HgBp.png" alt="image-20230323230053462"></p><blockquote><p>cmd窗口不要关闭</p></blockquote><h3 id="3-2-打开blog文件夹下的public文件夹，查看是否搭建成功"><a href="#3-2-打开blog文件夹下的public文件夹，查看是否搭建成功" class="headerlink" title="3.2 打开blog文件夹下的public文件夹，查看是否搭建成功"></a>3.2 打开blog文件夹下的public文件夹，查看是否搭建成功</h3><img src="https://s2.loli.net/2023/03/23/wMeFHWntC3Yy17q.png" alt="image-20230323230346257" style="zoom:50%;" /><h3 id="3-3-点击index-html文件，浏览器会显示下图的效果"><a href="#3-3-点击index-html文件，浏览器会显示下图的效果" class="headerlink" title="3.3 点击index.html文件，浏览器会显示下图的效果"></a>3.3 点击index.html文件，浏览器会显示下图的效果</h3><p><img src="https://s2.loli.net/2023/03/23/9UjsuiTxXIflerY.png" alt="image-20230323230416908"></p><img src="https://s2.loli.net/2023/03/23/V9s7rADvjtCawuM.png" alt="image-20230323230452052" style="zoom:50%;" /><h3 id="3-4-在cmd窗口继续输入以下指令，复制生成的网址，在本地端口打开页面"><a href="#3-4-在cmd窗口继续输入以下指令，复制生成的网址，在本地端口打开页面" class="headerlink" title="3.4 在cmd窗口继续输入以下指令，复制生成的网址，在本地端口打开页面"></a>3.4 在cmd窗口继续输入以下指令，复制生成的网址，在本地端口打开页面</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/23/T1jIzSqscwOrNUt.png" alt="image-20230323230657681"></p><p><img src="https://s2.loli.net/2023/03/23/FshmeH7CI8NPVB1.png" alt="image-20230323230730114"></p><h3 id="3-5-查看成功后，按Ctrl-C关闭端口"><a href="#3-5-查看成功后，按Ctrl-C关闭端口" class="headerlink" title="3.5 查看成功后，按Ctrl+C关闭端口"></a>3.5 查看成功后，按Ctrl+C关闭端口</h3><h1 id="四、安装git依赖"><a href="#四、安装git依赖" class="headerlink" title="四、安装git依赖"></a>四、安装git依赖</h1><p>在blog文件夹目录下，在cmd窗口中，继续输入以下指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/24/JnX3VgZPzGBrIka.png" alt="image-20230324120103121"></p><h1 id="五、在GitHub上创建git仓库"><a href="#五、在GitHub上创建git仓库" class="headerlink" title="五、在GitHub上创建git仓库"></a>五、在GitHub上创建git仓库</h1><p>仓库名必须以github name.github.io命名</p><p><img src="https://s2.loli.net/2023/03/24/4QyaT1htoEMNxnI.png" alt="image-20230324120932625"></p><blockquote><p>注意：这里的名称一定是你GitHub的用户名，不然后面会加载不出页面渲染</p></blockquote><h1 id="六、本地博客上传GitHub"><a href="#六、本地博客上传GitHub" class="headerlink" title="六、本地博客上传GitHub"></a>六、本地博客上传GitHub</h1><h2 id="6-1-修改-config-yml文件"><a href="#6-1-修改-config-yml文件" class="headerlink" title="6.1 修改-config.yml文件"></a>6.1 修改-config.yml文件</h2><p>以txt文本格式打开</p><img src="https://s2.loli.net/2023/03/24/SBDO5LGRpWdMqXt.png" alt="image-20230324121118217" style="zoom:50%;" /><p>将下图中的信息进行替换</p><p><img src="https://s2.loli.net/2023/03/24/4aSfP9wOTquW5yl.png" alt="image-20230324121207400"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: 你的github地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/24/ZBOJ8o3Fx4McGPK.png" alt="image-20230324121239755"></p><h2 id="6-2-上传"><a href="#6-2-上传" class="headerlink" title="6.2 上传"></a>6.2 上传</h2><p>在blog文件路径下，在cmd窗口中依次输入以下指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d    </span><br></pre></td></tr></table></figure><p>运行结果应该如下：（如果第一次使用git，可能会提示登录一下GitHub，登录一下就可以了）</p><img src="https://s2.loli.net/2023/03/24/qEx43iGH2BnpjSM.png" alt="image-20230324121649495" style="zoom:50%;" /><img src="https://s2.loli.net/2023/03/24/awkxFn2hE73CIpR.png" alt="image-20230324121719393" style="zoom:50%;" /><h1 id="七、开启page服务"><a href="#七、开启page服务" class="headerlink" title="七、开启page服务"></a>七、开启page服务</h1><p>在网页进入GitHub，打开新建的上传博客的仓库，进行如下设置，打开page服务</p><p><img src="https://s2.loli.net/2023/03/24/UgXMbRCpH4NTd78.png" alt="image-20230324122134527"></p><p><img src="https://s2.loli.net/2023/03/24/RULtjzcw4fWMFvK.png" alt="image-20230324122324612"></p><p>保存后，等待一会，当出现下图所示后，就可以通过网址访问个人blog了</p><p><img src="https://s2.loli.net/2023/03/24/yUdV8CZR7Yah34E.png" alt="image-20230324122421585"></p><p>进入显示的页面，效果如下：</p><p><img src="https://s2.loli.net/2023/03/24/eszi1CkB9pqlZAQ.png" alt="image-20230324133255698"></p><blockquote><p>如果出现以下情况，请查看仓库名称是否为GitHub用户名</p><p><img src="https://s2.loli.net/2023/03/24/53PAZgIRyDbzKT9.png" alt="image-20230324133238423"></p></blockquote><h1 id="八、主题更换"><a href="#八、主题更换" class="headerlink" title="八、主题更换"></a>八、主题更换</h1><blockquote><p>官方主题网址：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></blockquote><h2 id="8-1-Butterfly-主题安装"><a href="#8-1-Butterfly-主题安装" class="headerlink" title="8.1 Butterfly 主题安装"></a>8.1 Butterfly 主题安装</h2><p>在blog根目录下，在cmd窗口中输入下列指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https:<span class="comment">//github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/m5k8J7YMEBxIeiV.png" alt="image-20230324203523825"></p><h2 id="8-2-应用主题"><a href="#8-2-应用主题" class="headerlink" title="8.2 应用主题"></a>8.2 应用主题</h2><p>修改blog根目录下的 <code>_config.yml</code>，把主题改为 butterfly：</p><p><img src="https://s2.loli.net/2023/03/25/wNgfWbOldsvo7Km.png" alt="image-20230324203700738"></p><h2 id="8-3-安装插件"><a href="#8-3-安装插件" class="headerlink" title="8.3 安装插件"></a>8.3 安装插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/dOEqBzgCStL3iDG.png" alt="image-20230324204300190"></p><p>剩余内容请参考下面这篇博客👇</p><p>Butterfly 主题美化：<a href="http://haiyong.site/post/22e1d5da.html">http://haiyong.site/post/22e1d5da.html</a></p><h1 id="九、发布"><a href="#九、发布" class="headerlink" title="九、发布"></a>九、发布</h1><p>在blog文件夹下，找到source，然后进入_posts，在该文件夹路径，右键进入git bash here</p><p><img src="https://s2.loli.net/2023/03/25/XTxkNdpcHFt3OEC.png" alt="image-20230324200056954"></p><p>在git bash here输入下列指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/03/25/XzUsfPhSkot8mlY.png" alt="image-20230324200355195"></p><p>继续输入下列指令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="title class_">post</span> <span class="string">&quot;新建博客文章名&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g  &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>在本地查看，无误后提交云端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADC模数转换器</title>
      <link href="/post/f2152a76.html"/>
      <url>/post/f2152a76.html</url>
      
        <content type="html"><![CDATA[<h1 id="ADC模数转换器"><a href="#ADC模数转换器" class="headerlink" title="ADC模数转换器"></a>ADC模数转换器</h1><p>ADC（Analog-Digital Converter）模拟-数字转换器</p><p>ADC可以将引脚上连续变化的模拟电压转换为内存中存储的数字变量，建立模拟电路到数字电路的桥梁</p><blockquote><p>DAC是数字-模拟转换器，但是PWM比DAC简单好用，一般使用DAC驱动电机，目前DAC主要应用于波形生成领域</p></blockquote><p>12位逐次逼近型ADC，1us转换时间</p><blockquote><p>分辨率：0 ~ 2^12^ -1,即0 ~ 4095 ，位数越高量化结果越精细，分辨率越高</p></blockquote><p>输入电压范围：0 ~ 3.3V，转换结果范围：0 ~ 4095 </p><p>18个输入通道，可测量16个外部和2个内部信号源</p><blockquote><p>STM32F103C8T6 ADC资源：ADC1、ADC2，10个外部输入通道</p></blockquote><p>规则组和注入组两个转换单元</p><blockquote><p>一次启动一个组，可以连续转换多个数据</p></blockquote><p>模拟看门狗自动监测输入电压范围</p><blockquote><p>检测指定通道，当数值超出阈值时，自动申请中断，无需手动在主函数中进行判断</p></blockquote><h2 id="一、逐次逼近型ADC"><a href="#一、逐次逼近型ADC" class="headerlink" title="一、逐次逼近型ADC"></a>一、逐次逼近型ADC</h2><img src="https://s2.loli.net/2022/12/11/Clv4Ln169sB5NJg.png" alt="image-20221211123629747" style="zoom:67%;" /><h2 id="二、ADC框图"><a href="#二、ADC框图" class="headerlink" title="二、ADC框图"></a>二、ADC框图</h2><h3 id="2-1完整框图"><a href="#2-1完整框图" class="headerlink" title="2.1完整框图"></a>2.1完整框图</h3><p><img src="https://s2.loli.net/2022/12/11/jhnaY34cfZxdgOy.png" alt="image-20221211131053264"></p><h3 id="2-2-分析"><a href="#2-2-分析" class="headerlink" title="2.2 分析"></a>2.2 分析</h3><p><img src="https://s2.loli.net/2022/12/11/gLi4wkvq5Ds8NSj.png" alt="image-20221211134242951"></p><hr><hr><p><img src="https://s2.loli.net/2022/12/11/LlVwzEJ1khespa7.png" alt="image-20221211143348853"></p><h3 id="2-3-输入通道对应引脚"><a href="#2-3-输入通道对应引脚" class="headerlink" title="2.3 输入通道对应引脚"></a>2.3 输入通道对应引脚</h3><table><thead><tr><th align="center"><strong>通道</strong></th><th align="center"><strong>ADC1</strong></th><th align="center"><strong>ADC2</strong></th><th align="center"><strong>ADC3</strong></th></tr></thead><tbody><tr><td align="center">通道0</td><td align="center">PA0</td><td align="center">PA0</td><td align="center">PA0</td></tr><tr><td align="center">通道1</td><td align="center">PA1</td><td align="center">PA1</td><td align="center">PA1</td></tr><tr><td align="center">通道2</td><td align="center">PA2</td><td align="center">PA2</td><td align="center">PA2</td></tr><tr><td align="center">通道3</td><td align="center">PA3</td><td align="center">PA3</td><td align="center">PA3</td></tr><tr><td align="center">通道4</td><td align="center">PA4</td><td align="center">PA4</td><td align="center">PF6</td></tr><tr><td align="center">通道5</td><td align="center">PA5</td><td align="center">PA5</td><td align="center">PF7</td></tr><tr><td align="center">通道6</td><td align="center">PA6</td><td align="center">PA6</td><td align="center">PF8</td></tr><tr><td align="center">通道7</td><td align="center">PA7</td><td align="center">PA7</td><td align="center">PF9</td></tr><tr><td align="center">通道8</td><td align="center">PB0</td><td align="center">PB0</td><td align="center">PF10</td></tr><tr><td align="center">通道9</td><td align="center">PB1</td><td align="center">PB1</td><td align="center"></td></tr><tr><td align="center">通道10</td><td align="center">PC0</td><td align="center">PC0</td><td align="center">PC0</td></tr><tr><td align="center">通道11</td><td align="center">PC1</td><td align="center">PC1</td><td align="center">PC1</td></tr><tr><td align="center">通道12</td><td align="center">PC2</td><td align="center">PC2</td><td align="center">xxxxxxxxxx #include “REG51.H”​sbit HC138_A &#x3D; P2^5; &#x2F;&#x2F; 74HC138的A引脚sbit HC138_B &#x3D; P2^6; &#x2F;&#x2F; 74HC138的B引脚sbit HC138_C &#x3D; P2^7; &#x2F;&#x2F; 74HC138的C引脚​sbit line1 &#x3D; P3^0; &#x2F;&#x2F; 第一行sbit line2 &#x3D; P3^1; &#x2F;&#x2F; 第二行sbit line3 &#x3D; P3^2; &#x2F;&#x2F; 第三行sbit line4 &#x3D; P3^3; &#x2F;&#x2F; 第四行​sbit col1 &#x3D; P3^7; &#x2F;&#x2F; 第一列sbit col2 &#x3D; P3^6; &#x2F;&#x2F; 第二列sbit col3 &#x3D; P3^5; &#x2F;&#x2F; 第三列sbit col4 &#x3D; P3^4; &#x2F;&#x2F; 第四列​unsigned char code Duanma[16] &#x3D; {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90, 0x88, 0x80, 0xc6, 0xc0, 0x86, 0x8e};​void Delay(unsigned int t);                            &#x2F;&#x2F; 延迟函数void HC138Init(unsigned int n);                        &#x2F;&#x2F; 74HC138初始化void LED_Shu(unsigned int location, unsigned int num); &#x2F;&#x2F; 数码管显示函数void ReadKeyNum();                                     &#x2F;&#x2F; 扫描矩阵键盘unsigned int KeyNumber &#x3D; 1;                            &#x2F;&#x2F; 按键值void main(){    while (1) {        ReadKeyNum();        LED_Shu(0, KeyNumber);    }}void Delay(unsigned int t) &#x2F;&#x2F; 延迟函数{    unsigned char i, j;    while (t &gt; 0) {        i &#x3D; 2;        j &#x3D; 239;        do {            while (–j)                ;        } while (–i);        t–;    }}​void HC138Init(unsigned int n) &#x2F;&#x2F; 74HC138初始化{    P2 &#x3D; 0x00; &#x2F;&#x2F; P2口输出0    if (n &#x3D;&#x3D; 4) {        HC138_C &#x3D; 1;        HC138_B &#x3D; 0; &#x2F;&#x2F; 设置74HC138为 100  4        HC138_A &#x3D; 0;    } else if (n &#x3D;&#x3D; 5) {        HC138_C &#x3D; 1; &#x2F;&#x2F; 设置74HC138为 101  5        HC138_B &#x3D; 0;        HC138_A &#x3D; 1;    } else if (n &#x3D;&#x3D; 6) {        HC138_C &#x3D; 1; &#x2F;&#x2F; 设置74HC138为 110  6        HC138_B &#x3D; 1;        HC138_A &#x3D; 0;    } else if (n &#x3D;&#x3D; 7) {        HC138_C &#x3D; 1; &#x2F;&#x2F; 设置74HC138为 111  7        HC138_B &#x3D; 1;        HC138_A &#x3D; 1;    }}​void LED_Shu(unsigned int location, unsigned int num) &#x2F;&#x2F; 数码管显示函数{    P0 &#x3D; 0XFF; &#x2F;&#x2F; P0口输出0    HC138Init(6); &#x2F;&#x2F; 位选    P0 &#x3D; 0x01 &lt;&lt; location;    HC138Init(7); &#x2F;&#x2F; 段选    P0 &#x3D; Duanma[num];    Delay(1);}​void ReadKeyNum()&#x2F;&#x2F; 扫描矩阵键盘{    P3 &#x3D; 0XFF; &#x2F;&#x2F; P3口输出1    line1 &#x3D; 0;    if(col1 &#x3D;&#x3D; 0){Delay(20);while(col1 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 1;}    if(col2 &#x3D;&#x3D; 0){Delay(20);while(col2 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 2;}    if(col3 &#x3D;&#x3D; 0){Delay(20);while(col3 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 3;}    if(col4 &#x3D;&#x3D; 0){Delay(20);while(col4 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 4;}​    P3 &#x3D; 0XFF; &#x2F;&#x2F; P3口输出1    line2 &#x3D; 0;    if(col1 &#x3D;&#x3D; 0){Delay(20);while(col1 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 5;}    if(col2 &#x3D;&#x3D; 0){Delay(20);while(col2 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 6;}    if(col3 &#x3D;&#x3D; 0){Delay(20);while(col3 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 7;}    if(col4 &#x3D;&#x3D; 0){Delay(20);while(col4 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 8;}​    P3 &#x3D; 0XFF; &#x2F;&#x2F; P3口输出1    line3 &#x3D; 0;    if(col1 &#x3D;&#x3D; 0){Delay(20);while(col1 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 9;}    if(col2 &#x3D;&#x3D; 0){Delay(20);while(col2 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 10;}    if(col3 &#x3D;&#x3D; 0){Delay(20);while(col3 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 11;}    if(col4 &#x3D;&#x3D; 0){Delay(20);while(col4 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 12;}​    P3 &#x3D; 0XFF; &#x2F;&#x2F; P3口输出1    line4 &#x3D; 0;    if(col1 &#x3D;&#x3D; 0){Delay(20);while(col1 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 13;}    if(col2 &#x3D;&#x3D; 0){Delay(20);while(col2 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 14;}    if(col3 &#x3D;&#x3D; 0){Delay(20);while(col3 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 15;}    if(col4 &#x3D;&#x3D; 0){Delay(20);while(col4 &#x3D;&#x3D; 0);Delay(20);KeyNumber &#x3D; 16;}}c</td></tr><tr><td align="center">通道13</td><td align="center">PC3</td><td align="center">PC3</td><td align="center">PC3</td></tr><tr><td align="center">通道14</td><td align="center">PC4</td><td align="center">PC4</td><td align="center"></td></tr><tr><td align="center">通道15</td><td align="center">PC5</td><td align="center">PC5</td><td align="center"></td></tr><tr><td align="center">通道16</td><td align="center">温度传感器</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">通道17</td><td align="center">内部参考电压</td><td align="center"></td><td align="center"></td></tr></tbody></table><h2 id="三、转换模式"><a href="#三、转换模式" class="headerlink" title="三、转换模式"></a>三、转换模式</h2><p>1、单次转换，非扫描模式</p><p>2、连续转换，非扫描模式</p><p>3、单次转换，扫描模式</p><p>4、连续转换，扫描模式</p><p><img src="https://s2.loli.net/2022/12/11/bnOVq5uNzW2ZRaQ.png" alt="image-20221211144033797"></p><p><img src="https://s2.loli.net/2022/12/11/4tWJ6XFqIz8Gefh.png" alt="image-20221211144356149"></p><h3 id="四、触发控制"><a href="#四、触发控制" class="headerlink" title="四、触发控制"></a>四、触发控制</h3><p><img src="https://s2.loli.net/2022/12/11/jWKTdzchoHPu3xR.png" alt="image-20221211144655873"></p><h3 id="五、数据对齐"><a href="#五、数据对齐" class="headerlink" title="五、数据对齐"></a>五、数据对齐</h3><p>右对齐</p><p><img src="https://s2.loli.net/2022/12/11/WN8xMrd2opSHPFl.png" alt="image-20221211144528294"></p><p>左对齐</p><p><img src="https://s2.loli.net/2022/12/11/3NEQ1p57oOMHdqy.png" alt="image-20221211144533308"></p><p>一般使用右对齐，读出数据直接就是转换结果</p><p>左对齐可以降低精度，只读高八位，舍去后四位</p><h3 id="六、转换时间"><a href="#六、转换时间" class="headerlink" title="六、转换时间"></a>六、转换时间</h3><p>AD转换的步骤：采样，保持，量化，编码</p><blockquote><p>其中采样、保持放一起，量化、编码放一起</p></blockquote><p>STM32 ADC的总转换时间为：T<del>CONV</del> &#x3D; 采样时间 + 12.5个ADC周期</p><blockquote><p>例如：当ADCCLK&#x3D;14MHz，采样时间为1.5个ADC周期</p><p>T<del>CONV</del> &#x3D; 1.5 + 12.5 &#x3D; 14个ADC周期 &#x3D; 1μs</p></blockquote><h3 id="七、校准"><a href="#七、校准" class="headerlink" title="七、校准"></a>七、校准</h3><p>ADC有一个内置自校准模式。校准可大幅减小因内部电容器组的变化而造成的准精度误差。校准期间，在每个电容器上都会计算出一个误差修正码(数字值)，这个码用于消除在随后的转换中每个电容器上产生的误差</p><p>建议在每次上电后执行一次校准</p><p>启动校准前， ADC必须处于关电状态超过至少两个ADC时钟周期</p><h2 id="实例：AD单通道和AD多通道"><a href="#实例：AD单通道和AD多通道" class="headerlink" title="实例：AD单通道和AD多通道"></a>实例：AD单通道和AD多通道</h2><h3 id="AD单通道"><a href="#AD单通道" class="headerlink" title="AD单通道"></a>AD单通道</h3><p>功能实现：用电位计产生0~3.3V的连续变化的模拟电压，在LCD显示转换后的数据和处理后得到的电压值</p><p>AD.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_ADCCLKConfig(RCC_PCLK2_Div6);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;<span class="comment">//模拟输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择规则组的输入通道</span></span><br><span class="line">ADC_RegularChannelConfig(ADC1,ADC_Channel_0,<span class="number">1</span>,ADC_SampleTime_55Cycles5);</span><br><span class="line"><span class="comment">//初始化ADC</span></span><br><span class="line">ADC_InitTypeDef ADC_InitTypeDefstructure;</span><br><span class="line">ADC_InitTypeDefstructure.ADC_DataAlign = ADC_DataAlign_Right;<span class="comment">//对齐方式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;<span class="comment">//触发源选择</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_Mode = ADC_Mode_Independent;<span class="comment">//配置ADC工作模式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ContinuousConvMode = DISABLE;<span class="comment">//连续转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ScanConvMode = DISABLE;<span class="comment">//扫描转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_NbrOfChannel = <span class="number">1</span>;<span class="comment">//通道数目</span></span><br><span class="line"></span><br><span class="line">ADC_Init(ADC1,&amp;ADC_InitTypeDefstructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启ADC</span></span><br><span class="line">ADC_Cmd(ADC1,ENABLE);</span><br><span class="line"><span class="comment">//校准ADC</span></span><br><span class="line">ADC_ResetCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetResetCalibrationStatus(ADC1) == SET);<span class="comment">//等待校准完成</span></span><br><span class="line">ADC_StartCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetCalibrationStatus(ADC1) == SET);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);<span class="comment">//软件触发转换</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC) == RESET);<span class="comment">//获取标志位状态</span></span><br><span class="line"><span class="keyword">return</span> ADC_GetConversionValue(ADC1);<span class="comment">//获取转换值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AD.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __AD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __AD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AD.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> value;</span><br><span class="line"><span class="type">float</span> V;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">AD_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;ADValue:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;V:0.00V&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">value = AD_GetValue();</span><br><span class="line">V = (<span class="type">float</span>)value /<span class="number">4095</span> * <span class="number">3.3</span>;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">9</span>,value,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">3</span>,V,<span class="number">1</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,(<span class="type">uint16_t</span>)(V*<span class="number">100</span>)%<span class="number">100</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1 | GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_1) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_2) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LCD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LCD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="AD多通道"><a href="#AD多通道" class="headerlink" title="AD多通道"></a>AD多通道</h3><p>功能实现：同时测光敏、热敏、反射红外、电位计的转换值，并显示</p><p>AD.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_ADCCLKConfig(RCC_PCLK2_Div6);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;<span class="comment">//模拟输入</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化ADC</span></span><br><span class="line">ADC_InitTypeDef ADC_InitTypeDefstructure;</span><br><span class="line">ADC_InitTypeDefstructure.ADC_DataAlign = ADC_DataAlign_Right;<span class="comment">//对齐方式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;<span class="comment">//触发源选择</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_Mode = ADC_Mode_Independent;<span class="comment">//配置ADC工作模式</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ContinuousConvMode = DISABLE;<span class="comment">//连续转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_ScanConvMode = DISABLE;<span class="comment">//扫描转换</span></span><br><span class="line">ADC_InitTypeDefstructure.ADC_NbrOfChannel = <span class="number">1</span>;<span class="comment">//通道数目</span></span><br><span class="line"></span><br><span class="line">ADC_Init(ADC1,&amp;ADC_InitTypeDefstructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启ADC</span></span><br><span class="line">ADC_Cmd(ADC1,ENABLE);</span><br><span class="line"><span class="comment">//校准ADC</span></span><br><span class="line">ADC_ResetCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetResetCalibrationStatus(ADC1) == SET);<span class="comment">//等待校准完成</span></span><br><span class="line">ADC_StartCalibration(ADC1);<span class="comment">//复位校准</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetCalibrationStatus(ADC1) == SET);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">uint8_t</span> ADC_Channel)</span>&#123;</span><br><span class="line"><span class="comment">//选择规则组的输入通道</span></span><br><span class="line">ADC_RegularChannelConfig(ADC1,ADC_Channel,<span class="number">1</span>,ADC_SampleTime_55Cycles5);</span><br><span class="line">ADC_SoftwareStartConvCmd(ADC1,ENABLE);<span class="comment">//软件触发转换</span></span><br><span class="line"><span class="keyword">while</span>(ADC_GetFlagStatus(ADC1,ADC_FLAG_EOC) == RESET);<span class="comment">//获取标志位状态</span></span><br><span class="line"><span class="keyword">return</span> ADC_GetConversionValue(ADC1);<span class="comment">//获取转换值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AD.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __AD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __AD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">AD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">AD_GetValue</span><span class="params">(<span class="type">uint8_t</span> ADC_Channel)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;AD.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> AD0,AD1,AD2,AD3;</span><br><span class="line"><span class="type">float</span> V;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">AD_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;AD0:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;AD1:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&quot;AD2:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">4</span>,<span class="number">1</span>,<span class="string">&quot;AD3:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">AD0 = AD_GetValue(ADC_Channel_0);</span><br><span class="line">AD1 = AD_GetValue(ADC_Channel_1);</span><br><span class="line">AD2 = AD_GetValue(ADC_Channel_2);</span><br><span class="line">AD3 = AD_GetValue(ADC_Channel_3);</span><br><span class="line"></span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,AD0,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,AD1,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">3</span>,<span class="number">5</span>,AD2,<span class="number">4</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">4</span>,<span class="number">5</span>,AD3,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1 | GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_1) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadOutputDataBit(GPIOA,GPIO_Pin_2) == <span class="number">0</span>)&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LCD_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LCD_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LCD_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_on</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_off</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED1_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">LED2_Turn</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时器</title>
      <link href="/post/2e5216dd.html"/>
      <url>/post/2e5216dd.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、TIM定时中断"><a href="#一、TIM定时中断" class="headerlink" title="一、TIM定时中断"></a>一、TIM定时中断</h1><p>定时器可以对输入的时钟进行<strong>计数</strong>，并在计数值达到设定值时<strong>触发中断</strong> </p><blockquote><p>例：stm32中定时器的基准时钟一般是72MHZ，【周期是频率的倒数1T &#x3D; 1&#x2F;72us】，如果计数72个，就是1us，计数72000个，就是1ms</p></blockquote><p>16位计数器、预分频器、自动重装寄存器的时基单元，在72MHz计数时钟下可以实现最大59.65s的定时</p><blockquote><p>计数器：进行计数的寄存器，每来一个时钟，计数器加一</p><p>预分频器：对计数器时钟进行分频</p><p>自动重装寄存器：计数器的目标值，设定计多少数申请中断</p><p>2^16^&#x3D;65536  预分频器和自动重装寄存器设置最大，定时器时间最大为59.65s【1&#x2F;(72MHZ&#x2F;65536*65536)】</p></blockquote><p>不仅具备基本的定时中断功能，而且还包含内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等多种功能</p><p>根据复杂度和应用场景分为了高级定时器、通用定时器、基本定时器三种类型</p><h1 id="二、定时器类型"><a href="#二、定时器类型" class="headerlink" title="二、定时器类型"></a>二、定时器类型</h1><table><thead><tr><th align="center"><strong>类型</strong></th><th align="center"><strong>编号</strong></th><th align="center"><strong>总线</strong></th><th align="center"><strong>功能</strong></th></tr></thead><tbody><tr><td align="center">高级定时器</td><td align="center">TIM1、TIM8</td><td align="center">APB2</td><td align="center">拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</td></tr><tr><td align="center">通用定时器</td><td align="center">TIM2、TIM3、TIM4、TIM5</td><td align="center">APB1</td><td align="center">拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</td></tr><tr><td align="center">基本定时器</td><td align="center">TIM6、TIM7</td><td align="center">APB1</td><td align="center">拥有定时中断、主模式触发DAC的功能</td></tr></tbody></table><blockquote><p>STM32F103C8T6定时器资源：TIM1、TIM2、TIM3、TIM4</p></blockquote><h2 id="2-1基本定时器"><a href="#2-1基本定时器" class="headerlink" title="2.1基本定时器"></a>2.1基本定时器</h2><p>TIM6和TIM7定时器的主要功能包括：</p><ul><li><p>16位自动重装载累加计数器 </p></li><li><p>16位可编程(可实时修改)预分频器，用于对输入的时钟按系数为1～65536之间的任意数值分频</p></li><li><p>触发DAC的同步电路 </p></li><li><p>在更新事件(计数器溢出)时产生中断&#x2F;DMA请求</p></li></ul><img src="https://s2.loli.net/2022/11/29/xXP9tsyWfS4B2Hc.png" alt="image-20221126150307421" style="zoom:67%;" /><h3 id="2-1-1分频的作用"><a href="#2-1-1分频的作用" class="headerlink" title="2.1.1分频的作用"></a>2.1.1分频的作用</h3><p>便于计算，计时更加精确</p><ul><li><p>以12MHZ为例：</p><ol><li><p>不分频</p><p>一个时钟周期为 T &#x3D; 1&#x2F;12 us，如果我们需要1us，需要12T，这个很好理解吧，但是我们使用的时候经常是要以秒（s）微秒（ms）进行计时的，当我们需要1ms的时候，我们就需要计数12000T，这个数是已经很大了</p></li><li><p>12分频</p><p>12分频后，12MHZ变为1MHZ，一个时钟周期为 T &#x3D; 1&#x2F;1 us &#x3D; 1us，如果我们需要1us，需要1T；需要1ms时，只需要1000T</p></li></ol></li></ul><p>​我们很清楚的看到分频以后，计一次数就是1us，这不但利用我们去计算定时时间，而且计算的次数明显减少了，那么为什么说计数次数减少就可以提高精度呢？可以想一下平时使用的钟表，当我们使用的时间长了，表就会不太准，时钟也是一样，我们计数次数多了，难免会产生误差，一次两次小误差肯能影响不大，但是成千上百次误差的影响那可就大了</p><p>定时时间更长</p><ul><li><p>以72MHZ为例</p><ol><li><p>不分频</p><p>一个时钟周期为 T &#x3D; 1&#x2F;72 us，16位定时器的范围是0~65535，那么一个范围计数完成的时间大概是0.94ms</p></li><li><p>3分频</p><p>3分频后，72MHZ变为24MHZ，一个时钟周期为 T &#x3D; 1&#x2F;24 us ，那么一个范围计数完成的时间大概是2.73ms</p></li><li><p>72分频</p><p>72MHZ变为1MHZ，一个时钟周期为 T &#x3D;1 us ，那么一个范围计数完成的时间大概是65.5ms</p></li></ol></li></ul><p>​由于分频以后，到达同一个计数时间的计数次数减少，所以在16位的定时器范围内，定时器的定时时间最大值增加【定时器计数最大值是不可改变的，2^16^，所以我们只能改变频率来改变计数最大时间】</p><h3 id="2-1-2预分频器"><a href="#2-1-2预分频器" class="headerlink" title="2.1.2预分频器"></a>2.1.2预分频器</h3><p>​预分频可以以系数介于1至65536之间的任意数值对计数器时钟分频。它是通过一个16位寄存器(TIMx_PSC)的计数实现分频。因为TIMx_PSC控制寄存器具有缓冲，可以在运行过程中改变它的数值，新的预分频数值将在下一个更新事件时起作用</p><p><strong>实际分频数 &#x3D; 分频器的值 + 1</strong></p><p><strong>计数器计数频率：CK_CNT &#x3D; CK_PSC &#x2F; (PSC + 1)</strong></p><img src="https://s2.loli.net/2022/11/29/LiHjea9y3CtvoT6.png" alt="image-20221126150902581" style="zoom: 67%;" /><p>​缓冲器（也叫作影子寄存器），是实际起作用的寄存器。比如：在计数过程中突然改变分频系数，那么一个周期前半部分和后半部分的频率就会不一致，这可能会产生一些不好的影响。但是加上缓冲器后，改变分频系数并不会立即改变这一个周期的频率，它会等到这个周期结束后，产生更新事件，才会去改变，这样就保证了stm32的严谨性</p><h3 id="2-1-3计数模式"><a href="#2-1-3计数模式" class="headerlink" title="2.1.3计数模式"></a>2.1.3计数模式</h3><img src="https://s2.loli.net/2022/11/29/CmI3bSXLFlxajKH.png" alt="image-20221126190730609" style="zoom: 50%;" /><p><strong>计数器溢出频率：CK_CNT_OV  &#x3D;  CK_CNT &#x2F; (ARR + 1)  &#x3D;  CK_PSC &#x2F; (PSC + 1) &#x2F; (ARR + 1)</strong></p><p>计数器<strong>使用</strong>影子寄存器  和   计数器<strong>不使用</strong>影子寄存器</p><img src="https://s2.loli.net/2022/11/29/2K5PUXlOYSMD8QT.png" alt="image-20221126192339034" style="zoom: 67%;" /><h3 id="2-1-4主模式触发DAC功能"><a href="#2-1-4主模式触发DAC功能" class="headerlink" title="2.1.4主模式触发DAC功能"></a>2.1.4主模式触发DAC功能</h3><p>​当我们使用DAC时，需要每隔一段时间都要输出一段波形，按正常思路来说，我们要使用中断，每隔一段时间调用一次中断里面的代码，实现DAC转换。但是频繁调用中断会影响到主程序的进行，阻碍其他中断的进行</p><p>​如果我们使用主模式的话，就可以把定时器的<strong>更新事件</strong>映射到触发输出TRGO，然后将TRGO接到DAC触发转换引脚上，这样就不需要<strong>更新中断</strong>来实现DAC转换了。整个过程不需要软件的参与，实现了硬件的自动化</p><img src="https://s2.loli.net/2022/11/29/OYA7MyN8UnKJVRb.png" alt="image-20221126153543448" style="zoom: 50%;" /><h2 id="2-2通用定时器"><a href="#2-2通用定时器" class="headerlink" title="2.2通用定时器"></a>2.2通用定时器</h2><p>通用TIMx (TIM2、TIM3、TIM4和TIM5)定时器功能包括： </p><ul><li><p>16位向上、向下、向上&#x2F;向下自动装载计数器 </p></li><li><p>16位可编程(可以实时修改)预分频器，计数器时钟频率的分频系数为1～65536之间的任意数值 </p></li><li><p>4个独立通道： ─ 输入捕获 ─ 输出比较 ─ PWM生成(边缘或中间对齐模式) ─ 单脉冲模式输出 </p></li><li><p>使用外部信号控制定时器和定时器互连的同步电路 </p></li><li><p>如下事件发生时产生中断&#x2F;DMA：</p><ul><li>─ 更新：计数器向上溢出&#x2F;向下溢出，计数器初始化(通过软件或者内部&#x2F;外部触发) </li><li>─ 触发事件(计数器启动、停止、初始化或者由内部&#x2F;外部触发计数)</li><li>─ 输入捕获 </li><li>─ 输出比较</li></ul></li><li><p>支持针对定位的增量(正交)编码器和霍尔传感器电路 </p></li><li><p>触发输入作为外部时钟或者按周期的电流管理</p></li></ul><img src="https://s2.loli.net/2022/11/29/7DrZAa2GSdv9xOe.png" alt="image-20221126180204480" style="zoom:67%;" /><img src="https://s2.loli.net/2022/11/29/DU1tOzaoAjc6s5w.png" alt="image-20221126180323300" style="zoom: 67%;" /><h3 id="2-2-1计数模式"><a href="#2-2-1计数模式" class="headerlink" title="2.2.1计数模式"></a>2.2.1计数模式</h3><p>向上计数模式、向下计数模式、中央对齐模式(向上&#x2F;向下计数)</p><img src="https://s2.loli.net/2022/11/29/DPd8LoY5XCcarvj.png" alt="image-20221126181637041" style="zoom:67%;" /><p>向上计数模式：每次+1，加到目标值，申请中断，归零</p><p>向下计数模式：每次-1，减到目标值，申请中断，归起始值</p><p>中央对齐模式(向上&#x2F;向下计数)：每次+1，加到目标值，申请中断；之后每次-1，减到起始值，申请中断</p><h2 id="2-3高级定时器"><a href="#2-3高级定时器" class="headerlink" title="2.3高级定时器"></a>2.3高级定时器</h2><img src="https://s2.loli.net/2022/11/29/KaRTzxnmFNyL1DQ.png" alt="image-20221126182703940" style="zoom:67%;" /><h1 id="三、定时中断基本结构"><a href="#三、定时中断基本结构" class="headerlink" title="三、定时中断基本结构"></a>三、定时中断基本结构</h1><img src="https://s2.loli.net/2022/11/29/7D3u2HbwmkqO5nJ.png" alt="image-20221126183112649" style="zoom:67%;" /><p>使用中断输出控制的原因：</p><p>定时器模块中很多地方都要申请中断，定时器图中的<strong>向上折的箭头</strong>都表示要申请中断，所以需要控制这些中断，如果需要就允许，不需要就不允许</p><h3 id="时钟树"><a href="#时钟树" class="headerlink" title="时钟树"></a>时钟树</h3><img src="https://s2.loli.net/2022/11/29/kdCRqbZ3MQrpLGz.png" alt="image-20221126193508331" style="zoom: 67%;" /><p>如果不改变SystemInit里面的配置，三种定时器中内部基准时钟均为72MHZ</p><h1 id="实例一、定时中断和内外部时钟代码实现"><a href="#实例一、定时中断和内外部时钟代码实现" class="headerlink" title="实例一、定时中断和内外部时钟代码实现"></a>实例一、定时中断和内外部时钟代码实现</h1><h2 id="1-1、定时中断"><a href="#1-1、定时中断" class="headerlink" title="1.1、定时中断"></a>1.1、定时中断</h2><p><strong>功能实现：</strong>每隔1S计数一次</p><p><strong>注意：</strong>需要手动清除中断初始化时产生的中断标记，不然默认其实值为1，而不是0</p><p>timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10000</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">7200</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位，避免刚初始化完就进入中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使能中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//void TIM2_IRQHandler(void)&#123;</span></span><br><span class="line"><span class="comment">////判断中断</span></span><br><span class="line"><span class="comment">//if(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////清除中断标志位</span></span><br><span class="line"><span class="comment">//TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Num:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; </span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,num,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//OLED_ShowNum(2,1,TIM_GetCounter(TIM2),5);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断中断</span></span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><hr><p>OLED.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED_Font.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引脚配置*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_W_SCL(x)GPIO_WriteBit(GPIOB, GPIO_Pin_8, (BitAction)(x))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_W_SDA(x)GPIO_WriteBit(GPIOB, GPIO_Pin_9, (BitAction)(x))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引脚初始化*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;</span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line"> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SDA(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  I2C开始</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_Start</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_W_SDA(<span class="number">1</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SDA(<span class="number">0</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  I2C停止</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_Stop</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_W_SDA(<span class="number">0</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SDA(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  I2C发送一个字节</span></span><br><span class="line"><span class="comment">  * @param  Byte 要发送的一个字节</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_I2C_SendByte</span><span class="params">(<span class="type">uint8_t</span> Byte)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_W_SDA(Byte &amp; (<span class="number">0x80</span> &gt;&gt; i));</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);</span><br><span class="line">OLED_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">OLED_W_SCL(<span class="number">1</span>);<span class="comment">//额外的一个时钟，不处理应答信号</span></span><br><span class="line">OLED_W_SCL(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED写命令</span></span><br><span class="line"><span class="comment">  * @param  Command 要写入的命令</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WriteCommand</span><span class="params">(<span class="type">uint8_t</span> Command)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_I2C_Start();</span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x78</span>);<span class="comment">//从机地址</span></span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x00</span>);<span class="comment">//写命令</span></span><br><span class="line">OLED_I2C_SendByte(Command); </span><br><span class="line">OLED_I2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED写数据</span></span><br><span class="line"><span class="comment">  * @param  Data 要写入的数据</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_WriteData</span><span class="params">(<span class="type">uint8_t</span> Data)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_I2C_Start();</span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x78</span>);<span class="comment">//从机地址</span></span><br><span class="line">OLED_I2C_SendByte(<span class="number">0x40</span>);<span class="comment">//写数据</span></span><br><span class="line">OLED_I2C_SendByte(Data);</span><br><span class="line">OLED_I2C_Stop();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED设置光标位置</span></span><br><span class="line"><span class="comment">  * @param  Y 以左上角为原点，向下方向的坐标，范围：0~7</span></span><br><span class="line"><span class="comment">  * @param  X 以左上角为原点，向右方向的坐标，范围：0~127</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_SetCursor</span><span class="params">(<span class="type">uint8_t</span> Y, <span class="type">uint8_t</span> X)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteCommand(<span class="number">0xB0</span> | Y);<span class="comment">//设置Y位置</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x10</span> | ((X &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>));<span class="comment">//设置X位置高4位</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x00</span> | (X &amp; <span class="number">0x0F</span>));<span class="comment">//设置X位置低4位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED清屏</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;  </span><br><span class="line"><span class="type">uint8_t</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">8</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_SetCursor(j, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteData(<span class="number">0x00</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示一个字符</span></span><br><span class="line"><span class="comment">  * @param  Line 行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Char 要显示的一个字符，范围：ASCII可见字符</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> Char)</span></span><br><span class="line">&#123;      </span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line">OLED_SetCursor((Line - <span class="number">1</span>) * <span class="number">2</span>, (Column - <span class="number">1</span>) * <span class="number">8</span>);<span class="comment">//设置光标位置在上半部分</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteData(OLED_F8x16[Char - <span class="string">&#x27; &#x27;</span>][i]);<span class="comment">//显示上半部分内容</span></span><br><span class="line">&#125;</span><br><span class="line">OLED_SetCursor((Line - <span class="number">1</span>) * <span class="number">2</span> + <span class="number">1</span>, (Column - <span class="number">1</span>) * <span class="number">8</span>);<span class="comment">//设置光标位置在下半部分</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_WriteData(OLED_F8x16[Char - <span class="string">&#x27; &#x27;</span>][i + <span class="number">8</span>]);<span class="comment">//显示下半部分内容</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示字符串</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  String 要显示的字符串，范围：ASCII可见字符</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> *String)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; String[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, String[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED次方函数</span></span><br><span class="line"><span class="comment">  * @retval 返回值等于X的Y次方</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">OLED_Pow</span><span class="params">(<span class="type">uint32_t</span> X, <span class="type">uint32_t</span> Y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> Result = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (Y--)</span><br><span class="line">&#123;</span><br><span class="line">Result *= X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（十进制，正数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：0~4294967295</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~10</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, Number / OLED_Pow(<span class="number">10</span>, Length - i - <span class="number">1</span>) % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（十进制，带符号数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：-2147483648~2147483647</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~10</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowSignedNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">int32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="type">uint32_t</span> Number1;</span><br><span class="line"><span class="keyword">if</span> (Number &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column, <span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">Number1 = Number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column, <span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">Number1 = -Number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i + <span class="number">1</span>, Number1 / OLED_Pow(<span class="number">10</span>, Length - i - <span class="number">1</span>) % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（十六进制，正数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：0~0xFFFFFFFF</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~8</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowHexNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i, SingleNumber;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">SingleNumber = Number / OLED_Pow(<span class="number">16</span>, Length - i - <span class="number">1</span>) % <span class="number">16</span>;</span><br><span class="line"><span class="keyword">if</span> (SingleNumber &lt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, SingleNumber + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, SingleNumber - <span class="number">10</span> + <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED显示数字（二进制，正数）</span></span><br><span class="line"><span class="comment">  * @param  Line 起始行位置，范围：1~4</span></span><br><span class="line"><span class="comment">  * @param  Column 起始列位置，范围：1~16</span></span><br><span class="line"><span class="comment">  * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111</span></span><br><span class="line"><span class="comment">  * @param  Length 要显示数字的长度，范围：1~16</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowBinNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowChar(Line, Column + i, Number / OLED_Pow(<span class="number">2</span>, Length - i - <span class="number">1</span>) % <span class="number">2</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  OLED初始化</span></span><br><span class="line"><span class="comment">  * @param  无</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> i, j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)<span class="comment">//上电延时</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">1000</span>; j++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">OLED_I2C_Init();<span class="comment">//端口初始化</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xAE</span>);<span class="comment">//关闭显示</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xD5</span>);<span class="comment">//设置显示时钟分频比/振荡器频率</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x80</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA8</span>);<span class="comment">//设置多路复用率</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x3F</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xD3</span>);<span class="comment">//设置显示偏移</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0x40</span>);<span class="comment">//设置显示开始行</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA1</span>);<span class="comment">//设置左右方向，0xA1正常 0xA0左右反置</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xC8</span>);<span class="comment">//设置上下方向，0xC8正常 0xC0上下反置</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xDA</span>);<span class="comment">//设置COM引脚硬件配置</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x12</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0x81</span>);<span class="comment">//设置对比度控制</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0xCF</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xD9</span>);<span class="comment">//设置预充电周期</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0xF1</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xDB</span>);<span class="comment">//设置VCOMH取消选择级别</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x30</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA4</span>);<span class="comment">//设置整个显示打开/关闭</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xA6</span>);<span class="comment">//设置正常/倒转显示</span></span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0x8D</span>);<span class="comment">//设置充电泵</span></span><br><span class="line">OLED_WriteCommand(<span class="number">0x14</span>);</span><br><span class="line"></span><br><span class="line">OLED_WriteCommand(<span class="number">0xAF</span>);<span class="comment">//开启显示</span></span><br><span class="line"></span><br><span class="line">OLED_Clear();<span class="comment">//OLED清屏</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __OLED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __OLED_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_Clear</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowChar</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> Char)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowString</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">char</span> *String)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowSignedNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">int32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowHexNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">OLED_ShowBinNum</span><span class="params">(<span class="type">uint8_t</span> Line, <span class="type">uint8_t</span> Column, <span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-2、外部时钟"><a href="#1-2、外部时钟" class="headerlink" title="1.2、外部时钟"></a>1.2、外部时钟</h2><p><strong>功能实现：</strong>每遮挡一次计数器+1</p><p><strong>注意：</strong>如果出现遮挡一次跳跃好多次，需要添加滤波</p><p>timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择外部时钟</span></span><br><span class="line">TIM_ETRClockMode2Config(TIM2,TIM_ExtTRGPSC_OFF,TIM_ExtTRGPolarity_NonInverted,<span class="number">0x0f</span>);<span class="comment">//这里要添加滤波，不然会跳好多次</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">1</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位，避免刚初始化完就进入中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使能中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">Timer_GetCount</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> TIM_GetCounter(TIM2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//void TIM2_IRQHandler(void)&#123;</span></span><br><span class="line"><span class="comment">////判断中断</span></span><br><span class="line"><span class="comment">//if(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////清除中断标志位</span></span><br><span class="line"><span class="comment">//TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">Timer_GetCount</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Num:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;CNT:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; </span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,num,<span class="number">5</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">5</span>,Timer_GetCount(),<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断中断</span></span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span><br><span class="line">num++;</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四、TIM输出比较"><a href="#四、TIM输出比较" class="headerlink" title="四、TIM输出比较"></a>四、TIM输出比较</h1><p>OC（Output Compare）输出比较</p><p>输出比较可以通过比较CNT与CCR寄存器值的关系，来对输出电平进行置1、置0或翻转的操作，用于输出一定频率和占空比的PWM波形</p><blockquote><p>CCR是输出比较寄存器</p><img src="https://s2.loli.net/2022/11/29/TVSgQeYa23qJA6u.png" alt="image-20221128195422185" style="zoom: 67%;" /></blockquote><p>每个高级定时器和通用定时器都拥有4个输出比较通道</p><p>高级定时器的前3个通道额外拥有死区生成和互补输出的功能</p><h2 id="4-1、PWM简介"><a href="#4-1、PWM简介" class="headerlink" title="4.1、PWM简介"></a>4.1、PWM简介</h2><p>PWM（Pulse Width Modulation）脉冲宽度调制</p><p>在具有惯性的系统中，可以通过对一系列脉冲的宽度进行调制，来等效地获得所需要的模拟参量，常应用于电机控速等领域</p><p>PWM参数：<strong>频率</strong> &#x3D; 1 &#x2F; TS      **占空比 **&#x3D; TON &#x2F; TS      <strong>分辨率</strong> &#x3D; 占空比变化步距</p><blockquote><p>占空比越大，模拟出的电压越趋近于高电平，占空比越小，模拟出的电压越趋近于低电平</p></blockquote><p><img src="https://s2.loli.net/2022/11/29/gWckmYJwxGRTQuM.png" alt="image-20221128195700005"></p><h2 id="4-2、输出比较通道"><a href="#4-2、输出比较通道" class="headerlink" title="4.2、输出比较通道"></a>4.2、输出比较通道</h2><h3 id="4-2-1输出比较通道-通用定时器"><a href="#4-2-1输出比较通道-通用定时器" class="headerlink" title="4.2.1输出比较通道(通用定时器)"></a>4.2.1输出比较通道(通用定时器)</h3><img src="https://s2.loli.net/2022/11/29/O1VE3Xpk2FJuNmA.png" alt="image-20221128201040691" style="zoom: 67%;" /><h3 id="4-2-2输出比较通道-高级定时器"><a href="#4-2-2输出比较通道-高级定时器" class="headerlink" title="4.2.2输出比较通道(高级定时器)"></a>4.2.2输出比较通道(高级定时器)</h3><img src="https://s2.loli.net/2022/11/29/wuxyh1sdYmSfDL8.png" alt="image-20221129103943044" style="zoom:67%;" /><h2 id="4-3-输出比较模式"><a href="#4-3-输出比较模式" class="headerlink" title="4.3 输出比较模式"></a>4.3 输出比较模式</h2><p><img src="https://s2.loli.net/2022/11/29/LQb7hR4EaISBAVk.png" alt="image-20221128203052660"></p><h2 id="4-4PWM基本结构"><a href="#4-4PWM基本结构" class="headerlink" title="4.4PWM基本结构"></a>4.4PWM基本结构</h2><img src="https://s2.loli.net/2022/11/29/6P2Bl5JXREKVMIs.png" alt="image-20221128203914556" style="zoom:67%;" /><p>PWM频率： Freq &#x3D; { CK_PSC &#x2F; (PSC + 1) }  &#x2F;  (ARR + 1)</p><blockquote><p>PWM的频率&#x3D;计数器更新频率</p></blockquote><p>PWM占空比： Duty &#x3D; CCR &#x2F; (ARR + 1)</p><p>PWM分辨率： Reso &#x3D; 1 &#x2F; (ARR + 1)</p><blockquote><p>分辨率定义为占空比最小的变化步距，占空比变化的越细腻越好</p></blockquote><h1 id="五、舵机"><a href="#五、舵机" class="headerlink" title="五、舵机"></a>五、舵机</h1><p>舵机是一种根据输入PWM信号占空比来控制输出角度的装置</p><p>输入PWM信号要求：周期为20ms，高电平宽度为0.5ms~2.5ms</p><img src="https://s2.loli.net/2022/11/29/XNZ5URiz8J1wLxG.png" alt="image-20221128210052386" style="zoom:67%;" /><p>在这里，PWM当做通讯协议使用，不是PWM等效一个模拟输出</p><img src="https://s2.loli.net/2022/11/29/hnjrV8mFR3bcKf9.png" alt="image-20221128210413737" style="zoom:67%;" /><h1 id="六、直流电机"><a href="#六、直流电机" class="headerlink" title="六、直流电机"></a>六、直流电机</h1><p>直流电机是一种将电能转换为机械能的装置，有两个电极，当电极正接时，电机正转，当电极反接时，电机反转</p><p>直流电机属于<strong>大功率器件</strong>，<strong>GPIO口无法直接驱动</strong>，需要配合电机驱动电路来操作</p><p>TB6612是一款双路H桥型的直流电机驱动芯片，可以驱动两个直流电机并且控制其转速和方向</p><img src="https://s2.loli.net/2022/11/29/hOJVKElbmrjdMf3.png" alt="image-20221128210854526" style="zoom:67%;" /><img src="https://s2.loli.net/2022/11/29/84RfNLopVDwPyXb.png" alt="image-20221128211613707" style="zoom:70%;" /><h1 id="实例二、PWM驱动呼吸灯-amp-舵机-amp-直流电机代码实现"><a href="#实例二、PWM驱动呼吸灯-amp-舵机-amp-直流电机代码实现" class="headerlink" title="实例二、PWM驱动呼吸灯&amp;舵机&amp;直流电机代码实现"></a>实例二、PWM驱动呼吸灯&amp;舵机&amp;直流电机代码实现</h1><h2 id="2-1、PWM驱动LED呼吸灯"><a href="#2-1、PWM驱动LED呼吸灯" class="headerlink" title="2.1、PWM驱动LED呼吸灯"></a>2.1、PWM驱动LED呼吸灯</h2><p><strong>功能实现：</strong>LED实现呼吸效果</p><p><strong>注意：</strong>这里用过改变CCR的值来改变占空，比达到呼吸效果；但是占空比的值是有CCR和ARR+1共同决定的</p><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">PWM_SetCompare1(i);</span><br><span class="line">Delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">PWM_SetCompare1(<span class="number">100</span>-i);</span><br><span class="line">Delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><hr><p>Delay.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  微秒级延时</span></span><br><span class="line"><span class="comment">  * @param  xus 延时时长，范围：0~233015</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint32_t</span> xus)</span></span><br><span class="line">&#123;</span><br><span class="line">SysTick-&gt;LOAD = <span class="number">72</span> * xus;<span class="comment">//设置定时器重装值</span></span><br><span class="line">SysTick-&gt;VAL = <span class="number">0x00</span>;<span class="comment">//清空当前计数值</span></span><br><span class="line">SysTick-&gt;CTRL = <span class="number">0x00000005</span>;<span class="comment">//设置时钟源为HCLK，启动定时器</span></span><br><span class="line"><span class="keyword">while</span>(!(SysTick-&gt;CTRL &amp; <span class="number">0x00010000</span>));<span class="comment">//等待计数到0</span></span><br><span class="line">SysTick-&gt;CTRL = <span class="number">0x00000004</span>;<span class="comment">//关闭定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  毫秒级延时</span></span><br><span class="line"><span class="comment">  * @param  xms 延时时长，范围：0~4294967295</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">uint32_t</span> xms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(xms--)</span><br><span class="line">&#123;</span><br><span class="line">Delay_us(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @brief  秒级延时</span></span><br><span class="line"><span class="comment">  * @param  xs 延时时长，范围：0~4294967295</span></span><br><span class="line"><span class="comment">  * @retval 无</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_s</span><span class="params">(<span class="type">uint32_t</span> xs)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(xs--)</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Delay.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __DELAY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __DELAY_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_us</span><span class="params">(<span class="type">uint32_t</span> us)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">uint32_t</span> ms)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_s</span><span class="params">(<span class="type">uint32_t</span> s)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="拓展：keil5自带示波器使用"><a href="#拓展：keil5自带示波器使用" class="headerlink" title="拓展：keil5自带示波器使用"></a>拓展：keil5自带示波器使用</h2><h3 id="1-点击魔术棒"><a href="#1-点击魔术棒" class="headerlink" title="1.点击魔术棒"></a>1.点击魔术棒</h3><p><img src="https://s2.loli.net/2022/11/29/viyxJ9te8qOM7g4.png" alt="image-20221128235705370"></p><h3 id="2-进入Debug"><a href="#2-进入Debug" class="headerlink" title="2.进入Debug"></a>2.进入Debug</h3><p>先设置为Use Simulator，然后去设置Dialog DLL和其后面的Parameter.</p><p>其中将Dialog DLL设置为：DARMSTM.DLL</p><p>Parameter设置为-p单片机型号</p><img src="https://s2.loli.net/2022/11/29/J7hwnFYvy9reRdk.png" alt="image-20221128235745302" style="zoom: 75%;" /><h3 id="3-进入调试模式，调出示波器"><a href="#3-进入调试模式，调出示波器" class="headerlink" title="3.进入调试模式，调出示波器"></a>3.进入调试模式，调出示波器</h3><p><img src="https://s2.loli.net/2022/11/29/o1bEQYhpl4v6qTA.png" alt="image-20221129000242745"></p><h3 id="4-点击Setup设置仿真端口"><a href="#4-点击Setup设置仿真端口" class="headerlink" title="4.点击Setup设置仿真端口"></a>4.点击Setup设置仿真端口</h3><p> 在里面加入要查看的端口，格式为PORTX.Y【X为A,B,C….;Y为1，2，3，….】</p><p><img src="https://s2.loli.net/2022/11/29/JY4VaLPX3w6oWiU.png" alt="image-20221129000321043"></p><img src="https://s2.loli.net/2022/11/29/SWRhgBnNp9k5GAe.png" alt="image-20221129000506238" style="zoom:60%;" /><img src="https://s2.loli.net/2022/11/29/qE7mSpNaxvHFA9y.png" alt="image-20221129000615129" style="zoom:70%;" /><h3 id="5-查看仿真效果"><a href="#5-查看仿真效果" class="headerlink" title="5.查看仿真效果"></a>5.查看仿真效果</h3><img src="https://s2.loli.net/2022/11/29/fIkGxOhPtBDpV4M.png" alt="image-20221129000647017" style="zoom:55%;" /><h2 id="2-2、PWM驱动舵机"><a href="#2-2、PWM驱动舵机" class="headerlink" title="2.2、PWM驱动舵机"></a>2.2、PWM驱动舵机</h2><p><strong>功能实现：</strong>通过按键控制舵机旋转角度</p><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">20000</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC2Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare2</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare2(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare2</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Servo.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_Init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_SetAngle</span><span class="params">(<span class="type">float</span> Angle)</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_SetCompare2(Angle / <span class="number">180</span> * <span class="number">2000</span> + <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Servo.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __SERVO_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __SERVO_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_SetAngle</span><span class="params">(<span class="type">float</span> Angle)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Servo.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">float</span> Angle;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Servo_Init();</span><br><span class="line">Key_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;Angle:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum = Key_GetNum();</span><br><span class="line"><span class="keyword">if</span> (KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Angle += <span class="number">30</span>;</span><br><span class="line"><span class="keyword">if</span> (Angle &gt; <span class="number">180</span>)</span><br><span class="line">&#123;</span><br><span class="line">Angle = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Servo_SetAngle(<span class="number">180</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>, <span class="number">7</span>, Angle, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Delay.c</p><p>Delay.h</p><h2 id="2-3、PWM驱动直流电机"><a href="#2-3、PWM驱动直流电机" class="headerlink" title="2.3、PWM驱动直流电机"></a>2.3、PWM驱动直流电机</h2><p><strong>功能实现：</strong>通过按键控制舵机旋转速度</p><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC3Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare3</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare3(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare3</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Motor.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">PWM_Init();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_SetSpeed</span><span class="params">(<span class="type">int8_t</span> Speed)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_4);</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_5);</span><br><span class="line"><span class="comment">//设置速度</span></span><br><span class="line">PWM_SetCompare3(Speed);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOA, GPIO_Pin_4);</span><br><span class="line">GPIO_SetBits(GPIOA, GPIO_Pin_5);</span><br><span class="line"><span class="comment">//设置速度</span></span><br><span class="line">PWM_SetCompare3(-Speed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Motor.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MOTOR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MOTOR_H</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Motor_SetSpeed</span><span class="params">(<span class="type">int8_t</span> Speed)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Motor.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNum;</span><br><span class="line"><span class="type">int8_t</span> Speed;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Motor_Init();</span><br><span class="line">Key_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;Speed:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNum = Key_GetNum();</span><br><span class="line"><span class="keyword">if</span> (KeyNum == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed += <span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span> (Speed &gt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">Speed = <span class="number">-100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Motor_SetSpeed(Speed);</span><br><span class="line">OLED_ShowSignedNum(<span class="number">1</span>, <span class="number">7</span>, Speed, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Delay.c</p><p>Delay.h</p><h1 id="七、TIM输入捕获"><a href="#七、TIM输入捕获" class="headerlink" title="七、TIM输入捕获"></a>七、TIM输入捕获</h1><p>IC（Input Capture）输入捕获</p><p>输入捕获模式下，当通道输入引脚出现指定电平跳变时，当前CNT的值将被锁存到CCR中，可用于测量PWM波形的频率、占空比、脉冲间隔、电平持续时间等参数</p><p>每个高级定时器和通用定时器都拥有4个输入捕获通道</p><p>可配置为PWMI模式，同时测量频率和占空比</p><p>可配合主从触发模式，实现硬件全自动测量</p><h2 id="7-1频率测量"><a href="#7-1频率测量" class="headerlink" title="7.1频率测量"></a>7.1频率测量</h2><p>测频法：在闸门时间T内，对上升沿计次，得到N，则频率【f<del>x</del>&#x3D;N &#x2F; T】</p><p>测周法：两个上升沿内，以标准频率fc计次，得到N ，则频率【f<del>x</del>&#x3D;f<del>c</del>&#x2F; N】</p><p>中界频率：测频法与测周法误差相等的频率点【f<del>m</del>&#x3D;√(f<del>c</del>&#x2F; T)】</p><img src="https://s2.loli.net/2022/12/01/iwBxrNQ9lemUspj.png" alt="image-20221201160008905" style="zoom:80%;" /><h2 id="7-2输入捕获通道"><a href="#7-2输入捕获通道" class="headerlink" title="7.2输入捕获通道"></a>7.2输入捕获通道</h2><img src="https://s2.loli.net/2022/12/01/qOAbiGTH2BruX5Z.png" alt="image-20221201161146355" style="zoom: 60%;" /><img src="https://s2.loli.net/2022/12/01/5y3ou7gYpJHS1mj.png" alt="image-20221201164341495" style="zoom:67%;" /><h2 id="7-3主从触发模式"><a href="#7-3主从触发模式" class="headerlink" title="7.3主从触发模式"></a>7.3主从触发模式</h2><img src="https://s2.loli.net/2022/12/01/QTKJ9ghsqVcHA8u.png" alt="image-20221201164809908" style="zoom:67%;" /><h2 id="7-4两种捕获方式基本结构"><a href="#7-4两种捕获方式基本结构" class="headerlink" title="7.4两种捕获方式基本结构"></a>7.4两种捕获方式基本结构</h2><h3 id="7-4-1输入捕获基本结构"><a href="#7-4-1输入捕获基本结构" class="headerlink" title="7.4.1输入捕获基本结构"></a>7.4.1输入捕获基本结构</h3><p>触发源选择只有TI1和TI2，没有TI3和TI4，如果使用从模式自动清零CNT只能使用通道1和通道2</p><p>如果使用通道3和通道4只能开启捕获中断，手动清零</p><img src="https://s2.loli.net/2022/12/01/gXKEVBmvhZp8HGt.png" alt="image-20221201165935357" style="zoom:67%;" /><h3 id="7-4-2PWMI基本结构"><a href="#7-4-2PWMI基本结构" class="headerlink" title="7.4.2PWMI基本结构"></a>7.4.2PWMI基本结构</h3><img src="https://s2.loli.net/2022/12/01/aye2dWLN4b1qkYZ.png" alt="image-20221201170120062" style="zoom:67%;" /><h1 id="实例三、输入捕获模式测频率-amp-PWMI模式测频率占空比"><a href="#实例三、输入捕获模式测频率-amp-PWMI模式测频率占空比" class="headerlink" title="实例三、输入捕获模式测频率&amp;PWMI模式测频率占空比"></a>实例三、输入捕获模式测频率&amp;PWMI模式测频率占空比</h1><h2 id="3-1、输入捕获模式测频率"><a href="#3-1、输入捕获模式测频率" class="headerlink" title="3.1、输入捕获模式测频率"></a>3.1、输入捕获模式测频率</h2><p><strong>功能实现</strong>：PA0口输出，PA6口测量</p><p>IC.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM3是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"><span class="comment">//配置捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//选择分频器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;</span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置TRGI的触发源</span></span><br><span class="line">TIM_SelectInputTrigger(TIM3, TIM_TS_TI1FP1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置从模式</span></span><br><span class="line">TIM_SelectSlaveMode(TIM3, TIM_SlaveMode_Reset);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000000</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IC.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span><span class="comment">//改变占空比</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span><span class="comment">//改变频率</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_PrescalerConfig(TIM2, Prescaler, TIM_PSCReloadMode_Update);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IC.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line">IC_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Freq:00000HZ&quot;</span>);</span><br><span class="line">PWM_SetCompare1(<span class="number">50</span>);</span><br><span class="line">PWM_SetPrescaler(<span class="number">720</span><span class="number">-1</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">6</span>,IC_GetFreq(),<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><p>OLED.h</p><h2 id="3-2、PWMI模式测量占空比"><a href="#3-2、PWMI模式测量占空比" class="headerlink" title="3.2、PWMI模式测量占空比"></a>3.2、PWMI模式测量占空比</h2><p><strong>功能实现</strong>：PA0口输出，PA6口测量，双通道分别测量频率和占空比</p><p><strong>注意</strong>：可以使用TIM_PWMIConfig函数直接配置另一个通道</p><p>IC.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM3是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM3);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">72</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;<span class="comment">//极性</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;<span class="comment">//选择分频器</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置另一个通道的参数</span></span><br><span class="line">TIM_PWMIConfig(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置TRGI的触发源</span></span><br><span class="line">TIM_SelectInputTrigger(TIM3, TIM_TS_TI1FP1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置从模式</span></span><br><span class="line">TIM_SelectSlaveMode(TIM3, TIM_SlaveMode_Reset);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000000</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetDuty</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (TIM_GetCapture2(TIM3) + <span class="number">1</span>) * <span class="number">100</span> / (TIM_GetCapture1(TIM3) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IC.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __IC_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __IC_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">IC_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetFreq</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">IC_GetDuty</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">100</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">720</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化输出比较单元</span></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure;</span><br><span class="line"><span class="comment">//不论是否使用，都先赋一个初值，避免出现奇奇怪怪的错误。赋值后再更改需要的参数即可</span></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//结构体赋初始值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="comment">//设置输出比较模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="comment">//设置输出比较极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>;<span class="comment">//设置CCR</span></span><br><span class="line">TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span><span class="comment">//改变占空比</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2, Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span><span class="comment">//改变频率</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_PrescalerConfig(TIM2, Prescaler, TIM_PSCReloadMode_Update);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __PWM_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __PWM_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetPrescaler</span><span class="params">(<span class="type">uint16_t</span> Prescaler)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;IC.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">PWM_Init();</span><br><span class="line">IC_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Freq:00000HZ&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;Duty:00%&quot;</span>);</span><br><span class="line">PWM_SetPrescaler(<span class="number">7200</span><span class="number">-1</span>);</span><br><span class="line">PWM_SetCompare1(<span class="number">90</span>);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">6</span>,IC_GetFreq(),<span class="number">5</span>);</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">6</span>,IC_GetDuty(),<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><p>OLED.h</p><h1 id="八、TIM编码器接口"><a href="#八、TIM编码器接口" class="headerlink" title="八、TIM编码器接口"></a>八、TIM编码器接口</h1><p>Encoder Interface 编码器接口</p><p>编码器接口可接收增量（正交）编码器的信号，根据编码器旋转产生的正交信号脉冲，<strong>自动控制</strong>CNT自增或自减，从而指示编码器的位置、旋转方向和旋转速度</p><p>每个高级定时器和通用定时器都拥有1个编码器接口</p><p>两个输入引脚借用了输入捕获的通道1和通道2</p><h2 id="8-1正交编码器"><a href="#8-1正交编码器" class="headerlink" title="8.1正交编码器"></a>8.1正交编码器</h2><p>正交信号：正转和反转的位相相差90°</p><p>正交信号的优势：精度高、可以抗噪声</p><img src="https://s2.loli.net/2022/12/05/AfoNHy53CXz1uEx.png" alt="image-20221205152215829" style="zoom:67%;" /><h2 id="8-2编码器接口基本结构"><a href="#8-2编码器接口基本结构" class="headerlink" title="8.2编码器接口基本结构"></a>8.2编码器接口基本结构</h2><p>参考手册框图：</p><img src="https://s2.loli.net/2022/12/05/Nfxs8T6S1ukdUFE.png" alt="image-20221205152823861" style="zoom: 50%;" /><p>简化原理图：</p><img src="https://s2.loli.net/2022/12/05/ZUFhknQsEprIGBw.png" alt="image-20221205154038636"  /><h2 id="8-3工作模式"><a href="#8-3工作模式" class="headerlink" title="8.3工作模式"></a>8.3工作模式</h2><img src="https://s2.loli.net/2022/12/05/38ndzXlUQWKbLO2.png" alt="image-20221205154147591" style="zoom: 50%;" /><h1 id="实例四编码器接口测速"><a href="#实例四编码器接口测速" class="headerlink" title="实例四编码器接口测速"></a>实例四编码器接口测速</h1><p>Encoder.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Encoder_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM3是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置GPIO</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6|GPIO_Pin_7;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//编码器接口是一个带方向控制的外部时钟，所以内部时钟不需要</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line"><span class="comment">//TIM_InternalClockConfig(TIM3);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">65536</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值，满量程，容易转换成负数</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">1</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值，不分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM3,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置捕获单元</span></span><br><span class="line">TIM_ICInitTypeDef TIM_ICInitStructure;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结构体配置不完整，所以需要默认初始化</span></span><br><span class="line"><span class="comment">//通道1</span></span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//后面仍会配置极性，后面的会覆盖前面的，可以删去</span></span><br><span class="line"><span class="comment">//TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;//极性，上升沿，不反向</span></span><br><span class="line"><span class="comment">//这两项编码器用不到，可以删去，但是删去后结构体配置不完整，需要初始化一下</span></span><br><span class="line"><span class="comment">//TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;//选择分频器</span></span><br><span class="line"><span class="comment">//TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;</span></span><br><span class="line"></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置通道2</span></span><br><span class="line">TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;<span class="comment">//选择通道</span></span><br><span class="line">TIM_ICInitStructure.TIM_ICFilter = <span class="number">0xF</span>;<span class="comment">//选择输入捕获滤波器</span></span><br><span class="line">TIM_ICInit(TIM3,&amp;TIM_ICInitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置编码器接口</span></span><br><span class="line">    TIM_EncoderInterfaceConfig(TIM3,TIM_EncoderMode_TI12,TIM_ICPolarity_Rising,TIM_ICPolarity_Rising);</span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM3,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int16_t</span> <span class="title function_">Encoder_Get</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="type">int16_t</span> temp;</span><br><span class="line">temp = TIM_GetCounter(TIM3);</span><br><span class="line">TIM_SetCounter(TIM3,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Encoder.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __ENCODER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __ENCODER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Encoder_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">int16_t</span> <span class="title function_">Encoder_Get</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//开启时钟，TIM2是APB1的时钟外设</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//选择时基单元的时钟，可以不选，默认上电后选择内部时钟</span></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置时基单元</span></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="comment">//指定时钟分频</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="comment">//计数器模式</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period = <span class="number">10000</span> - <span class="number">1</span>;<span class="comment">//ARR自动重装器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="number">7200</span> - <span class="number">1</span>;<span class="comment">//PSC预分频器的值</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="number">0</span>;<span class="comment">//重复计数器的值，高级定时器使用</span></span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//手动清除中断标志位，避免刚初始化完就进入中断</span></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_IT_Update);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使能中断</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动定时器</span></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __TIMER_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __TIMER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Encoder.h&quot;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">int16_t</span> speed;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">Encoder_Init();</span><br><span class="line"></span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;SPEED:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123; </span><br><span class="line"><span class="comment">//OLED_ShowNum(1,5,num,5);</span></span><br><span class="line">OLED_ShowSignedNum(<span class="number">2</span>,<span class="number">1</span>,speed,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line"><span class="comment">//判断中断</span></span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)&#123;</span><br><span class="line">speed = Encoder_Get();</span><br><span class="line"><span class="comment">//清除中断标志位</span></span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>OLED.c</p><p>OLED.h</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
